[{"name":"public @interface AcceptsExternal","description":"io.spine.core.AcceptsExternal","location":"core/io.spine.core/-accepts-external/index.html","searchKeys":["AcceptsExternal","public @interface AcceptsExternal","io.spine.core.AcceptsExternal"]},{"name":"public @interface AcceptsFilters","description":"io.spine.core.AcceptsFilters","location":"core/io.spine.core/-accepts-filters/index.html","searchKeys":["AcceptsFilters","public @interface AcceptsFilters","io.spine.core.AcceptsFilters"]},{"name":"public @interface BoundedContext","description":"io.spine.core.BoundedContext","location":"core/io.spine.core/-bounded-context/index.html","searchKeys":["BoundedContext","public @interface BoundedContext","io.spine.core.BoundedContext"]},{"name":"public @interface ByField","description":"io.spine.core.ByField","location":"core/io.spine.core/-by-field/index.html","searchKeys":["ByField","public @interface ByField","io.spine.core.ByField"]},{"name":"public @interface External","description":"io.spine.core.External","location":"core/io.spine.core/-external/index.html","searchKeys":["External","public @interface External","io.spine.core.External"]},{"name":"public @interface Subscribe","description":"io.spine.core.Subscribe","location":"core/io.spine.core/-subscribe/index.html","searchKeys":["Subscribe","public @interface Subscribe","io.spine.core.Subscribe"]},{"name":"public @interface Where","description":"io.spine.core.Where","location":"core/io.spine.core/-where/index.html","searchKeys":["Where","public @interface Where","io.spine.core.Where"]},{"name":"public Builder identityBuilder()","description":"io.spine.core.Signal.identityBuilder","location":"core/io.spine.core/-signal/identity-builder.html","searchKeys":["identityBuilder","public Builder identityBuilder()","io.spine.core.Signal.identityBuilder"]},{"name":"public Class<? extends M> type()","description":"io.spine.core.Signal.type","location":"core/io.spine.core/-signal/type.html","searchKeys":["type","public Class<? extends M> type()","io.spine.core.Signal.type"]},{"name":"public C context()","description":"io.spine.core.Signal.context","location":"core/io.spine.core/-signal/context.html","searchKeys":["context","public C context()","io.spine.core.Signal.context"]},{"name":"public E get<E extends Message>(Class<E> cls)","description":"io.spine.core.EnrichableMessageContext.get","location":"core/io.spine.core/-enrichable-message-context/get.html","searchKeys":["get","public E get<E extends Message>(Class<E> cls)","io.spine.core.EnrichableMessageContext.get"]},{"name":"public Instant instant()","description":"io.spine.core.WithTime.instant","location":"core/io.spine.core/-with-time/instant.html","searchKeys":["instant","public Instant instant()","io.spine.core.WithTime.instant"]},{"name":"public I id()","description":"io.spine.core.Signal.id","location":"core/io.spine.core/-signal/id.html","searchKeys":["id","public I id()","io.spine.core.Signal.id"]},{"name":"public LocalDateTime localDateTime()","description":"io.spine.core.WithTime.localDateTime","location":"core/io.spine.core/-with-time/local-date-time.html","searchKeys":["localDateTime","public LocalDateTime localDateTime()","io.spine.core.WithTime.localDateTime"]},{"name":"public LocalDate localDate()","description":"io.spine.core.WithTime.localDate","location":"core/io.spine.core/-with-time/local-date.html","searchKeys":["localDate","public LocalDate localDate()","io.spine.core.WithTime.localDate"]},{"name":"public MessageId messageId()","description":"io.spine.core.Signal.messageId","location":"core/io.spine.core/-signal/message-id.html","searchKeys":["messageId","public MessageId messageId()","io.spine.core.Signal.messageId"]},{"name":"public M enclosedMessage()","description":"io.spine.core.Signal.enclosedMessage","location":"core/io.spine.core/-signal/enclosed-message.html","searchKeys":["enclosedMessage","public M enclosedMessage()","io.spine.core.Signal.enclosedMessage"]},{"name":"public Object readValue(FieldDescriptor field)","description":"io.spine.core.VersionMixin.readValue","location":"core/io.spine.core/-version-mixin/read-value.html","searchKeys":["readValue","public Object readValue(FieldDescriptor field)","io.spine.core.VersionMixin.readValue"]},{"name":"public Optional<E> find<E extends Message>(Class<E> cls)","description":"io.spine.core.EnrichableMessageContext.find","location":"core/io.spine.core/-enrichable-message-context/find.html","searchKeys":["find","public Optional<E> find<E extends Message>(Class<E> cls)","io.spine.core.EnrichableMessageContext.find"]},{"name":"public Optional<MessageId> parent()","description":"io.spine.core.Signal.parent","location":"core/io.spine.core/-signal/parent.html","searchKeys":["parent","public Optional<MessageId> parent()","io.spine.core.Signal.parent"]},{"name":"public Origin asMessageOrigin()","description":"io.spine.core.Signal.asMessageOrigin","location":"core/io.spine.core/-signal/as-message-origin.html","searchKeys":["asMessageOrigin","public Origin asMessageOrigin()","io.spine.core.Signal.asMessageOrigin"]},{"name":"public TenantId tenant()","description":"io.spine.core.WithActor.tenant","location":"core/io.spine.core/-with-actor/tenant.html","searchKeys":["tenant","public TenantId tenant()","io.spine.core.WithActor.tenant"]},{"name":"public TypeUrl enclosedTypeUrl()","description":"io.spine.core.Signal.enclosedTypeUrl","location":"core/io.spine.core/-signal/enclosed-type-url.html","searchKeys":["enclosedTypeUrl","public TypeUrl enclosedTypeUrl()","io.spine.core.Signal.enclosedTypeUrl"]},{"name":"public UserId actor()","description":"io.spine.core.WithActor.actor","location":"core/io.spine.core/-with-actor/actor.html","searchKeys":["actor","public UserId actor()","io.spine.core.WithActor.actor"]},{"name":"public abstract ActorContext actorContext()","description":"io.spine.core.WithActor.actorContext","location":"core/io.spine.core/-with-actor/actor-context.html","searchKeys":["actorContext","public abstract ActorContext actorContext()","io.spine.core.WithActor.actorContext"]},{"name":"public abstract Any getMessage()","description":"io.spine.core.Signal.getMessage","location":"core/io.spine.core/-signal/get-message.html","searchKeys":["getMessage","public abstract Any getMessage()","io.spine.core.Signal.getMessage"]},{"name":"public abstract ByField filter()","description":"io.spine.core.Subscribe.filter","location":"core/io.spine.core/-subscribe/filter.html","searchKeys":["filter","public abstract ByField filter()","io.spine.core.Subscribe.filter"]},{"name":"public abstract C getContext()","description":"io.spine.core.Signal.getContext","location":"core/io.spine.core/-signal/get-context.html","searchKeys":["getContext","public abstract C getContext()","io.spine.core.Signal.getContext"]},{"name":"public abstract Enrichment getEnrichment()","description":"io.spine.core.EnrichableMessageContext.getEnrichment","location":"core/io.spine.core/-enrichable-message-context/get-enrichment.html","searchKeys":["getEnrichment","public abstract Enrichment getEnrichment()","io.spine.core.EnrichableMessageContext.getEnrichment"]},{"name":"public abstract I getId()","description":"io.spine.core.Signal.getId","location":"core/io.spine.core/-signal/get-id.html","searchKeys":["getId","public abstract I getId()","io.spine.core.Signal.getId"]},{"name":"public abstract MessageId rootMessage()","description":"io.spine.core.Signal.rootMessage","location":"core/io.spine.core/-signal/root-message.html","searchKeys":["rootMessage","public abstract MessageId rootMessage()","io.spine.core.Signal.rootMessage"]},{"name":"public abstract Optional<Origin> origin()","description":"io.spine.core.Signal.origin","location":"core/io.spine.core/-signal/origin.html","searchKeys":["origin","public abstract Optional<Origin> origin()","io.spine.core.Signal.origin"]},{"name":"public abstract String equals()","description":"io.spine.core.Where.equals","location":"core/io.spine.core/-where/equals.html","searchKeys":["equals","public abstract String equals()","io.spine.core.Where.equals"]},{"name":"public abstract String field()","description":"io.spine.core.Where.field","location":"core/io.spine.core/-where/field.html","searchKeys":["field","public abstract String field()","io.spine.core.Where.field"]},{"name":"public abstract String path()","description":"io.spine.core.ByField.path","location":"core/io.spine.core/-by-field/path.html","searchKeys":["path","public abstract String path()","io.spine.core.ByField.path"]},{"name":"public abstract String value()","description":"io.spine.core.BoundedContext.value","location":"core/io.spine.core/-bounded-context/value.html","searchKeys":["value","public abstract String value()","io.spine.core.BoundedContext.value"]},{"name":"public abstract String value()","description":"io.spine.core.ByField.value","location":"core/io.spine.core/-by-field/value.html","searchKeys":["value","public abstract String value()","io.spine.core.ByField.value"]},{"name":"public abstract String value()","description":"io.spine.core.SignalId.value","location":"core/io.spine.core/-signal-id/value.html","searchKeys":["value","public abstract String value()","io.spine.core.SignalId.value"]},{"name":"public abstract Timestamp timestamp()","description":"io.spine.core.WithTime.timestamp","location":"core/io.spine.core/-with-time/timestamp.html","searchKeys":["timestamp","public abstract Timestamp timestamp()","io.spine.core.WithTime.timestamp"]},{"name":"public abstract boolean external()","description":"io.spine.core.Subscribe.external","location":"core/io.spine.core/-subscribe/external.html","searchKeys":["external","public abstract boolean external()","io.spine.core.Subscribe.external"]},{"name":"public boolean is(Class<? extends Message> enclosedMessageClass)","description":"io.spine.core.Signal.is","location":"core/io.spine.core/-signal/is.html","searchKeys":["is","public boolean is(Class<? extends Message> enclosedMessageClass)","io.spine.core.Signal.is"]},{"name":"public boolean isAfter(Timestamp bound)","description":"io.spine.core.WithTime.isAfter","location":"core/io.spine.core/-with-time/is-after.html","searchKeys":["isAfter","public boolean isAfter(Timestamp bound)","io.spine.core.WithTime.isAfter"]},{"name":"public boolean isBefore(Timestamp bound)","description":"io.spine.core.WithTime.isBefore","location":"core/io.spine.core/-with-time/is-before.html","searchKeys":["isBefore","public boolean isBefore(Timestamp bound)","io.spine.core.WithTime.isBefore"]},{"name":"public boolean isBetween(Timestamp periodStart, Timestamp periodEnd)","description":"io.spine.core.WithTime.isBetween","location":"core/io.spine.core/-with-time/is-between.html","searchKeys":["isBetween","public boolean isBetween(Timestamp periodStart, Timestamp periodEnd)","io.spine.core.WithTime.isBetween"]},{"name":"public boolean isDecrement(VersionOrBuilder other)","description":"io.spine.core.VersionMixin.isDecrement","location":"core/io.spine.core/-version-mixin/is-decrement.html","searchKeys":["isDecrement","public boolean isDecrement(VersionOrBuilder other)","io.spine.core.VersionMixin.isDecrement"]},{"name":"public boolean isDecrementOrEqual(VersionOrBuilder other)","description":"io.spine.core.VersionMixin.isDecrementOrEqual","location":"core/io.spine.core/-version-mixin/is-decrement-or-equal.html","searchKeys":["isDecrementOrEqual","public boolean isDecrementOrEqual(VersionOrBuilder other)","io.spine.core.VersionMixin.isDecrementOrEqual"]},{"name":"public boolean isIncrement(VersionOrBuilder other)","description":"io.spine.core.VersionMixin.isIncrement","location":"core/io.spine.core/-version-mixin/is-increment.html","searchKeys":["isIncrement","public boolean isIncrement(VersionOrBuilder other)","io.spine.core.VersionMixin.isIncrement"]},{"name":"public boolean isIncrementOrEqual(VersionOrBuilder other)","description":"io.spine.core.VersionMixin.isIncrementOrEqual","location":"core/io.spine.core/-version-mixin/is-increment-or-equal.html","searchKeys":["isIncrementOrEqual","public boolean isIncrementOrEqual(VersionOrBuilder other)","io.spine.core.VersionMixin.isIncrementOrEqual"]},{"name":"public class EventContextField","description":"io.spine.core.EventContextField","location":"core/io.spine.core/-event-context-field/index.html","searchKeys":["EventContextField","public class EventContextField","io.spine.core.EventContextField"]},{"name":"public final class Acks","description":"io.spine.core.Acks","location":"core/io.spine.core/-acks/index.html","searchKeys":["Acks","public final class Acks","io.spine.core.Acks"]},{"name":"public final class BooleanMismatch","description":"io.spine.change.BooleanMismatch","location":"core/io.spine.change/-boolean-mismatch/index.html","searchKeys":["BooleanMismatch","public final class BooleanMismatch","io.spine.change.BooleanMismatch"]},{"name":"public final class BoundedContextNames","description":"io.spine.core.BoundedContextNames","location":"core/io.spine.core/-bounded-context-names/index.html","searchKeys":["BoundedContextNames","public final class BoundedContextNames","io.spine.core.BoundedContextNames"]},{"name":"public final class Changes","description":"io.spine.change.Changes","location":"core/io.spine.change/-changes/index.html","searchKeys":["Changes","public final class Changes","io.spine.change.Changes"]},{"name":"public final class Commands","description":"io.spine.core.Commands","location":"core/io.spine.core/-commands/index.html","searchKeys":["Commands","public final class Commands","io.spine.core.Commands"]},{"name":"public final class DoubleMismatch","description":"io.spine.change.DoubleMismatch","location":"core/io.spine.change/-double-mismatch/index.html","searchKeys":["DoubleMismatch","public final class DoubleMismatch","io.spine.change.DoubleMismatch"]},{"name":"public final class Events","description":"io.spine.core.Events","location":"core/io.spine.core/-events/index.html","searchKeys":["Events","public final class Events","io.spine.core.Events"]},{"name":"public final class FloatMismatch","description":"io.spine.change.FloatMismatch","location":"core/io.spine.change/-float-mismatch/index.html","searchKeys":["FloatMismatch","public final class FloatMismatch","io.spine.change.FloatMismatch"]},{"name":"public final class IntMismatch","description":"io.spine.change.IntMismatch","location":"core/io.spine.change/-int-mismatch/index.html","searchKeys":["IntMismatch","public final class IntMismatch","io.spine.change.IntMismatch"]},{"name":"public final class LongMismatch","description":"io.spine.change.LongMismatch","location":"core/io.spine.change/-long-mismatch/index.html","searchKeys":["LongMismatch","public final class LongMismatch","io.spine.change.LongMismatch"]},{"name":"public final class MessageMismatch","description":"io.spine.change.MessageMismatch","location":"core/io.spine.change/-message-mismatch/index.html","searchKeys":["MessageMismatch","public final class MessageMismatch","io.spine.change.MessageMismatch"]},{"name":"public final class Responses","description":"io.spine.core.Responses","location":"core/io.spine.core/-responses/index.html","searchKeys":["Responses","public final class Responses","io.spine.core.Responses"]},{"name":"public final class StringMismatch","description":"io.spine.change.StringMismatch","location":"core/io.spine.change/-string-mismatch/index.html","searchKeys":["StringMismatch","public final class StringMismatch","io.spine.change.StringMismatch"]},{"name":"public final class Versions","description":"io.spine.core.Versions","location":"core/io.spine.core/-versions/index.html","searchKeys":["Versions","public final class Versions","io.spine.core.Versions"]},{"name":"public interface EnrichableMessageContext","description":"io.spine.core.EnrichableMessageContext","location":"core/io.spine.core/-enrichable-message-context/index.html","searchKeys":["EnrichableMessageContext","public interface EnrichableMessageContext","io.spine.core.EnrichableMessageContext"]},{"name":"public interface Signal<I extends SignalId, M extends KnownMessage, C extends MessageContext> implements WithActor, WithTime","description":"io.spine.core.Signal","location":"core/io.spine.core/-signal/index.html","searchKeys":["Signal","public interface Signal<I extends SignalId, M extends KnownMessage, C extends MessageContext> implements WithActor, WithTime","io.spine.core.Signal"]},{"name":"public interface SignalContext implements WithActor","description":"io.spine.core.SignalContext","location":"core/io.spine.core/-signal-context/index.html","searchKeys":["SignalContext","public interface SignalContext implements WithActor","io.spine.core.SignalContext"]},{"name":"public interface SignalId","description":"io.spine.core.SignalId","location":"core/io.spine.core/-signal-id/index.html","searchKeys":["SignalId","public interface SignalId","io.spine.core.SignalId"]},{"name":"public interface VersionMixin","description":"io.spine.core.VersionMixin","location":"core/io.spine.core/-version-mixin/index.html","searchKeys":["VersionMixin","public interface VersionMixin","io.spine.core.VersionMixin"]},{"name":"public interface WithActor","description":"io.spine.core.WithActor","location":"core/io.spine.core/-with-actor/index.html","searchKeys":["WithActor","public interface WithActor","io.spine.core.WithActor"]},{"name":"public interface WithTime","description":"io.spine.core.WithTime","location":"core/io.spine.core/-with-time/index.html","searchKeys":["WithTime","public interface WithTime","io.spine.core.WithTime"]},{"name":"public static BooleanChange of(boolean previousValue, boolean newValue)","description":"io.spine.change.Changes.of","location":"core/io.spine.change/-changes/of.html","searchKeys":["of","public static BooleanChange of(boolean previousValue, boolean newValue)","io.spine.change.Changes.of"]},{"name":"public static BoundedContextName assumingTests()","description":"io.spine.core.BoundedContextNames.assumingTests","location":"core/io.spine.core/-bounded-context-names/assuming-tests.html","searchKeys":["assumingTests","public static BoundedContextName assumingTests()","io.spine.core.BoundedContextNames.assumingTests"]},{"name":"public static BoundedContextName newName(String name)","description":"io.spine.core.BoundedContextNames.newName","location":"core/io.spine.core/-bounded-context-names/new-name.html","searchKeys":["newName","public static BoundedContextName newName(String name)","io.spine.core.BoundedContextNames.newName"]},{"name":"public static BytesChange of(ByteString previousValue, ByteString newValue)","description":"io.spine.change.Changes.of","location":"core/io.spine.change/-changes/of.html","searchKeys":["of","public static BytesChange of(ByteString previousValue, ByteString newValue)","io.spine.change.Changes.of"]},{"name":"public static CommandId toCommandId(Ack ack)","description":"io.spine.core.Acks.toCommandId","location":"core/io.spine.core/-acks/to-command-id.html","searchKeys":["toCommandId","public static CommandId toCommandId(Ack ack)","io.spine.core.Acks.toCommandId"]},{"name":"public static CommandMessage ensureMessage(Message commandOrMessage)","description":"io.spine.core.Commands.ensureMessage","location":"core/io.spine.core/-commands/ensure-message.html","searchKeys":["ensureMessage","public static CommandMessage ensureMessage(Message commandOrMessage)","io.spine.core.Commands.ensureMessage"]},{"name":"public static DoubleChange of(double previousValue, double newValue)","description":"io.spine.change.Changes.of","location":"core/io.spine.change/-changes/of.html","searchKeys":["of","public static DoubleChange of(double previousValue, double newValue)","io.spine.change.Changes.of"]},{"name":"public static EventId checkValid(EventId id)","description":"io.spine.core.Events.checkValid","location":"core/io.spine.core/-events/check-valid.html","searchKeys":["checkValid","public static EventId checkValid(EventId id)","io.spine.core.Events.checkValid"]},{"name":"public static EventId generateId()","description":"io.spine.core.Events.generateId","location":"core/io.spine.core/-events/generate-id.html","searchKeys":["generateId","public static EventId generateId()","io.spine.core.Events.generateId"]},{"name":"public static EventMessage ensureMessage(Message eventOrMessage)","description":"io.spine.core.Events.ensureMessage","location":"core/io.spine.core/-events/ensure-message.html","searchKeys":["ensureMessage","public static EventMessage ensureMessage(Message eventOrMessage)","io.spine.core.Events.ensureMessage"]},{"name":"public static Event toExternal(Event event)","description":"io.spine.core.Events.toExternal","location":"core/io.spine.core/-events/to-external.html","searchKeys":["toExternal","public static Event toExternal(Event event)","io.spine.core.Events.toExternal"]},{"name":"public static Fixed32Change ofFixed32(int previousValue, int newValue)","description":"io.spine.change.Changes.ofFixed32","location":"core/io.spine.change/-changes/of-fixed32.html","searchKeys":["ofFixed32","public static Fixed32Change ofFixed32(int previousValue, int newValue)","io.spine.change.Changes.ofFixed32"]},{"name":"public static Fixed64Change ofFixed64(long previousValue, long newValue)","description":"io.spine.change.Changes.ofFixed64","location":"core/io.spine.change/-changes/of-fixed64.html","searchKeys":["ofFixed64","public static Fixed64Change ofFixed64(long previousValue, long newValue)","io.spine.change.Changes.ofFixed64"]},{"name":"public static FloatChange of(float previousValue, float newValue)","description":"io.spine.change.Changes.of","location":"core/io.spine.change/-changes/of.html","searchKeys":["of","public static FloatChange of(float previousValue, float newValue)","io.spine.change.Changes.of"]},{"name":"public static ImmutableList<Event> toExternal(List<Event> events)","description":"io.spine.core.Events.toExternal","location":"core/io.spine.core/-events/to-external.html","searchKeys":["toExternal","public static ImmutableList<Event> toExternal(List<Event> events)","io.spine.core.Events.toExternal"]},{"name":"public static Int32Change ofInt32(int previousValue, int newValue)","description":"io.spine.change.Changes.ofInt32","location":"core/io.spine.change/-changes/of-int32.html","searchKeys":["ofInt32","public static Int32Change ofInt32(int previousValue, int newValue)","io.spine.change.Changes.ofInt32"]},{"name":"public static Int64Change ofInt64(long previousValue, long newValue)","description":"io.spine.change.Changes.ofInt64","location":"core/io.spine.change/-changes/of-int64.html","searchKeys":["ofInt64","public static Int64Change ofInt64(long previousValue, long newValue)","io.spine.change.Changes.ofInt64"]},{"name":"public static Iterable<M> nothing<M extends EventMessage>()","description":"io.spine.core.Events.nothing","location":"core/io.spine.core/-events/nothing.html","searchKeys":["nothing","public static Iterable<M> nothing<M extends EventMessage>()","io.spine.core.Events.nothing"]},{"name":"public static Message unpackActual(ValueMismatch mismatch)","description":"io.spine.change.MessageMismatch.unpackActual","location":"core/io.spine.change/-message-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static Message unpackActual(ValueMismatch mismatch)","io.spine.change.MessageMismatch.unpackActual"]},{"name":"public static Message unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.MessageMismatch.unpackExpected","location":"core/io.spine.change/-message-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static Message unpackExpected(ValueMismatch mismatch)","io.spine.change.MessageMismatch.unpackExpected"]},{"name":"public static Message unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.MessageMismatch.unpackNewValue","location":"core/io.spine.change/-message-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static Message unpackNewValue(ValueMismatch mismatch)","io.spine.change.MessageMismatch.unpackNewValue"]},{"name":"public static Response ok()","description":"io.spine.core.Responses.ok","location":"core/io.spine.core/-responses/ok.html","searchKeys":["ok","public static Response ok()","io.spine.core.Responses.ok"]},{"name":"public static SInt32Change ofSInt32(int previousValue, int newValue)","description":"io.spine.change.Changes.ofSInt32","location":"core/io.spine.change/-changes/of-s-int32.html","searchKeys":["ofSInt32","public static SInt32Change ofSInt32(int previousValue, int newValue)","io.spine.change.Changes.ofSInt32"]},{"name":"public static SInt64Change ofSInt64(long previousValue, long newValue)","description":"io.spine.change.Changes.ofSInt64","location":"core/io.spine.change/-changes/of-s-int64.html","searchKeys":["ofSInt64","public static SInt64Change ofSInt64(long previousValue, long newValue)","io.spine.change.Changes.ofSInt64"]},{"name":"public static Sfixed32Change ofSfixed32(int previousValue, int newValue)","description":"io.spine.change.Changes.ofSfixed32","location":"core/io.spine.change/-changes/of-sfixed32.html","searchKeys":["ofSfixed32","public static Sfixed32Change ofSfixed32(int previousValue, int newValue)","io.spine.change.Changes.ofSfixed32"]},{"name":"public static Sfixed64Change ofSfixed64(long previousValue, long newValue)","description":"io.spine.change.Changes.ofSfixed64","location":"core/io.spine.change/-changes/of-sfixed64.html","searchKeys":["ofSfixed64","public static Sfixed64Change ofSfixed64(long previousValue, long newValue)","io.spine.change.Changes.ofSfixed64"]},{"name":"public static Status statusOk()","description":"io.spine.core.Responses.statusOk","location":"core/io.spine.core/-responses/status-ok.html","searchKeys":["statusOk","public static Status statusOk()","io.spine.core.Responses.statusOk"]},{"name":"public static StringChange of(String previousValue, String newValue)","description":"io.spine.change.Changes.of","location":"core/io.spine.change/-changes/of.html","searchKeys":["of","public static StringChange of(String previousValue, String newValue)","io.spine.change.Changes.of"]},{"name":"public static Stringifier<CommandId> idStringifier()","description":"io.spine.core.Commands.idStringifier","location":"core/io.spine.core/-commands/id-stringifier.html","searchKeys":["idStringifier","public static Stringifier<CommandId> idStringifier()","io.spine.core.Commands.idStringifier"]},{"name":"public static Stringifier<EventId> idStringifier()","description":"io.spine.core.Events.idStringifier","location":"core/io.spine.core/-events/id-stringifier.html","searchKeys":["idStringifier","public static Stringifier<EventId> idStringifier()","io.spine.core.Events.idStringifier"]},{"name":"public static String assumingTestsValue()","description":"io.spine.core.BoundedContextNames.assumingTestsValue","location":"core/io.spine.core/-bounded-context-names/assuming-tests-value.html","searchKeys":["assumingTestsValue","public static String assumingTestsValue()","io.spine.core.BoundedContextNames.assumingTestsValue"]},{"name":"public static String unpackActual(ValueMismatch mismatch)","description":"io.spine.change.StringMismatch.unpackActual","location":"core/io.spine.change/-string-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static String unpackActual(ValueMismatch mismatch)","io.spine.change.StringMismatch.unpackActual"]},{"name":"public static String unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.StringMismatch.unpackExpected","location":"core/io.spine.change/-string-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static String unpackExpected(ValueMismatch mismatch)","io.spine.change.StringMismatch.unpackExpected"]},{"name":"public static String unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.StringMismatch.unpackNewValue","location":"core/io.spine.change/-string-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static String unpackNewValue(ValueMismatch mismatch)","io.spine.change.StringMismatch.unpackNewValue"]},{"name":"public static TimestampChange of(Timestamp previousValue, Timestamp newValue)","description":"io.spine.change.Changes.of","location":"core/io.spine.change/-changes/of.html","searchKeys":["of","public static TimestampChange of(Timestamp previousValue, Timestamp newValue)","io.spine.change.Changes.of"]},{"name":"public static UInt32Change ofUInt32(int previousValue, int newValue)","description":"io.spine.change.Changes.ofUInt32","location":"core/io.spine.change/-changes/of-u-int32.html","searchKeys":["ofUInt32","public static UInt32Change ofUInt32(int previousValue, int newValue)","io.spine.change.Changes.ofUInt32"]},{"name":"public static UInt64Change ofUInt64(long previousValue, long newValue)","description":"io.spine.change.Changes.ofUInt64","location":"core/io.spine.change/-changes/of-u-int64.html","searchKeys":["ofUInt64","public static UInt64Change ofUInt64(long previousValue, long newValue)","io.spine.change.Changes.ofUInt64"]},{"name":"public static ValueMismatch expectedDefault(Message actual, Message newValue, int version)","description":"io.spine.change.MessageMismatch.expectedDefault","location":"core/io.spine.change/-message-mismatch/expected-default.html","searchKeys":["expectedDefault","public static ValueMismatch expectedDefault(Message actual, Message newValue, int version)","io.spine.change.MessageMismatch.expectedDefault"]},{"name":"public static ValueMismatch expectedEmpty(String actual, String newValue, int version)","description":"io.spine.change.StringMismatch.expectedEmpty","location":"core/io.spine.change/-string-mismatch/expected-empty.html","searchKeys":["expectedEmpty","public static ValueMismatch expectedEmpty(String actual, String newValue, int version)","io.spine.change.StringMismatch.expectedEmpty"]},{"name":"public static ValueMismatch expectedFalse(int version)","description":"io.spine.change.BooleanMismatch.expectedFalse","location":"core/io.spine.change/-boolean-mismatch/expected-false.html","searchKeys":["expectedFalse","public static ValueMismatch expectedFalse(int version)","io.spine.change.BooleanMismatch.expectedFalse"]},{"name":"public static ValueMismatch expectedNonZero(double expected, double newValue, int version)","description":"io.spine.change.DoubleMismatch.expectedNonZero","location":"core/io.spine.change/-double-mismatch/expected-non-zero.html","searchKeys":["expectedNonZero","public static ValueMismatch expectedNonZero(double expected, double newValue, int version)","io.spine.change.DoubleMismatch.expectedNonZero"]},{"name":"public static ValueMismatch expectedNonZero(float expected, float newValue, int version)","description":"io.spine.change.FloatMismatch.expectedNonZero","location":"core/io.spine.change/-float-mismatch/expected-non-zero.html","searchKeys":["expectedNonZero","public static ValueMismatch expectedNonZero(float expected, float newValue, int version)","io.spine.change.FloatMismatch.expectedNonZero"]},{"name":"public static ValueMismatch expectedNonZero(int expected, int newValue, int version)","description":"io.spine.change.IntMismatch.expectedNonZero","location":"core/io.spine.change/-int-mismatch/expected-non-zero.html","searchKeys":["expectedNonZero","public static ValueMismatch expectedNonZero(int expected, int newValue, int version)","io.spine.change.IntMismatch.expectedNonZero"]},{"name":"public static ValueMismatch expectedNonZero(long expected, long newValue, int version)","description":"io.spine.change.LongMismatch.expectedNonZero","location":"core/io.spine.change/-long-mismatch/expected-non-zero.html","searchKeys":["expectedNonZero","public static ValueMismatch expectedNonZero(long expected, long newValue, int version)","io.spine.change.LongMismatch.expectedNonZero"]},{"name":"public static ValueMismatch expectedNotDefault(Message expected, Message newValue, int version)","description":"io.spine.change.MessageMismatch.expectedNotDefault","location":"core/io.spine.change/-message-mismatch/expected-not-default.html","searchKeys":["expectedNotDefault","public static ValueMismatch expectedNotDefault(Message expected, Message newValue, int version)","io.spine.change.MessageMismatch.expectedNotDefault"]},{"name":"public static ValueMismatch expectedNotDefault(Message expected, int version)","description":"io.spine.change.MessageMismatch.expectedNotDefault","location":"core/io.spine.change/-message-mismatch/expected-not-default.html","searchKeys":["expectedNotDefault","public static ValueMismatch expectedNotDefault(Message expected, int version)","io.spine.change.MessageMismatch.expectedNotDefault"]},{"name":"public static ValueMismatch expectedNotEmpty(String expected, int version)","description":"io.spine.change.StringMismatch.expectedNotEmpty","location":"core/io.spine.change/-string-mismatch/expected-not-empty.html","searchKeys":["expectedNotEmpty","public static ValueMismatch expectedNotEmpty(String expected, int version)","io.spine.change.StringMismatch.expectedNotEmpty"]},{"name":"public static ValueMismatch expectedTrue(int version)","description":"io.spine.change.BooleanMismatch.expectedTrue","location":"core/io.spine.change/-boolean-mismatch/expected-true.html","searchKeys":["expectedTrue","public static ValueMismatch expectedTrue(int version)","io.spine.change.BooleanMismatch.expectedTrue"]},{"name":"public static ValueMismatch expectedZero(double actual, double newValue, int version)","description":"io.spine.change.DoubleMismatch.expectedZero","location":"core/io.spine.change/-double-mismatch/expected-zero.html","searchKeys":["expectedZero","public static ValueMismatch expectedZero(double actual, double newValue, int version)","io.spine.change.DoubleMismatch.expectedZero"]},{"name":"public static ValueMismatch expectedZero(float actual, float newValue, int version)","description":"io.spine.change.FloatMismatch.expectedZero","location":"core/io.spine.change/-float-mismatch/expected-zero.html","searchKeys":["expectedZero","public static ValueMismatch expectedZero(float actual, float newValue, int version)","io.spine.change.FloatMismatch.expectedZero"]},{"name":"public static ValueMismatch expectedZero(int actual, int newValue, int version)","description":"io.spine.change.IntMismatch.expectedZero","location":"core/io.spine.change/-int-mismatch/expected-zero.html","searchKeys":["expectedZero","public static ValueMismatch expectedZero(int actual, int newValue, int version)","io.spine.change.IntMismatch.expectedZero"]},{"name":"public static ValueMismatch expectedZero(long actual, long newValue, int version)","description":"io.spine.change.LongMismatch.expectedZero","location":"core/io.spine.change/-long-mismatch/expected-zero.html","searchKeys":["expectedZero","public static ValueMismatch expectedZero(long actual, long newValue, int version)","io.spine.change.LongMismatch.expectedZero"]},{"name":"public static ValueMismatch of(double expected, double actual, double newValue, int version)","description":"io.spine.change.DoubleMismatch.of","location":"core/io.spine.change/-double-mismatch/of.html","searchKeys":["of","public static ValueMismatch of(double expected, double actual, double newValue, int version)","io.spine.change.DoubleMismatch.of"]},{"name":"public static ValueMismatch of(float expected, float actual, float newValue, int version)","description":"io.spine.change.FloatMismatch.of","location":"core/io.spine.change/-float-mismatch/of.html","searchKeys":["of","public static ValueMismatch of(float expected, float actual, float newValue, int version)","io.spine.change.FloatMismatch.of"]},{"name":"public static ValueMismatch of(int expected, int actual, int newValue, int version)","description":"io.spine.change.IntMismatch.of","location":"core/io.spine.change/-int-mismatch/of.html","searchKeys":["of","public static ValueMismatch of(int expected, int actual, int newValue, int version)","io.spine.change.IntMismatch.of"]},{"name":"public static ValueMismatch of(long expected, long actual, long newValue, int version)","description":"io.spine.change.LongMismatch.of","location":"core/io.spine.change/-long-mismatch/of.html","searchKeys":["of","public static ValueMismatch of(long expected, long actual, long newValue, int version)","io.spine.change.LongMismatch.of"]},{"name":"public static ValueMismatch unexpectedValue(Message expected, Message actual, Message newValue, int version)","description":"io.spine.change.MessageMismatch.unexpectedValue","location":"core/io.spine.change/-message-mismatch/unexpected-value.html","searchKeys":["unexpectedValue","public static ValueMismatch unexpectedValue(Message expected, Message actual, Message newValue, int version)","io.spine.change.MessageMismatch.unexpectedValue"]},{"name":"public static ValueMismatch unexpectedValue(String expected, String actual, String newValue, int version)","description":"io.spine.change.StringMismatch.unexpectedValue","location":"core/io.spine.change/-string-mismatch/unexpected-value.html","searchKeys":["unexpectedValue","public static ValueMismatch unexpectedValue(String expected, String actual, String newValue, int version)","io.spine.change.StringMismatch.unexpectedValue"]},{"name":"public static ValueMismatch unexpectedValue(double expected, double actual, double newValue, int version)","description":"io.spine.change.DoubleMismatch.unexpectedValue","location":"core/io.spine.change/-double-mismatch/unexpected-value.html","searchKeys":["unexpectedValue","public static ValueMismatch unexpectedValue(double expected, double actual, double newValue, int version)","io.spine.change.DoubleMismatch.unexpectedValue"]},{"name":"public static ValueMismatch unexpectedValue(float expected, float actual, float newValue, int version)","description":"io.spine.change.FloatMismatch.unexpectedValue","location":"core/io.spine.change/-float-mismatch/unexpected-value.html","searchKeys":["unexpectedValue","public static ValueMismatch unexpectedValue(float expected, float actual, float newValue, int version)","io.spine.change.FloatMismatch.unexpectedValue"]},{"name":"public static ValueMismatch unexpectedValue(int expected, int actual, int newValue, int version)","description":"io.spine.change.IntMismatch.unexpectedValue","location":"core/io.spine.change/-int-mismatch/unexpected-value.html","searchKeys":["unexpectedValue","public static ValueMismatch unexpectedValue(int expected, int actual, int newValue, int version)","io.spine.change.IntMismatch.unexpectedValue"]},{"name":"public static ValueMismatch unexpectedValue(long expected, long actual, long newValue, int version)","description":"io.spine.change.LongMismatch.unexpectedValue","location":"core/io.spine.change/-long-mismatch/unexpected-value.html","searchKeys":["unexpectedValue","public static ValueMismatch unexpectedValue(long expected, long actual, long newValue, int version)","io.spine.change.LongMismatch.unexpectedValue"]},{"name":"public static Version increment(Version version)","description":"io.spine.core.Versions.increment","location":"core/io.spine.core/-versions/increment.html","searchKeys":["increment","public static Version increment(Version version)","io.spine.core.Versions.increment"]},{"name":"public static Version newVersion(int number, Timestamp timestamp)","description":"io.spine.core.Versions.newVersion","location":"core/io.spine.core/-versions/new-version.html","searchKeys":["newVersion","public static Version newVersion(int number, Timestamp timestamp)","io.spine.core.Versions.newVersion"]},{"name":"public static Version zero()","description":"io.spine.core.Versions.zero","location":"core/io.spine.core/-versions/zero.html","searchKeys":["zero","public static Version zero()","io.spine.core.Versions.zero"]},{"name":"public static boolean isOk(Response response)","description":"io.spine.core.Responses.isOk","location":"core/io.spine.core/-responses/is-ok.html","searchKeys":["isOk","public static boolean isOk(Response response)","io.spine.core.Responses.isOk"]},{"name":"public static boolean unpackActual(ValueMismatch mismatch)","description":"io.spine.change.BooleanMismatch.unpackActual","location":"core/io.spine.change/-boolean-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static boolean unpackActual(ValueMismatch mismatch)","io.spine.change.BooleanMismatch.unpackActual"]},{"name":"public static boolean unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.BooleanMismatch.unpackExpected","location":"core/io.spine.change/-boolean-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static boolean unpackExpected(ValueMismatch mismatch)","io.spine.change.BooleanMismatch.unpackExpected"]},{"name":"public static boolean unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.BooleanMismatch.unpackNewValue","location":"core/io.spine.change/-boolean-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static boolean unpackNewValue(ValueMismatch mismatch)","io.spine.change.BooleanMismatch.unpackNewValue"]},{"name":"public static double unpackActual(ValueMismatch mismatch)","description":"io.spine.change.DoubleMismatch.unpackActual","location":"core/io.spine.change/-double-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static double unpackActual(ValueMismatch mismatch)","io.spine.change.DoubleMismatch.unpackActual"]},{"name":"public static double unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.DoubleMismatch.unpackExpected","location":"core/io.spine.change/-double-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static double unpackExpected(ValueMismatch mismatch)","io.spine.change.DoubleMismatch.unpackExpected"]},{"name":"public static double unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.DoubleMismatch.unpackNewValue","location":"core/io.spine.change/-double-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static double unpackNewValue(ValueMismatch mismatch)","io.spine.change.DoubleMismatch.unpackNewValue"]},{"name":"public static float unpackActual(ValueMismatch mismatch)","description":"io.spine.change.FloatMismatch.unpackActual","location":"core/io.spine.change/-float-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static float unpackActual(ValueMismatch mismatch)","io.spine.change.FloatMismatch.unpackActual"]},{"name":"public static float unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.FloatMismatch.unpackExpected","location":"core/io.spine.change/-float-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static float unpackExpected(ValueMismatch mismatch)","io.spine.change.FloatMismatch.unpackExpected"]},{"name":"public static float unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.FloatMismatch.unpackNewValue","location":"core/io.spine.change/-float-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static float unpackNewValue(ValueMismatch mismatch)","io.spine.change.FloatMismatch.unpackNewValue"]},{"name":"public static int unpackActual(ValueMismatch mismatch)","description":"io.spine.change.IntMismatch.unpackActual","location":"core/io.spine.change/-int-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static int unpackActual(ValueMismatch mismatch)","io.spine.change.IntMismatch.unpackActual"]},{"name":"public static int unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.IntMismatch.unpackExpected","location":"core/io.spine.change/-int-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static int unpackExpected(ValueMismatch mismatch)","io.spine.change.IntMismatch.unpackExpected"]},{"name":"public static int unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.IntMismatch.unpackNewValue","location":"core/io.spine.change/-int-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static int unpackNewValue(ValueMismatch mismatch)","io.spine.change.IntMismatch.unpackNewValue"]},{"name":"public static long unpackActual(ValueMismatch mismatch)","description":"io.spine.change.LongMismatch.unpackActual","location":"core/io.spine.change/-long-mismatch/unpack-actual.html","searchKeys":["unpackActual","public static long unpackActual(ValueMismatch mismatch)","io.spine.change.LongMismatch.unpackActual"]},{"name":"public static long unpackExpected(ValueMismatch mismatch)","description":"io.spine.change.LongMismatch.unpackExpected","location":"core/io.spine.change/-long-mismatch/unpack-expected.html","searchKeys":["unpackExpected","public static long unpackExpected(ValueMismatch mismatch)","io.spine.change.LongMismatch.unpackExpected"]},{"name":"public static long unpackNewValue(ValueMismatch mismatch)","description":"io.spine.change.LongMismatch.unpackNewValue","location":"core/io.spine.change/-long-mismatch/unpack-new-value.html","searchKeys":["unpackNewValue","public static long unpackNewValue(ValueMismatch mismatch)","io.spine.change.LongMismatch.unpackNewValue"]},{"name":"public static void checkIsIncrement(Version currentVersion, Version newVersion)","description":"io.spine.core.Versions.checkIsIncrement","location":"core/io.spine.core/-versions/check-is-increment.html","searchKeys":["checkIsIncrement","public static void checkIsIncrement(Version currentVersion, Version newVersion)","io.spine.core.Versions.checkIsIncrement"]},{"name":"public static void checkValid(BoundedContextName name)","description":"io.spine.core.BoundedContextNames.checkValid","location":"core/io.spine.core/-bounded-context-names/check-valid.html","searchKeys":["checkValid","public static void checkValid(BoundedContextName name)","io.spine.core.BoundedContextNames.checkValid"]},{"name":"public static void checkValid(String boundedContextName)","description":"io.spine.core.BoundedContextNames.checkValid","location":"core/io.spine.core/-bounded-context-names/check-valid.html","searchKeys":["checkValid","public static void checkValid(String boundedContextName)","io.spine.core.BoundedContextNames.checkValid"]},{"name":"public static void sort(List<Command> commands)","description":"io.spine.core.Commands.sort","location":"core/io.spine.core/-commands/sort.html","searchKeys":["sort","public static void sort(List<Command> commands)","io.spine.core.Commands.sort"]},{"name":"public void EventContextField(Field field)","description":"io.spine.core.EventContextField.EventContextField","location":"core/io.spine.core/-event-context-field/-event-context-field.html","searchKeys":["EventContextField","public void EventContextField(Field field)","io.spine.core.EventContextField.EventContextField"]}]
