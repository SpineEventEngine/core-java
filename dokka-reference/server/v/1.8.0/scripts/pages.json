[{"name":"ACCESS_MODIFIER","description":"io.spine.server.model.MatchCriterion.ACCESS_MODIFIER","location":"server/io.spine.server.model/-match-criterion/-a-c-c-e-s-s_-m-o-d-i-f-i-e-r/index.html","searchKeys":["ACCESS_MODIFIER","ACCESS_MODIFIER","io.spine.server.model.MatchCriterion.ACCESS_MODIFIER"]},{"name":"AGGREGATE_ROOT","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.AGGREGATE_ROOT","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/-a-g-g-r-e-g-a-t-e_-r-o-o-t/index.html","searchKeys":["AGGREGATE_ROOT","AGGREGATE_ROOT","io.spine.server.aggregate.AggregatePart.GenericParameter.AGGREGATE_ROOT"]},{"name":"ALLOW","description":"io.spine.server.aggregate.model.AllowImportAttribute.ALLOW","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/-a-l-l-o-w/index.html","searchKeys":["ALLOW","ALLOW","io.spine.server.aggregate.model.AllowImportAttribute.ALLOW"]},{"name":"AccessModifier modifier()","description":"io.spine.server.model.MethodSignature.modifier","location":"server/io.spine.server.model/-method-signature/modifier.html","searchKeys":["modifier","AccessModifier modifier()","io.spine.server.model.MethodSignature.modifier"]},{"name":"Ack publish(Any messageId, ExternalMessage message)","description":"io.spine.server.transport.memory.InMemoryPublisher.publish","location":"server/io.spine.server.transport.memory/-in-memory-publisher/publish.html","searchKeys":["publish","Ack publish(Any messageId, ExternalMessage message)","io.spine.server.transport.memory.InMemoryPublisher.publish"]},{"name":"ActorContext actorContext()","description":"io.spine.server.type.SignalEnvelope.actorContext","location":"server/io.spine.server.type/-signal-envelope/actor-context.html","searchKeys":["actorContext","ActorContext actorContext()","io.spine.server.type.SignalEnvelope.actorContext"]},{"name":"ActorContext context()","description":"io.spine.server.integration.ExternalMessageEnvelope.context","location":"server/io.spine.server.integration/-external-message-envelope/context.html","searchKeys":["context","ActorContext context()","io.spine.server.integration.ExternalMessageEnvelope.context"]},{"name":"AggregateClass<? extends Object> modelClass()","description":"io.spine.server.aggregate.Aggregate.modelClass","location":"server/io.spine.server.aggregate/-aggregate/model-class.html","searchKeys":["modelClass","AggregateClass<? extends Object> modelClass()","io.spine.server.aggregate.Aggregate.modelClass"]},{"name":"AggregateClass<? extends Object> thisClass()","description":"io.spine.server.aggregate.Aggregate.thisClass","location":"server/io.spine.server.aggregate/-aggregate/this-class.html","searchKeys":["thisClass","AggregateClass<? extends Object> thisClass()","io.spine.server.aggregate.Aggregate.thisClass"]},{"name":"AggregateClass<A> entityModelClass()","description":"io.spine.server.aggregate.DefaultAggregateRepository.entityModelClass","location":"server/io.spine.server.aggregate/-default-aggregate-repository/entity-model-class.html","searchKeys":["entityModelClass","AggregateClass<A> entityModelClass()","io.spine.server.aggregate.DefaultAggregateRepository.entityModelClass"]},{"name":"AggregateClass<A> toModelClass(Class<A> cls)","description":"io.spine.server.aggregate.AggregateRepository.toModelClass","location":"server/io.spine.server.aggregate/-aggregate-repository/to-model-class.html","searchKeys":["toModelClass","AggregateClass<A> toModelClass(Class<A> cls)","io.spine.server.aggregate.AggregateRepository.toModelClass"]},{"name":"AggregatePartClass<? extends Object> thisClass()","description":"io.spine.server.aggregate.AggregatePart.thisClass","location":"server/io.spine.server.aggregate/-aggregate-part/this-class.html","searchKeys":["thisClass","AggregatePartClass<? extends Object> thisClass()","io.spine.server.aggregate.AggregatePart.thisClass"]},{"name":"AggregatePartClass<A> entityModelClass()","description":"io.spine.server.aggregate.DefaultAggregatePartRepository.entityModelClass","location":"server/io.spine.server.aggregate/-default-aggregate-part-repository/entity-model-class.html","searchKeys":["entityModelClass","AggregatePartClass<A> entityModelClass()","io.spine.server.aggregate.DefaultAggregatePartRepository.entityModelClass"]},{"name":"AggregateRootDirectory aggregateRootDirectory()","description":"io.spine.server.BoundedContext.InternalAccess.aggregateRootDirectory","location":"server/io.spine.server/-bounded-context/-internal-access/aggregate-root-directory.html","searchKeys":["aggregateRootDirectory","AggregateRootDirectory aggregateRootDirectory()","io.spine.server.BoundedContext.InternalAccess.aggregateRootDirectory"]},{"name":"AggregateStorage<I> aggregateStorage()","description":"io.spine.server.aggregate.AggregateRepository.aggregateStorage","location":"server/io.spine.server.aggregate/-aggregate-repository/aggregate-storage.html","searchKeys":["aggregateStorage","AggregateStorage<I> aggregateStorage()","io.spine.server.aggregate.AggregateRepository.aggregateStorage"]},{"name":"AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ? extends Object, ? extends Object>> aggregateClass)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.createAggregateStorage","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/create-aggregate-storage.html","searchKeys":["createAggregateStorage","AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ? extends Object, ? extends Object>> aggregateClass)","io.spine.server.storage.system.SystemAwareStorageFactory.createAggregateStorage"]},{"name":"AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ? extends Object, ? extends Object>> unused)","description":"io.spine.server.storage.memory.InMemoryStorageFactory.createAggregateStorage","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/create-aggregate-storage.html","searchKeys":["createAggregateStorage","AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ? extends Object, ? extends Object>> unused)","io.spine.server.storage.memory.InMemoryStorageFactory.createAggregateStorage"]},{"name":"AggregateStorage<I> createStorage()","description":"io.spine.server.aggregate.AggregateRepository.createStorage","location":"server/io.spine.server.aggregate/-aggregate-repository/create-storage.html","searchKeys":["createStorage","AggregateStorage<I> createStorage()","io.spine.server.aggregate.AggregateRepository.createStorage"]},{"name":"AllowedParams<EventEnvelope> params()","description":"io.spine.server.command.model.CommandReactionSignature.params","location":"server/io.spine.server.command.model/-command-reaction-signature/params.html","searchKeys":["params","AllowedParams<EventEnvelope> params()","io.spine.server.command.model.CommandReactionSignature.params"]},{"name":"AllowedParams<EventEnvelope> params()","description":"io.spine.server.event.model.SubscriberSignature.params","location":"server/io.spine.server.event.model/-subscriber-signature/params.html","searchKeys":["params","AllowedParams<EventEnvelope> params()","io.spine.server.event.model.SubscriberSignature.params"]},{"name":"Any producerId()","description":"io.spine.server.command.AbstractCommandDispatcher.producerId","location":"server/io.spine.server.command/-abstract-command-dispatcher/producer-id.html","searchKeys":["producerId","Any producerId()","io.spine.server.command.AbstractCommandDispatcher.producerId"]},{"name":"Any producerId()","description":"io.spine.server.command.CommandHandlingEntity.producerId","location":"server/io.spine.server.command/-command-handling-entity/producer-id.html","searchKeys":["producerId","Any producerId()","io.spine.server.command.CommandHandlingEntity.producerId"]},{"name":"Any producerId()","description":"io.spine.server.event.AbstractEventReactor.producerId","location":"server/io.spine.server.event/-abstract-event-reactor/producer-id.html","searchKeys":["producerId","Any producerId()","io.spine.server.event.AbstractEventReactor.producerId"]},{"name":"Api _config()","description":"io.spine.server.log.LoggingEntity._config","location":"server/io.spine.server.log/-logging-entity/_config.html","searchKeys":["_config","Api _config()","io.spine.server.log.LoggingEntity._config"]},{"name":"Api _fine()","description":"io.spine.server.log.LoggingEntity._fine","location":"server/io.spine.server.log/-logging-entity/_fine.html","searchKeys":["_fine","Api _fine()","io.spine.server.log.LoggingEntity._fine"]},{"name":"Api _finer()","description":"io.spine.server.log.LoggingEntity._finer","location":"server/io.spine.server.log/-logging-entity/_finer.html","searchKeys":["_finer","Api _finer()","io.spine.server.log.LoggingEntity._finer"]},{"name":"Api _finest()","description":"io.spine.server.log.LoggingEntity._finest","location":"server/io.spine.server.log/-logging-entity/_finest.html","searchKeys":["_finest","Api _finest()","io.spine.server.log.LoggingEntity._finest"]},{"name":"Api _info()","description":"io.spine.server.log.LoggingEntity._info","location":"server/io.spine.server.log/-logging-entity/_info.html","searchKeys":["_info","Api _info()","io.spine.server.log.LoggingEntity._info"]},{"name":"Api _severe()","description":"io.spine.server.log.LoggingEntity._severe","location":"server/io.spine.server.log/-logging-entity/_severe.html","searchKeys":["_severe","Api _severe()","io.spine.server.log.LoggingEntity._severe"]},{"name":"Api _warn()","description":"io.spine.server.log.LoggingEntity._warn","location":"server/io.spine.server.log/-logging-entity/_warn.html","searchKeys":["_warn","Api _warn()","io.spine.server.log.LoggingEntity._warn"]},{"name":"Api at(Level level)","description":"io.spine.server.log.HandlerLog.at","location":"server/io.spine.server.log/-handler-log/at.html","searchKeys":["at","Api at(Level level)","io.spine.server.log.HandlerLog.at"]},{"name":"ArgumentFilter createFilter()","description":"io.spine.server.event.model.EventSubscriberMethod.createFilter","location":"server/io.spine.server.event.model/-event-subscriber-method/create-filter.html","searchKeys":["createFilter","ArgumentFilter createFilter()","io.spine.server.event.model.EventSubscriberMethod.createFilter"]},{"name":"ArgumentFilter createFilter()","description":"io.spine.server.event.model.StateSubscriberMethod.createFilter","location":"server/io.spine.server.event.model/-state-subscriber-method/create-filter.html","searchKeys":["createFilter","ArgumentFilter createFilter()","io.spine.server.event.model.StateSubscriberMethod.createFilter"]},{"name":"A create(I id)","description":"io.spine.server.aggregate.AggregatePartRepository.create","location":"server/io.spine.server.aggregate/-aggregate-part-repository/create.html","searchKeys":["create","A create(I id)","io.spine.server.aggregate.AggregatePartRepository.create"]},{"name":"A create(I id)","description":"io.spine.server.aggregate.AggregateRepository.create","location":"server/io.spine.server.aggregate/-aggregate-repository/create.html","searchKeys":["create","A create(I id)","io.spine.server.aggregate.AggregateRepository.create"]},{"name":"A doLoadOrCreate(I id)","description":"io.spine.server.aggregate.AggregateRepository.doLoadOrCreate","location":"server/io.spine.server.aggregate/-aggregate-repository/do-load-or-create.html","searchKeys":["doLoadOrCreate","A doLoadOrCreate(I id)","io.spine.server.aggregate.AggregateRepository.doLoadOrCreate"]},{"name":"A getA()","description":"io.spine.server.tuple.EitherOf2.getA","location":"server/io.spine.server.tuple/-either-of2/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.EitherOf2.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.EitherOf3.getA","location":"server/io.spine.server.tuple/-either-of3/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.EitherOf3.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.EitherOf4.getA","location":"server/io.spine.server.tuple/-either-of4/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.EitherOf4.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.EitherOf5.getA","location":"server/io.spine.server.tuple/-either-of5/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.EitherOf5.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.Pair.getA","location":"server/io.spine.server.tuple/-pair/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.Pair.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.Quartet.getA","location":"server/io.spine.server.tuple/-quartet/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.Quartet.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.Quintet.getA","location":"server/io.spine.server.tuple/-quintet/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.Quintet.getA"]},{"name":"A getA()","description":"io.spine.server.tuple.Triplet.getA","location":"server/io.spine.server.tuple/-triplet/get-a.html","searchKeys":["getA","A getA()","io.spine.server.tuple.Triplet.getA"]},{"name":"A play(I id, AggregateHistory history)","description":"io.spine.server.aggregate.AggregateRepository.play","location":"server/io.spine.server.aggregate/-aggregate-repository/play.html","searchKeys":["play","A play(I id, AggregateHistory history)","io.spine.server.aggregate.AggregateRepository.play"]},{"name":"BatchDispatchOutcome play(Iterable<Event> events)","description":"io.spine.server.projection.Projection.play","location":"server/io.spine.server.projection/-projection/play.html","searchKeys":["play","BatchDispatchOutcome play(Iterable<Event> events)","io.spine.server.projection.Projection.play"]},{"name":"BiPredicate<E, D> attributeFilter()","description":"io.spine.server.bus.DispatcherRegistry.attributeFilter","location":"server/io.spine.server.bus/-dispatcher-registry/attribute-filter.html","searchKeys":["attributeFilter","BiPredicate<E, D> attributeFilter()","io.spine.server.bus.DispatcherRegistry.attributeFilter"]},{"name":"Boolean isMultitenant()","description":"io.spine.server.stand.Stand.Builder.isMultitenant","location":"server/io.spine.server.stand/-stand/-builder/is-multitenant.html","searchKeys":["isMultitenant","Boolean isMultitenant()","io.spine.server.stand.Stand.Builder.isMultitenant"]},{"name":"Boolean value()","description":"io.spine.server.aggregate.model.AllowImportAttribute.value","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/value.html","searchKeys":["value","Boolean value()","io.spine.server.aggregate.model.AllowImportAttribute.value"]},{"name":"BoundedContext.InternalAccess register(Repository<? extends Object, ? extends Object> repository)","description":"io.spine.server.BoundedContext.InternalAccess.register","location":"server/io.spine.server/-bounded-context/-internal-access/register.html","searchKeys":["register","BoundedContext.InternalAccess register(Repository<? extends Object, ? extends Object> repository)","io.spine.server.BoundedContext.InternalAccess.register"]},{"name":"BoundedContext.InternalAccess registerCommandDispatcher(CommandDispatcher dispatcher)","description":"io.spine.server.BoundedContext.InternalAccess.registerCommandDispatcher","location":"server/io.spine.server/-bounded-context/-internal-access/register-command-dispatcher.html","searchKeys":["registerCommandDispatcher","BoundedContext.InternalAccess registerCommandDispatcher(CommandDispatcher dispatcher)","io.spine.server.BoundedContext.InternalAccess.registerCommandDispatcher"]},{"name":"BoundedContext.InternalAccess registerEventDispatcher(EventDispatcher dispatcher)","description":"io.spine.server.BoundedContext.InternalAccess.registerEventDispatcher","location":"server/io.spine.server/-bounded-context/-internal-access/register-event-dispatcher.html","searchKeys":["registerEventDispatcher","BoundedContext.InternalAccess registerEventDispatcher(EventDispatcher dispatcher)","io.spine.server.BoundedContext.InternalAccess.registerEventDispatcher"]},{"name":"BoundedContextBuilder add(Repository<? extends Object, ? extends Object> repository)","description":"io.spine.server.BoundedContextBuilder.add","location":"server/io.spine.server/-bounded-context-builder/add.html","searchKeys":["add","BoundedContextBuilder add(Repository<? extends Object, ? extends Object> repository)","io.spine.server.BoundedContextBuilder.add"]},{"name":"BoundedContextBuilder add<I, E extends Entity<I, ? extends Object>>(Class<E> entityClass)","description":"io.spine.server.BoundedContextBuilder.add","location":"server/io.spine.server/-bounded-context-builder/add.html","searchKeys":["add","BoundedContextBuilder add<I, E extends Entity<I, ? extends Object>>(Class<E> entityClass)","io.spine.server.BoundedContextBuilder.add"]},{"name":"BoundedContextBuilder addCommandDispatcher(CommandDispatcher commandDispatcher)","description":"io.spine.server.BoundedContextBuilder.addCommandDispatcher","location":"server/io.spine.server/-bounded-context-builder/add-command-dispatcher.html","searchKeys":["addCommandDispatcher","BoundedContextBuilder addCommandDispatcher(CommandDispatcher commandDispatcher)","io.spine.server.BoundedContextBuilder.addCommandDispatcher"]},{"name":"BoundedContextBuilder addCommandFilter(BusFilter<CommandEnvelope> filter)","description":"io.spine.server.BoundedContextBuilder.addCommandFilter","location":"server/io.spine.server/-bounded-context-builder/add-command-filter.html","searchKeys":["addCommandFilter","BoundedContextBuilder addCommandFilter(BusFilter<CommandEnvelope> filter)","io.spine.server.BoundedContextBuilder.addCommandFilter"]},{"name":"BoundedContextBuilder addCommandListener(Listener<CommandEnvelope> listener)","description":"io.spine.server.BoundedContextBuilder.addCommandListener","location":"server/io.spine.server/-bounded-context-builder/add-command-listener.html","searchKeys":["addCommandListener","BoundedContextBuilder addCommandListener(Listener<CommandEnvelope> listener)","io.spine.server.BoundedContextBuilder.addCommandListener"]},{"name":"BoundedContextBuilder addEventDispatcher(EventDispatcher eventDispatcher)","description":"io.spine.server.BoundedContextBuilder.addEventDispatcher","location":"server/io.spine.server/-bounded-context-builder/add-event-dispatcher.html","searchKeys":["addEventDispatcher","BoundedContextBuilder addEventDispatcher(EventDispatcher eventDispatcher)","io.spine.server.BoundedContextBuilder.addEventDispatcher"]},{"name":"BoundedContextBuilder addEventFilter(BusFilter<EventEnvelope> filter)","description":"io.spine.server.BoundedContextBuilder.addEventFilter","location":"server/io.spine.server/-bounded-context-builder/add-event-filter.html","searchKeys":["addEventFilter","BoundedContextBuilder addEventFilter(BusFilter<EventEnvelope> filter)","io.spine.server.BoundedContextBuilder.addEventFilter"]},{"name":"BoundedContextBuilder addEventListener(Listener<EventEnvelope> listener)","description":"io.spine.server.BoundedContextBuilder.addEventListener","location":"server/io.spine.server/-bounded-context-builder/add-event-listener.html","searchKeys":["addEventListener","BoundedContextBuilder addEventListener(Listener<EventEnvelope> listener)","io.spine.server.BoundedContextBuilder.addEventListener"]},{"name":"BoundedContextBuilder enrichEventsUsing(EventEnricher enricher)","description":"io.spine.server.BoundedContextBuilder.enrichEventsUsing","location":"server/io.spine.server/-bounded-context-builder/enrich-events-using.html","searchKeys":["enrichEventsUsing","BoundedContextBuilder enrichEventsUsing(EventEnricher enricher)","io.spine.server.BoundedContextBuilder.enrichEventsUsing"]},{"name":"BoundedContextBuilder remove(Repository<? extends Object, ? extends Object> repository)","description":"io.spine.server.BoundedContextBuilder.remove","location":"server/io.spine.server/-bounded-context-builder/remove.html","searchKeys":["remove","BoundedContextBuilder remove(Repository<? extends Object, ? extends Object> repository)","io.spine.server.BoundedContextBuilder.remove"]},{"name":"BoundedContextBuilder remove<I, E extends Entity<I, ? extends Object>>(Class<E> entityClass)","description":"io.spine.server.BoundedContextBuilder.remove","location":"server/io.spine.server/-bounded-context-builder/remove.html","searchKeys":["remove","BoundedContextBuilder remove<I, E extends Entity<I, ? extends Object>>(Class<E> entityClass)","io.spine.server.BoundedContextBuilder.remove"]},{"name":"BoundedContextBuilder removeCommandDispatcher(CommandDispatcher commandDispatcher)","description":"io.spine.server.BoundedContextBuilder.removeCommandDispatcher","location":"server/io.spine.server/-bounded-context-builder/remove-command-dispatcher.html","searchKeys":["removeCommandDispatcher","BoundedContextBuilder removeCommandDispatcher(CommandDispatcher commandDispatcher)","io.spine.server.BoundedContextBuilder.removeCommandDispatcher"]},{"name":"BoundedContextBuilder removeEventDispatcher(EventDispatcher eventDispatcher)","description":"io.spine.server.BoundedContextBuilder.removeEventDispatcher","location":"server/io.spine.server/-bounded-context-builder/remove-event-dispatcher.html","searchKeys":["removeEventDispatcher","BoundedContextBuilder removeEventDispatcher(EventDispatcher eventDispatcher)","io.spine.server.BoundedContextBuilder.removeEventDispatcher"]},{"name":"BoundedContextBuilder setAggregateRootDirectory(Supplier<AggregateRootDirectory> directory)","description":"io.spine.server.BoundedContextBuilder.setAggregateRootDirectory","location":"server/io.spine.server/-bounded-context-builder/set-aggregate-root-directory.html","searchKeys":["setAggregateRootDirectory","BoundedContextBuilder setAggregateRootDirectory(Supplier<AggregateRootDirectory> directory)","io.spine.server.BoundedContextBuilder.setAggregateRootDirectory"]},{"name":"BoundedContextBuilder setTenantIndex(TenantIndex tenantIndex)","description":"io.spine.server.BoundedContextBuilder.setTenantIndex","location":"server/io.spine.server/-bounded-context-builder/set-tenant-index.html","searchKeys":["setTenantIndex","BoundedContextBuilder setTenantIndex(TenantIndex tenantIndex)","io.spine.server.BoundedContextBuilder.setTenantIndex"]},{"name":"BoundedContextBuilder testingCopy()","description":"io.spine.server.BoundedContextBuilder.testingCopy","location":"server/io.spine.server/-bounded-context-builder/testing-copy.html","searchKeys":["testingCopy","BoundedContextBuilder testingCopy()","io.spine.server.BoundedContextBuilder.testingCopy"]},{"name":"BoundedContextName context()","description":"io.spine.server.storage.memory.StorageSpec.context","location":"server/io.spine.server.storage.memory/-storage-spec/context.html","searchKeys":["context","BoundedContextName context()","io.spine.server.storage.memory.StorageSpec.context"]},{"name":"BoundedContextName contextName()","description":"io.spine.server.model.Model.contextName","location":"server/io.spine.server.model/-model/context-name.html","searchKeys":["contextName","BoundedContextName contextName()","io.spine.server.model.Model.contextName"]},{"name":"BoundedContextName getBoundedContextName()","description":"io.spine.server.storage.memory.StorageSpec.getBoundedContextName","location":"server/io.spine.server.storage.memory/-storage-spec/get-bounded-context-name.html","searchKeys":["getBoundedContextName","BoundedContextName getBoundedContextName()","io.spine.server.storage.memory.StorageSpec.getBoundedContextName"]},{"name":"BoundedContextName name()","description":"io.spine.server.BoundedContext.name","location":"server/io.spine.server/-bounded-context/name.html","searchKeys":["name","BoundedContextName name()","io.spine.server.BoundedContext.name"]},{"name":"BoundedContextName name()","description":"io.spine.server.BoundedContextBuilder.name","location":"server/io.spine.server/-bounded-context-builder/name.html","searchKeys":["name","BoundedContextName name()","io.spine.server.BoundedContextBuilder.name"]},{"name":"BoundedContextName name()","description":"io.spine.server.ContextSpec.name","location":"server/io.spine.server/-context-spec/name.html","searchKeys":["name","BoundedContextName name()","io.spine.server.ContextSpec.name"]},{"name":"BoundedContext build()","description":"io.spine.server.BoundedContextBuilder.build","location":"server/io.spine.server/-bounded-context-builder/build.html","searchKeys":["build","BoundedContext build()","io.spine.server.BoundedContextBuilder.build"]},{"name":"Builder<CompositeQueryParameter> getParameters()","description":"io.spine.server.entity.storage.QueryParameters.Builder.getParameters","location":"server/io.spine.server.entity.storage/-query-parameters/-builder/get-parameters.html","searchKeys":["getParameters","Builder<CompositeQueryParameter> getParameters()","io.spine.server.entity.storage.QueryParameters.Builder.getParameters"]},{"name":"Builder newStateBuilderWith(CatchUpId id)","description":"io.spine.server.delivery.CatchUpProcess.newStateBuilderWith","location":"server/io.spine.server.delivery/-catch-up-process/new-state-builder-with.html","searchKeys":["newStateBuilderWith","Builder newStateBuilderWith(CatchUpId id)","io.spine.server.delivery.CatchUpProcess.newStateBuilderWith"]},{"name":"B builder()","description":"io.spine.server.entity.TransactionalEntity.builder","location":"server/io.spine.server.entity/-transactional-entity/builder.html","searchKeys":["builder","B builder()","io.spine.server.entity.TransactionalEntity.builder"]},{"name":"B builder()","description":"io.spine.server.event.AbstractStatefulReactor.builder","location":"server/io.spine.server.event/-abstract-stateful-reactor/builder.html","searchKeys":["builder","B builder()","io.spine.server.event.AbstractStatefulReactor.builder"]},{"name":"B getB()","description":"io.spine.server.tuple.EitherOf2.getB","location":"server/io.spine.server.tuple/-either-of2/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.EitherOf2.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.EitherOf3.getB","location":"server/io.spine.server.tuple/-either-of3/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.EitherOf3.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.EitherOf4.getB","location":"server/io.spine.server.tuple/-either-of4/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.EitherOf4.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.EitherOf5.getB","location":"server/io.spine.server.tuple/-either-of5/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.EitherOf5.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.Pair.getB","location":"server/io.spine.server.tuple/-pair/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.Pair.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.Quartet.getB","location":"server/io.spine.server.tuple/-quartet/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.Quartet.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.Quintet.getB","location":"server/io.spine.server.tuple/-quintet/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.Quintet.getB"]},{"name":"B getB()","description":"io.spine.server.tuple.Triplet.getB","location":"server/io.spine.server.tuple/-triplet/get-b.html","searchKeys":["getB","B getB()","io.spine.server.tuple.Triplet.getB"]},{"name":"B injectContext(BoundedContext context)","description":"io.spine.server.bus.BusBuilder.injectContext","location":"server/io.spine.server.bus/-bus-builder/inject-context.html","searchKeys":["injectContext","B injectContext(BoundedContext context)","io.spine.server.bus.BusBuilder.injectContext"]},{"name":"B injectSystem(SystemWriteSide writeSide)","description":"io.spine.server.bus.BusBuilder.injectSystem","location":"server/io.spine.server.bus/-bus-builder/inject-system.html","searchKeys":["injectSystem","B injectSystem(SystemWriteSide writeSide)","io.spine.server.bus.BusBuilder.injectSystem"]},{"name":"B injectTenantIndex(TenantIndex index)","description":"io.spine.server.bus.BusBuilder.injectTenantIndex","location":"server/io.spine.server.bus/-bus-builder/inject-tenant-index.html","searchKeys":["injectTenantIndex","B injectTenantIndex(TenantIndex index)","io.spine.server.bus.BusBuilder.injectTenantIndex"]},{"name":"B remove<T extends Message>(Class<M> eventClass, Class<T> enrichmentClass)","description":"io.spine.server.enrich.EnricherBuilder.remove","location":"server/io.spine.server.enrich/-enricher-builder/remove.html","searchKeys":["remove","B remove<T extends Message>(Class<M> eventClass, Class<T> enrichmentClass)","io.spine.server.enrich.EnricherBuilder.remove"]},{"name":"CatchUpId catchUp(Timestamp since, Set<I> ids)","description":"io.spine.server.projection.ProjectionRepository.catchUp","location":"server/io.spine.server.projection/-projection-repository/catch-up.html","searchKeys":["catchUp","CatchUpId catchUp(Timestamp since, Set<I> ids)","io.spine.server.projection.ProjectionRepository.catchUp"]},{"name":"CatchUpId catchUpAll(Timestamp since)","description":"io.spine.server.projection.ProjectionRepository.catchUpAll","location":"server/io.spine.server.projection/-projection-repository/catch-up-all.html","searchKeys":["catchUpAll","CatchUpId catchUpAll(Timestamp since)","io.spine.server.projection.ProjectionRepository.catchUpAll"]},{"name":"CatchUpId recordId()","description":"io.spine.server.delivery.CatchUpReadRequest.recordId","location":"server/io.spine.server.delivery/-catch-up-read-request/record-id.html","searchKeys":["recordId","CatchUpId recordId()","io.spine.server.delivery.CatchUpReadRequest.recordId"]},{"name":"CatchUpId startCatchUp(Timestamp since, Set<I> ids)","description":"io.spine.server.delivery.CatchUpProcess.startCatchUp","location":"server/io.spine.server.delivery/-catch-up-process/start-catch-up.html","searchKeys":["startCatchUp","CatchUpId startCatchUp(Timestamp since, Set<I> ids)","io.spine.server.delivery.CatchUpProcess.startCatchUp"]},{"name":"CatchUpProcess<I> build()","description":"io.spine.server.delivery.CatchUpProcessBuilder.build","location":"server/io.spine.server.delivery/-catch-up-process-builder/build.html","searchKeys":["build","CatchUpProcess<I> build()","io.spine.server.delivery.CatchUpProcessBuilder.build"]},{"name":"CatchUpProcessBuilder<I> newCatchUpProcess<I>(ProjectionRepository<I, ? extends Object, ? extends Object> repo)","description":"io.spine.server.delivery.Delivery.newCatchUpProcess","location":"server/io.spine.server.delivery/-delivery/new-catch-up-process.html","searchKeys":["newCatchUpProcess","CatchUpProcessBuilder<I> newCatchUpProcess<I>(ProjectionRepository<I, ? extends Object, ? extends Object> repo)","io.spine.server.delivery.Delivery.newCatchUpProcess"]},{"name":"CatchUpProcessBuilder<I> setDispatchOp(CatchUpProcess.DispatchCatchingUp<I> operation)","description":"io.spine.server.delivery.CatchUpProcessBuilder.setDispatchOp","location":"server/io.spine.server.delivery/-catch-up-process-builder/set-dispatch-op.html","searchKeys":["setDispatchOp","CatchUpProcessBuilder<I> setDispatchOp(CatchUpProcess.DispatchCatchingUp<I> operation)","io.spine.server.delivery.CatchUpProcessBuilder.setDispatchOp"]},{"name":"CatchUpStorage createCatchUpStorage(boolean multitenant)","description":"io.spine.server.storage.memory.InMemoryStorageFactory.createCatchUpStorage","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/create-catch-up-storage.html","searchKeys":["createCatchUpStorage","CatchUpStorage createCatchUpStorage(boolean multitenant)","io.spine.server.storage.memory.InMemoryStorageFactory.createCatchUpStorage"]},{"name":"CatchUpStorage createCatchUpStorage(boolean multitenant)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.createCatchUpStorage","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/create-catch-up-storage.html","searchKeys":["createCatchUpStorage","CatchUpStorage createCatchUpStorage(boolean multitenant)","io.spine.server.storage.system.SystemAwareStorageFactory.createCatchUpStorage"]},{"name":"ChannelId id()","description":"io.spine.server.transport.AbstractChannel.id","location":"server/io.spine.server.transport/-abstract-channel/id.html","searchKeys":["id","ChannelId id()","io.spine.server.transport.AbstractChannel.id"]},{"name":"Class<? extends AggregateRoot<? extends Object>> rootClass()","description":"io.spine.server.aggregate.model.AggregatePartClass.rootClass","location":"server/io.spine.server.aggregate.model/-aggregate-part-class/root-class.html","searchKeys":["rootClass","Class<? extends AggregateRoot<? extends Object>> rootClass()","io.spine.server.aggregate.model.AggregatePartClass.rootClass"]},{"name":"Class<? extends EntityState> stateType()","description":"io.spine.server.event.model.StateSubscriberMethod.stateType","location":"server/io.spine.server.event.model/-state-subscriber-method/state-type.html","searchKeys":["stateType","Class<? extends EntityState> stateType()","io.spine.server.event.model.StateSubscriberMethod.stateType"]},{"name":"Class<? extends EnvironmentType> type()","description":"io.spine.server.ServerEnvironment.type","location":"server/io.spine.server/-server-environment/type.html","searchKeys":["type","Class<? extends EnvironmentType> type()","io.spine.server.ServerEnvironment.type"]},{"name":"Class<? extends EventMessage> rawMessageClass()","description":"io.spine.server.event.model.StateSubscriberMethod.rawMessageClass","location":"server/io.spine.server.event.model/-state-subscriber-method/raw-message-class.html","searchKeys":["rawMessageClass","Class<? extends EventMessage> rawMessageClass()","io.spine.server.event.model.StateSubscriberMethod.rawMessageClass"]},{"name":"Class<? extends M> rawMessageClass()","description":"io.spine.server.model.AbstractHandlerMethod.rawMessageClass","location":"server/io.spine.server.model/-abstract-handler-method/raw-message-class.html","searchKeys":["rawMessageClass","Class<? extends M> rawMessageClass()","io.spine.server.model.AbstractHandlerMethod.rawMessageClass"]},{"name":"Class<? extends Object> type(int index)","description":"io.spine.server.model.MethodParams.type","location":"server/io.spine.server.model/-method-params/type.html","searchKeys":["type","Class<? extends Object> type(int index)","io.spine.server.model.MethodParams.type"]},{"name":"Class<E> value()","description":"io.spine.server.entity.model.EntityClass.value","location":"server/io.spine.server.entity.model/-entity-class/value.html","searchKeys":["value","Class<E> value()","io.spine.server.entity.model.EntityClass.value"]},{"name":"Class<I> getIdClass()","description":"io.spine.server.storage.memory.StorageSpec.getIdClass","location":"server/io.spine.server.storage.memory/-storage-spec/get-id-class.html","searchKeys":["getIdClass","Class<I> getIdClass()","io.spine.server.storage.memory.StorageSpec.getIdClass"]},{"name":"Class<I> idClass()","description":"io.spine.server.storage.memory.StorageSpec.idClass","location":"server/io.spine.server.storage.memory/-storage-spec/id-class.html","searchKeys":["idClass","Class<I> idClass()","io.spine.server.storage.memory.StorageSpec.idClass"]},{"name":"ColumnTypeMapping<? extends Object, ? extends Object> ofNull()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofNull","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-null.html","searchKeys":["ofNull","ColumnTypeMapping<? extends Object, ? extends Object> ofNull()","io.spine.server.entity.storage.DefaultColumnMapping.ofNull"]},{"name":"ColumnTypeMapping<Boolean, Boolean> ofBoolean()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofBoolean","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-boolean.html","searchKeys":["ofBoolean","ColumnTypeMapping<Boolean, Boolean> ofBoolean()","io.spine.server.entity.storage.DefaultColumnMapping.ofBoolean"]},{"name":"ColumnTypeMapping<ByteString, ByteString> ofByteString()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofByteString","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-byte-string.html","searchKeys":["ofByteString","ColumnTypeMapping<ByteString, ByteString> ofByteString()","io.spine.server.entity.storage.DefaultColumnMapping.ofByteString"]},{"name":"ColumnTypeMapping<Double, Double> ofDouble()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofDouble","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-double.html","searchKeys":["ofDouble","ColumnTypeMapping<Double, Double> ofDouble()","io.spine.server.entity.storage.DefaultColumnMapping.ofDouble"]},{"name":"ColumnTypeMapping<Enum<? extends Object>, Enum<? extends Object>> ofEnum()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofEnum","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-enum.html","searchKeys":["ofEnum","ColumnTypeMapping<Enum<? extends Object>, Enum<? extends Object>> ofEnum()","io.spine.server.entity.storage.DefaultColumnMapping.ofEnum"]},{"name":"ColumnTypeMapping<Float, Float> ofFloat()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofFloat","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-float.html","searchKeys":["ofFloat","ColumnTypeMapping<Float, Float> ofFloat()","io.spine.server.entity.storage.DefaultColumnMapping.ofFloat"]},{"name":"ColumnTypeMapping<Integer, Integer> ofInteger()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofInteger","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-integer.html","searchKeys":["ofInteger","ColumnTypeMapping<Integer, Integer> ofInteger()","io.spine.server.entity.storage.DefaultColumnMapping.ofInteger"]},{"name":"ColumnTypeMapping<Long, Long> ofLong()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofLong","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-long.html","searchKeys":["ofLong","ColumnTypeMapping<Long, Long> ofLong()","io.spine.server.entity.storage.DefaultColumnMapping.ofLong"]},{"name":"ColumnTypeMapping<Message, Message> ofMessage()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofMessage","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-message.html","searchKeys":["ofMessage","ColumnTypeMapping<Message, Message> ofMessage()","io.spine.server.entity.storage.DefaultColumnMapping.ofMessage"]},{"name":"ColumnTypeMapping<String, String> ofString()","description":"io.spine.server.entity.storage.DefaultColumnMapping.ofString","location":"server/io.spine.server.entity.storage/-default-column-mapping/of-string.html","searchKeys":["ofString","ColumnTypeMapping<String, String> ofString()","io.spine.server.entity.storage.DefaultColumnMapping.ofString"]},{"name":"ColumnTypeMapping<T, ? extends R> of<T>(Class<T> type)","description":"io.spine.server.entity.storage.AbstractColumnMapping.of","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of.html","searchKeys":["of","ColumnTypeMapping<T, ? extends R> of<T>(Class<T> type)","io.spine.server.entity.storage.AbstractColumnMapping.of"]},{"name":"Columns columns()","description":"io.spine.server.projection.ProjectionStorage.columns","location":"server/io.spine.server.projection/-projection-storage/columns.html","searchKeys":["columns","Columns columns()","io.spine.server.projection.ProjectionStorage.columns"]},{"name":"Columns columns()","description":"io.spine.server.storage.RecordStorage.columns","location":"server/io.spine.server.storage/-record-storage/columns.html","searchKeys":["columns","Columns columns()","io.spine.server.storage.RecordStorage.columns"]},{"name":"Column get(ColumnName columnName)","description":"io.spine.server.entity.storage.Columns.get","location":"server/io.spine.server.entity.storage/-columns/get.html","searchKeys":["get","Column get(ColumnName columnName)","io.spine.server.entity.storage.Columns.get"]},{"name":"CommandBus.Builder self()","description":"io.spine.server.commandbus.CommandBus.Builder.self","location":"server/io.spine.server.commandbus/-command-bus/-builder/self.html","searchKeys":["self","CommandBus.Builder self()","io.spine.server.commandbus.CommandBus.Builder.self"]},{"name":"CommandBus.Builder setMultitenant(Boolean multitenant)","description":"io.spine.server.commandbus.CommandBus.Builder.setMultitenant","location":"server/io.spine.server.commandbus/-command-bus/-builder/set-multitenant.html","searchKeys":["setMultitenant","CommandBus.Builder setMultitenant(Boolean multitenant)","io.spine.server.commandbus.CommandBus.Builder.setMultitenant"]},{"name":"CommandBus.Builder setWatcher(CommandFlowWatcher watcher)","description":"io.spine.server.commandbus.CommandBus.Builder.setWatcher","location":"server/io.spine.server.commandbus/-command-bus/-builder/set-watcher.html","searchKeys":["setWatcher","CommandBus.Builder setWatcher(CommandFlowWatcher watcher)","io.spine.server.commandbus.CommandBus.Builder.setWatcher"]},{"name":"CommandBus build()","description":"io.spine.server.commandbus.CommandBus.Builder.build","location":"server/io.spine.server.commandbus/-command-bus/-builder/build.html","searchKeys":["build","CommandBus build()","io.spine.server.commandbus.CommandBus.Builder.build"]},{"name":"CommandBus commandBus()","description":"io.spine.server.BoundedContext.commandBus","location":"server/io.spine.server/-bounded-context/command-bus.html","searchKeys":["commandBus","CommandBus commandBus()","io.spine.server.BoundedContext.commandBus"]},{"name":"CommandBus commandBus()","description":"io.spine.server.commandbus.CommandScheduler.commandBus","location":"server/io.spine.server.commandbus/-command-scheduler/command-bus.html","searchKeys":["commandBus","CommandBus commandBus()","io.spine.server.commandbus.CommandScheduler.commandBus"]},{"name":"CommandClass messageClass()","description":"io.spine.server.type.CommandEnvelope.messageClass","location":"server/io.spine.server.type/-command-envelope/message-class.html","searchKeys":["messageClass","CommandClass messageClass()","io.spine.server.type.CommandEnvelope.messageClass"]},{"name":"CommandContext context()","description":"io.spine.server.type.CommandEnvelope.context","location":"server/io.spine.server.type/-command-envelope/context.html","searchKeys":["context","CommandContext context()","io.spine.server.type.CommandEnvelope.context"]},{"name":"CommandContext getContext()","description":"io.spine.server.commandbus.CommandPostingException.getContext","location":"server/io.spine.server.commandbus/-command-posting-exception/get-context.html","searchKeys":["getContext","CommandContext getContext()","io.spine.server.commandbus.CommandPostingException.getContext"]},{"name":"CommandDispatcherRegistry newRegistry()","description":"io.spine.server.commandbus.CommandBus.Builder.newRegistry","location":"server/io.spine.server.commandbus/-command-bus/-builder/new-registry.html","searchKeys":["newRegistry","CommandDispatcherRegistry newRegistry()","io.spine.server.commandbus.CommandBus.Builder.newRegistry"]},{"name":"CommandDispatcherRegistry registry()","description":"io.spine.server.commandbus.CommandBus.registry","location":"server/io.spine.server.commandbus/-command-bus/registry.html","searchKeys":["registry","CommandDispatcherRegistry registry()","io.spine.server.commandbus.CommandBus.registry"]},{"name":"CommandEnvelope command()","description":"io.spine.server.command.DispatchCommand.command","location":"server/io.spine.server.command/-dispatch-command/command.html","searchKeys":["command","CommandEnvelope command()","io.spine.server.command.DispatchCommand.command"]},{"name":"CommandEnvelope toEnvelope(Command message)","description":"io.spine.server.commandbus.CommandBus.toEnvelope","location":"server/io.spine.server.commandbus/-command-bus/to-envelope.html","searchKeys":["toEnvelope","CommandEnvelope toEnvelope(Command message)","io.spine.server.commandbus.CommandBus.toEnvelope"]},{"name":"CommandHandlerMethod create(Method method, ParameterSpec<CommandEnvelope> params)","description":"io.spine.server.command.model.CommandHandlerSignature.create","location":"server/io.spine.server.command.model/-command-handler-signature/create.html","searchKeys":["create","CommandHandlerMethod create(Method method, ParameterSpec<CommandEnvelope> params)","io.spine.server.command.model.CommandHandlerSignature.create"]},{"name":"CommandHandlerMethod handlerOf(CommandClass commandClass)","description":"io.spine.server.entity.model.CommandHandlingEntityClass.handlerOf","location":"server/io.spine.server.entity.model/-command-handling-entity-class/handler-of.html","searchKeys":["handlerOf","CommandHandlerMethod handlerOf(CommandClass commandClass)","io.spine.server.entity.model.CommandHandlingEntityClass.handlerOf"]},{"name":"CommandHandlingEntity<I, ? extends Object, ? extends Object> entity()","description":"io.spine.server.command.DispatchCommand.entity","location":"server/io.spine.server.command/-dispatch-command/entity.html","searchKeys":["entity","CommandHandlingEntity<I, ? extends Object, ? extends Object> entity()","io.spine.server.command.DispatchCommand.entity"]},{"name":"CommandId id()","description":"io.spine.server.type.CommandEnvelope.id","location":"server/io.spine.server.type/-command-envelope/id.html","searchKeys":["id","CommandId id()","io.spine.server.type.CommandEnvelope.id"]},{"name":"CommandMessage getOriginMessage()","description":"io.spine.server.event.RejectionEnvelope.getOriginMessage","location":"server/io.spine.server.event/-rejection-envelope/get-origin-message.html","searchKeys":["getOriginMessage","CommandMessage getOriginMessage()","io.spine.server.event.RejectionEnvelope.getOriginMessage"]},{"name":"CommandMessage message()","description":"io.spine.server.type.CommandEnvelope.message","location":"server/io.spine.server.type/-command-envelope/message.html","searchKeys":["message","CommandMessage message()","io.spine.server.type.CommandEnvelope.message"]},{"name":"CommandReactionMethod commanderOf(EventClass eventClass)","description":"io.spine.server.procman.model.ProcessManagerClass.commanderOf","location":"server/io.spine.server.procman.model/-process-manager-class/commander-of.html","searchKeys":["commanderOf","CommandReactionMethod commanderOf(EventClass eventClass)","io.spine.server.procman.model.ProcessManagerClass.commanderOf"]},{"name":"CommandReactionMethod commanderOn(EventClass eventClass)","description":"io.spine.server.command.model.CommanderClass.commanderOn","location":"server/io.spine.server.command.model/-commander-class/commander-on.html","searchKeys":["commanderOn","CommandReactionMethod commanderOn(EventClass eventClass)","io.spine.server.command.model.CommanderClass.commanderOn"]},{"name":"CommandReactionMethod create(Method method, ParameterSpec<EventEnvelope> params)","description":"io.spine.server.command.model.CommandReactionSignature.create","location":"server/io.spine.server.command.model/-command-reaction-signature/create.html","searchKeys":["create","CommandReactionMethod create(Method method, ParameterSpec<EventEnvelope> params)","io.spine.server.command.model.CommandReactionSignature.create"]},{"name":"CommandRouting<I> replaceDefault(CommandRoute<I, CommandMessage> newDefault)","description":"io.spine.server.route.CommandRouting.replaceDefault","location":"server/io.spine.server.route/-command-routing/replace-default.html","searchKeys":["replaceDefault","CommandRouting<I> replaceDefault(CommandRoute<I, CommandMessage> newDefault)","io.spine.server.route.CommandRouting.replaceDefault"]},{"name":"CommandRouting<I> route<M extends CommandMessage>(Class<M> commandType, CommandRoute<I, M> via)","description":"io.spine.server.route.CommandRouting.route","location":"server/io.spine.server.route/-command-routing/route.html","searchKeys":["route","CommandRouting<I> route<M extends CommandMessage>(Class<M> commandType, CommandRoute<I, M> via)","io.spine.server.route.CommandRouting.route"]},{"name":"CommandScheduler newCommandScheduler()","description":"io.spine.server.ServerEnvironment.newCommandScheduler","location":"server/io.spine.server/-server-environment/new-command-scheduler.html","searchKeys":["newCommandScheduler","CommandScheduler newCommandScheduler()","io.spine.server.ServerEnvironment.newCommandScheduler"]},{"name":"CommandService.Builder add(BoundedContext context)","description":"io.spine.server.CommandService.Builder.add","location":"server/io.spine.server/-command-service/-builder/add.html","searchKeys":["add","CommandService.Builder add(BoundedContext context)","io.spine.server.CommandService.Builder.add"]},{"name":"CommandService.Builder remove(BoundedContext context)","description":"io.spine.server.CommandService.Builder.remove","location":"server/io.spine.server/-command-service/-builder/remove.html","searchKeys":["remove","CommandService.Builder remove(BoundedContext context)","io.spine.server.CommandService.Builder.remove"]},{"name":"CommandService build()","description":"io.spine.server.CommandService.Builder.build","location":"server/io.spine.server/-command-service/-builder/build.html","searchKeys":["build","CommandService build()","io.spine.server.CommandService.Builder.build"]},{"name":"CommandSubstituteMethod commanderOf(CommandClass commandClass)","description":"io.spine.server.procman.model.ProcessManagerClass.commanderOf","location":"server/io.spine.server.procman.model/-process-manager-class/commander-of.html","searchKeys":["commanderOf","CommandSubstituteMethod commanderOf(CommandClass commandClass)","io.spine.server.procman.model.ProcessManagerClass.commanderOf"]},{"name":"CommandSubstituteMethod create(Method method, ParameterSpec<CommandEnvelope> params)","description":"io.spine.server.command.model.CommandSubstituteSignature.create","location":"server/io.spine.server.command.model/-command-substitute-signature/create.html","searchKeys":["create","CommandSubstituteMethod create(Method method, ParameterSpec<CommandEnvelope> params)","io.spine.server.command.model.CommandSubstituteSignature.create"]},{"name":"Command command()","description":"io.spine.server.type.CommandEnvelope.command","location":"server/io.spine.server.type/-command-envelope/command.html","searchKeys":["command","Command command()","io.spine.server.type.CommandEnvelope.command"]},{"name":"Command getCommand()","description":"io.spine.server.commandbus.CommandException.getCommand","location":"server/io.spine.server.commandbus/-command-exception/get-command.html","searchKeys":["getCommand","Command getCommand()","io.spine.server.commandbus.CommandException.getCommand"]},{"name":"Command getOrigin()","description":"io.spine.server.event.RejectionEnvelope.getOrigin","location":"server/io.spine.server.event/-rejection-envelope/get-origin.html","searchKeys":["getOrigin","Command getOrigin()","io.spine.server.event.RejectionEnvelope.getOrigin"]},{"name":"CompositeEventFilter.Builder add(EventFilter filter)","description":"io.spine.server.entity.CompositeEventFilter.Builder.add","location":"server/io.spine.server.entity/-composite-event-filter/-builder/add.html","searchKeys":["add","CompositeEventFilter.Builder add(EventFilter filter)","io.spine.server.entity.CompositeEventFilter.Builder.add"]},{"name":"CompositeEventFilter build()","description":"io.spine.server.entity.CompositeEventFilter.Builder.build","location":"server/io.spine.server.entity/-composite-event-filter/-builder/build.html","searchKeys":["build","CompositeEventFilter build()","io.spine.server.entity.CompositeEventFilter.Builder.build"]},{"name":"CompositeOperator operator()","description":"io.spine.server.entity.storage.CompositeQueryParameter.operator","location":"server/io.spine.server.entity.storage/-composite-query-parameter/operator.html","searchKeys":["operator","CompositeOperator operator()","io.spine.server.entity.storage.CompositeQueryParameter.operator"]},{"name":"CompositeQueryParameter and(Column column, Filter filter)","description":"io.spine.server.entity.storage.CompositeQueryParameter.and","location":"server/io.spine.server.entity.storage/-composite-query-parameter/and.html","searchKeys":["and","CompositeQueryParameter and(Column column, Filter filter)","io.spine.server.entity.storage.CompositeQueryParameter.and"]},{"name":"CompositeQueryParameter conjunct(Iterable<CompositeQueryParameter> other)","description":"io.spine.server.entity.storage.CompositeQueryParameter.conjunct","location":"server/io.spine.server.entity.storage/-composite-query-parameter/conjunct.html","searchKeys":["conjunct","CompositeQueryParameter conjunct(Iterable<CompositeQueryParameter> other)","io.spine.server.entity.storage.CompositeQueryParameter.conjunct"]},{"name":"Constructor<E> findConstructor()","description":"io.spine.server.entity.DefaultEntityFactory.findConstructor","location":"server/io.spine.server.entity/-default-entity-factory/find-constructor.html","searchKeys":["findConstructor","Constructor<E> findConstructor()","io.spine.server.entity.DefaultEntityFactory.findConstructor"]},{"name":"ContextSpec spec()","description":"io.spine.server.BoundedContext.spec","location":"server/io.spine.server/-bounded-context/spec.html","searchKeys":["spec","ContextSpec spec()","io.spine.server.BoundedContext.spec"]},{"name":"ContextSpec spec()","description":"io.spine.server.BoundedContextBuilder.spec","location":"server/io.spine.server/-bounded-context-builder/spec.html","searchKeys":["spec","ContextSpec spec()","io.spine.server.BoundedContextBuilder.spec"]},{"name":"ContextSpec toSingleTenant()","description":"io.spine.server.ContextSpec.toSingleTenant","location":"server/io.spine.server/-context-spec/to-single-tenant.html","searchKeys":["toSingleTenant","ContextSpec toSingleTenant()","io.spine.server.ContextSpec.toSingleTenant"]},{"name":"C get(ChannelId channelId)","description":"io.spine.server.transport.ChannelHub.get","location":"server/io.spine.server.transport/-channel-hub/get.html","searchKeys":["get","C get(ChannelId channelId)","io.spine.server.transport.ChannelHub.get"]},{"name":"C getC()","description":"io.spine.server.tuple.EitherOf3.getC","location":"server/io.spine.server.tuple/-either-of3/get-c.html","searchKeys":["getC","C getC()","io.spine.server.tuple.EitherOf3.getC"]},{"name":"C getC()","description":"io.spine.server.tuple.EitherOf4.getC","location":"server/io.spine.server.tuple/-either-of4/get-c.html","searchKeys":["getC","C getC()","io.spine.server.tuple.EitherOf4.getC"]},{"name":"C getC()","description":"io.spine.server.tuple.EitherOf5.getC","location":"server/io.spine.server.tuple/-either-of5/get-c.html","searchKeys":["getC","C getC()","io.spine.server.tuple.EitherOf5.getC"]},{"name":"C getC()","description":"io.spine.server.tuple.Quartet.getC","location":"server/io.spine.server.tuple/-quartet/get-c.html","searchKeys":["getC","C getC()","io.spine.server.tuple.Quartet.getC"]},{"name":"C getC()","description":"io.spine.server.tuple.Quintet.getC","location":"server/io.spine.server.tuple/-quintet/get-c.html","searchKeys":["getC","C getC()","io.spine.server.tuple.Quintet.getC"]},{"name":"C getC()","description":"io.spine.server.tuple.Triplet.getC","location":"server/io.spine.server.tuple/-triplet/get-c.html","searchKeys":["getC","C getC()","io.spine.server.tuple.Triplet.getC"]},{"name":"DO_NOT_ALLOW","description":"io.spine.server.aggregate.model.AllowImportAttribute.DO_NOT_ALLOW","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/-d-o_-n-o-t_-a-l-l-o-w/index.html","searchKeys":["DO_NOT_ALLOW","DO_NOT_ALLOW","io.spine.server.aggregate.model.AllowImportAttribute.DO_NOT_ALLOW"]},{"name":"DeadMessageHandler<CommandEnvelope> deadMessageHandler()","description":"io.spine.server.commandbus.CommandBus.deadMessageHandler","location":"server/io.spine.server.commandbus/-command-bus/dead-message-handler.html","searchKeys":["deadMessageHandler","DeadMessageHandler<CommandEnvelope> deadMessageHandler()","io.spine.server.commandbus.CommandBus.deadMessageHandler"]},{"name":"DeadMessageHandler<EventEnvelope> deadMessageHandler()","description":"io.spine.server.aggregate.ImportBus.deadMessageHandler","location":"server/io.spine.server.aggregate/-import-bus/dead-message-handler.html","searchKeys":["deadMessageHandler","DeadMessageHandler<EventEnvelope> deadMessageHandler()","io.spine.server.aggregate.ImportBus.deadMessageHandler"]},{"name":"DeadMessageHandler<EventEnvelope> deadMessageHandler()","description":"io.spine.server.event.EventBus.deadMessageHandler","location":"server/io.spine.server.event/-event-bus/dead-message-handler.html","searchKeys":["deadMessageHandler","DeadMessageHandler<EventEnvelope> deadMessageHandler()","io.spine.server.event.EventBus.deadMessageHandler"]},{"name":"DeliveryBuilder setCatchUpPageSize(int catchUpPageSize)","description":"io.spine.server.delivery.DeliveryBuilder.setCatchUpPageSize","location":"server/io.spine.server.delivery/-delivery-builder/set-catch-up-page-size.html","searchKeys":["setCatchUpPageSize","DeliveryBuilder setCatchUpPageSize(int catchUpPageSize)","io.spine.server.delivery.DeliveryBuilder.setCatchUpPageSize"]},{"name":"DeliveryBuilder setCatchUpStorage(CatchUpStorage catchUpStorage)","description":"io.spine.server.delivery.DeliveryBuilder.setCatchUpStorage","location":"server/io.spine.server.delivery/-delivery-builder/set-catch-up-storage.html","searchKeys":["setCatchUpStorage","DeliveryBuilder setCatchUpStorage(CatchUpStorage catchUpStorage)","io.spine.server.delivery.DeliveryBuilder.setCatchUpStorage"]},{"name":"DeliveryBuilder setDeduplicationWindow(Duration deduplicationWindow)","description":"io.spine.server.delivery.DeliveryBuilder.setDeduplicationWindow","location":"server/io.spine.server.delivery/-delivery-builder/set-deduplication-window.html","searchKeys":["setDeduplicationWindow","DeliveryBuilder setDeduplicationWindow(Duration deduplicationWindow)","io.spine.server.delivery.DeliveryBuilder.setDeduplicationWindow"]},{"name":"DeliveryBuilder setInboxStorage(InboxStorage inboxStorage)","description":"io.spine.server.delivery.DeliveryBuilder.setInboxStorage","location":"server/io.spine.server.delivery/-delivery-builder/set-inbox-storage.html","searchKeys":["setInboxStorage","DeliveryBuilder setInboxStorage(InboxStorage inboxStorage)","io.spine.server.delivery.DeliveryBuilder.setInboxStorage"]},{"name":"DeliveryBuilder setMonitor(DeliveryMonitor monitor)","description":"io.spine.server.delivery.DeliveryBuilder.setMonitor","location":"server/io.spine.server.delivery/-delivery-builder/set-monitor.html","searchKeys":["setMonitor","DeliveryBuilder setMonitor(DeliveryMonitor monitor)","io.spine.server.delivery.DeliveryBuilder.setMonitor"]},{"name":"DeliveryBuilder setPageSize(int pageSize)","description":"io.spine.server.delivery.DeliveryBuilder.setPageSize","location":"server/io.spine.server.delivery/-delivery-builder/set-page-size.html","searchKeys":["setPageSize","DeliveryBuilder setPageSize(int pageSize)","io.spine.server.delivery.DeliveryBuilder.setPageSize"]},{"name":"DeliveryBuilder setStrategy(DeliveryStrategy strategy)","description":"io.spine.server.delivery.DeliveryBuilder.setStrategy","location":"server/io.spine.server.delivery/-delivery-builder/set-strategy.html","searchKeys":["setStrategy","DeliveryBuilder setStrategy(DeliveryStrategy strategy)","io.spine.server.delivery.DeliveryBuilder.setStrategy"]},{"name":"DeliveryBuilder setWorkRegistry(ShardedWorkRegistry workRegistry)","description":"io.spine.server.delivery.DeliveryBuilder.setWorkRegistry","location":"server/io.spine.server.delivery/-delivery-builder/set-work-registry.html","searchKeys":["setWorkRegistry","DeliveryBuilder setWorkRegistry(ShardedWorkRegistry workRegistry)","io.spine.server.delivery.DeliveryBuilder.setWorkRegistry"]},{"name":"Delivery build()","description":"io.spine.server.delivery.DeliveryBuilder.build","location":"server/io.spine.server.delivery/-delivery-builder/build.html","searchKeys":["build","Delivery build()","io.spine.server.delivery.DeliveryBuilder.build"]},{"name":"DeploymentType deploymentType()","description":"io.spine.server.ServerEnvironment.deploymentType","location":"server/io.spine.server/-server-environment/deployment-type.html","searchKeys":["deploymentType","DeploymentType deploymentType()","io.spine.server.ServerEnvironment.deploymentType"]},{"name":"DispatchKey key()","description":"io.spine.server.event.model.EventHandlerMethod.key","location":"server/io.spine.server.event.model/-event-handler-method/key.html","searchKeys":["key","DispatchKey key()","io.spine.server.event.model.EventHandlerMethod.key"]},{"name":"DispatchKey key()","description":"io.spine.server.event.model.EventSubscriberMethod.key","location":"server/io.spine.server.event.model/-event-subscriber-method/key.html","searchKeys":["key","DispatchKey key()","io.spine.server.event.model.EventSubscriberMethod.key"]},{"name":"DispatchKey key()","description":"io.spine.server.event.model.StateSubscriberMethod.key","location":"server/io.spine.server.event.model/-state-subscriber-method/key.html","searchKeys":["key","DispatchKey key()","io.spine.server.event.model.StateSubscriberMethod.key"]},{"name":"DispatchKey key()","description":"io.spine.server.model.HandlerMethod.key","location":"server/io.spine.server.model/-handler-method/key.html","searchKeys":["key","DispatchKey key()","io.spine.server.model.HandlerMethod.key"]},{"name":"DispatchKey withFilter(ArgumentFilter filter)","description":"io.spine.server.model.DispatchKey.withFilter","location":"server/io.spine.server.model/-dispatch-key/with-filter.html","searchKeys":["withFilter","DispatchKey withFilter(ArgumentFilter filter)","io.spine.server.model.DispatchKey.withFilter"]},{"name":"DispatchOutcomeHandler afterSuccess(OutcomeHandler<Success> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.afterSuccess","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/after-success.html","searchKeys":["afterSuccess","DispatchOutcomeHandler afterSuccess(OutcomeHandler<Success> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.afterSuccess"]},{"name":"DispatchOutcomeHandler onCommands(OutcomeHandler<List<Command>> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onCommands","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-commands.html","searchKeys":["onCommands","DispatchOutcomeHandler onCommands(OutcomeHandler<List<Command>> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onCommands"]},{"name":"DispatchOutcomeHandler onError(OutcomeHandler<Error> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onError","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-error.html","searchKeys":["onError","DispatchOutcomeHandler onError(OutcomeHandler<Error> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onError"]},{"name":"DispatchOutcomeHandler onEvents(OutcomeHandler<List<Event>> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onEvents","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-events.html","searchKeys":["onEvents","DispatchOutcomeHandler onEvents(OutcomeHandler<List<Event>> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onEvents"]},{"name":"DispatchOutcomeHandler onIgnored(OutcomeHandler<Ignore> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onIgnored","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-ignored.html","searchKeys":["onIgnored","DispatchOutcomeHandler onIgnored(OutcomeHandler<Ignore> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onIgnored"]},{"name":"DispatchOutcomeHandler onInterruption(OutcomeHandler<Interruption> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onInterruption","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-interruption.html","searchKeys":["onInterruption","DispatchOutcomeHandler onInterruption(OutcomeHandler<Interruption> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onInterruption"]},{"name":"DispatchOutcomeHandler onRejection(OutcomeHandler<Event> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onRejection","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-rejection.html","searchKeys":["onRejection","DispatchOutcomeHandler onRejection(OutcomeHandler<Event> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onRejection"]},{"name":"DispatchOutcomeHandler onSuccess(OutcomeHandler<Success> handler)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.onSuccess","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/on-success.html","searchKeys":["onSuccess","DispatchOutcomeHandler onSuccess(OutcomeHandler<Success> handler)","io.spine.server.dispatch.DispatchOutcomeHandler.onSuccess"]},{"name":"DispatchOutcome dispatch(Projection<I, S, B> projection, EventEnvelope event)","description":"io.spine.server.projection.ProjectionTransaction.dispatch","location":"server/io.spine.server.projection/-projection-transaction/dispatch.html","searchKeys":["dispatch","DispatchOutcome dispatch(Projection<I, S, B> projection, EventEnvelope event)","io.spine.server.projection.ProjectionTransaction.dispatch"]},{"name":"DispatchOutcome dispatchCommand(CommandEnvelope command)","description":"io.spine.server.aggregate.Aggregate.dispatchCommand","location":"server/io.spine.server.aggregate/-aggregate/dispatch-command.html","searchKeys":["dispatchCommand","DispatchOutcome dispatchCommand(CommandEnvelope command)","io.spine.server.aggregate.Aggregate.dispatchCommand"]},{"name":"DispatchOutcome dispatchCommand(CommandEnvelope command)","description":"io.spine.server.procman.ProcessManager.dispatchCommand","location":"server/io.spine.server.procman/-process-manager/dispatch-command.html","searchKeys":["dispatchCommand","DispatchOutcome dispatchCommand(CommandEnvelope command)","io.spine.server.procman.ProcessManager.dispatchCommand"]},{"name":"DispatchOutcome handle()","description":"io.spine.server.dispatch.DispatchOutcomeHandler.handle","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/handle.html","searchKeys":["handle","DispatchOutcome handle()","io.spine.server.dispatch.DispatchOutcomeHandler.handle"]},{"name":"DispatchOutcome invoke(T target, E envelope)","description":"io.spine.server.model.AbstractHandlerMethod.invoke","location":"server/io.spine.server.model/-abstract-handler-method/invoke.html","searchKeys":["invoke","DispatchOutcome invoke(T target, E envelope)","io.spine.server.model.AbstractHandlerMethod.invoke"]},{"name":"DispatchOutcome invokeDispatcher(P processManager)","description":"io.spine.server.procman.PmCommandEndpoint.invokeDispatcher","location":"server/io.spine.server.procman/-pm-command-endpoint/invoke-dispatcher.html","searchKeys":["invokeDispatcher","DispatchOutcome invokeDispatcher(P processManager)","io.spine.server.procman.PmCommandEndpoint.invokeDispatcher"]},{"name":"DispatchOutcome invokeDispatcher(P processManager)","description":"io.spine.server.procman.PmEventEndpoint.invokeDispatcher","location":"server/io.spine.server.procman/-pm-event-endpoint/invoke-dispatcher.html","searchKeys":["invokeDispatcher","DispatchOutcome invokeDispatcher(P processManager)","io.spine.server.procman.PmEventEndpoint.invokeDispatcher"]},{"name":"DispatchOutcome invokeDispatcher(P projection)","description":"io.spine.server.projection.ProjectionEndpoint.invokeDispatcher","location":"server/io.spine.server.projection/-projection-endpoint/invoke-dispatcher.html","searchKeys":["invokeDispatcher","DispatchOutcome invokeDispatcher(P projection)","io.spine.server.projection.ProjectionEndpoint.invokeDispatcher"]},{"name":"DispatchOutcome perform()","description":"io.spine.server.command.DispatchCommand.perform","location":"server/io.spine.server.command/-dispatch-command/perform.html","searchKeys":["perform","DispatchOutcome perform()","io.spine.server.command.DispatchCommand.perform"]},{"name":"DispatchOutcome perform()","description":"io.spine.server.event.EventDispatch.perform","location":"server/io.spine.server.event/-event-dispatch/perform.html","searchKeys":["perform","DispatchOutcome perform()","io.spine.server.event.EventDispatch.perform"]},{"name":"DispatchOutcome performDispatch()","description":"io.spine.server.entity.CommandDispatchingPhase.performDispatch","location":"server/io.spine.server.entity/-command-dispatching-phase/perform-dispatch.html","searchKeys":["performDispatch","DispatchOutcome performDispatch()","io.spine.server.entity.CommandDispatchingPhase.performDispatch"]},{"name":"DispatchOutcome performDispatch()","description":"io.spine.server.entity.EventDispatchingPhase.performDispatch","location":"server/io.spine.server.entity/-event-dispatching-phase/perform-dispatch.html","searchKeys":["performDispatch","DispatchOutcome performDispatch()","io.spine.server.entity.EventDispatchingPhase.performDispatch"]},{"name":"DispatchOutcome play(EventEnvelope event)","description":"io.spine.server.entity.EventPlayingTransaction.play","location":"server/io.spine.server.entity/-event-playing-transaction/play.html","searchKeys":["play","DispatchOutcome play(EventEnvelope event)","io.spine.server.entity.EventPlayingTransaction.play"]},{"name":"DispatchOutcome play(Event event)","description":"io.spine.server.entity.EventPlayer.play","location":"server/io.spine.server.entity/-event-player/play.html","searchKeys":["play","DispatchOutcome play(Event event)","io.spine.server.entity.EventPlayer.play"]},{"name":"DispatcherRegistry<C, E, D> registry()","description":"io.spine.server.bus.Bus.registry","location":"server/io.spine.server.bus/-bus/registry.html","searchKeys":["registry","DispatcherRegistry<C, E, D> registry()","io.spine.server.bus.Bus.registry"]},{"name":"DispatcherRegistry<EventClass, EventEnvelope, EventDispatcher> newRegistry()","description":"io.spine.server.event.EventBus.Builder.newRegistry","location":"server/io.spine.server.event/-event-bus/-builder/new-registry.html","searchKeys":["newRegistry","DispatcherRegistry<EventClass, EventEnvelope, EventDispatcher> newRegistry()","io.spine.server.event.EventBus.Builder.newRegistry"]},{"name":"DoNothing doNothing()","description":"io.spine.server.command.Commander.doNothing","location":"server/io.spine.server.command/-commander/do-nothing.html","searchKeys":["doNothing","DoNothing doNothing()","io.spine.server.command.Commander.doNothing"]},{"name":"D dispatcherOf(E envelope)","description":"io.spine.server.bus.UnicastBus.dispatcherOf","location":"server/io.spine.server.bus/-unicast-bus/dispatcher-of.html","searchKeys":["dispatcherOf","D dispatcherOf(E envelope)","io.spine.server.bus.UnicastBus.dispatcherOf"]},{"name":"D getD()","description":"io.spine.server.tuple.EitherOf4.getD","location":"server/io.spine.server.tuple/-either-of4/get-d.html","searchKeys":["getD","D getD()","io.spine.server.tuple.EitherOf4.getD"]},{"name":"D getD()","description":"io.spine.server.tuple.EitherOf5.getD","location":"server/io.spine.server.tuple/-either-of5/get-d.html","searchKeys":["getD","D getD()","io.spine.server.tuple.EitherOf5.getD"]},{"name":"D getD()","description":"io.spine.server.tuple.Quartet.getD","location":"server/io.spine.server.tuple/-quartet/get-d.html","searchKeys":["getD","D getD()","io.spine.server.tuple.Quartet.getD"]},{"name":"D getD()","description":"io.spine.server.tuple.Quintet.getD","location":"server/io.spine.server.tuple/-quintet/get-d.html","searchKeys":["getD","D getD()","io.spine.server.tuple.Quintet.getD"]},{"name":"EntityClass<? extends Object> modelClass()","description":"io.spine.server.entity.AbstractEntity.modelClass","location":"server/io.spine.server.entity/-abstract-entity/model-class.html","searchKeys":["modelClass","EntityClass<? extends Object> modelClass()","io.spine.server.entity.AbstractEntity.modelClass"]},{"name":"EntityClass<? extends Object> thisClass()","description":"io.spine.server.entity.AbstractEntity.thisClass","location":"server/io.spine.server.entity/-abstract-entity/this-class.html","searchKeys":["thisClass","EntityClass<? extends Object> thisClass()","io.spine.server.entity.AbstractEntity.thisClass"]},{"name":"EntityClass<E> entityModelClass()","description":"io.spine.server.entity.Repository.entityModelClass","location":"server/io.spine.server.entity/-repository/entity-model-class.html","searchKeys":["entityModelClass","EntityClass<E> entityModelClass()","io.spine.server.entity.Repository.entityModelClass"]},{"name":"EntityClass<E> toModelClass(Class<E> cls)","description":"io.spine.server.entity.Repository.toModelClass","location":"server/io.spine.server.entity/-repository/to-model-class.html","searchKeys":["toModelClass","EntityClass<E> toModelClass(Class<E> cls)","io.spine.server.entity.Repository.toModelClass"]},{"name":"EntityFactory<A> createFactory()","description":"io.spine.server.aggregate.model.AggregatePartClass.createFactory","location":"server/io.spine.server.aggregate.model/-aggregate-part-class/create-factory.html","searchKeys":["createFactory","EntityFactory<A> createFactory()","io.spine.server.aggregate.model.AggregatePartClass.createFactory"]},{"name":"EntityFactory<E> createFactory()","description":"io.spine.server.entity.model.EntityClass.createFactory","location":"server/io.spine.server.entity.model/-entity-class/create-factory.html","searchKeys":["createFactory","EntityFactory<E> createFactory()","io.spine.server.entity.model.EntityClass.createFactory"]},{"name":"EntityFactory<E> entityFactory()","description":"io.spine.server.entity.DefaultRecordBasedRepository.entityFactory","location":"server/io.spine.server.entity/-default-record-based-repository/entity-factory.html","searchKeys":["entityFactory","EntityFactory<E> entityFactory()","io.spine.server.entity.DefaultRecordBasedRepository.entityFactory"]},{"name":"EntityFactory<E> entityFactory()","description":"io.spine.server.entity.StorageConverter.entityFactory","location":"server/io.spine.server.entity/-storage-converter/entity-factory.html","searchKeys":["entityFactory","EntityFactory<E> entityFactory()","io.spine.server.entity.StorageConverter.entityFactory"]},{"name":"EntityLifecycle lifecycleOf(I id)","description":"io.spine.server.entity.Repository.lifecycleOf","location":"server/io.spine.server.entity/-repository/lifecycle-of.html","searchKeys":["lifecycleOf","EntityLifecycle lifecycleOf(I id)","io.spine.server.entity.Repository.lifecycleOf"]},{"name":"EntityQuery<I> withActiveLifecycle(RecordStorage<I> storage)","description":"io.spine.server.entity.storage.EntityQuery.withActiveLifecycle","location":"server/io.spine.server.entity.storage/-entity-query/with-active-lifecycle.html","searchKeys":["withActiveLifecycle","EntityQuery<I> withActiveLifecycle(RecordStorage<I> storage)","io.spine.server.entity.storage.EntityQuery.withActiveLifecycle"]},{"name":"EntityRecord doForward(E entity)","description":"io.spine.server.entity.StorageConverter.doForward","location":"server/io.spine.server.entity/-storage-converter/do-forward.html","searchKeys":["doForward","EntityRecord doForward(E entity)","io.spine.server.entity.StorageConverter.doForward"]},{"name":"EntityRecord record()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.record","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/record.html","searchKeys":["record","EntityRecord record()","io.spine.server.entity.storage.EntityRecordWithColumns.record"]},{"name":"EnvelopeValidator<CommandEnvelope> validator()","description":"io.spine.server.commandbus.CommandBus.validator","location":"server/io.spine.server.commandbus/-command-bus/validator.html","searchKeys":["validator","EnvelopeValidator<CommandEnvelope> validator()","io.spine.server.commandbus.CommandBus.validator"]},{"name":"EnvelopeValidator<EventEnvelope> validator()","description":"io.spine.server.aggregate.ImportBus.validator","location":"server/io.spine.server.aggregate/-import-bus/validator.html","searchKeys":["validator","EnvelopeValidator<EventEnvelope> validator()","io.spine.server.aggregate.ImportBus.validator"]},{"name":"EnvelopeValidator<EventEnvelope> validator()","description":"io.spine.server.event.EventBus.validator","location":"server/io.spine.server.event/-event-bus/validator.html","searchKeys":["validator","EnvelopeValidator<EventEnvelope> validator()","io.spine.server.event.EventBus.validator"]},{"name":"Error asError()","description":"io.spine.server.aggregate.UnsupportedImportEventException.asError","location":"server/io.spine.server.aggregate/-unsupported-import-event-exception/as-error.html","searchKeys":["asError","Error asError()","io.spine.server.aggregate.UnsupportedImportEventException.asError"]},{"name":"Error asError()","description":"io.spine.server.commandbus.CommandException.asError","location":"server/io.spine.server.commandbus/-command-exception/as-error.html","searchKeys":["asError","Error asError()","io.spine.server.commandbus.CommandException.asError"]},{"name":"Error asError()","description":"io.spine.server.event.EventException.asError","location":"server/io.spine.server.event/-event-exception/as-error.html","searchKeys":["asError","Error asError()","io.spine.server.event.EventException.asError"]},{"name":"Error asError()","description":"io.spine.server.integration.UnsupportedExternalMessageException.asError","location":"server/io.spine.server.integration/-unsupported-external-message-exception/as-error.html","searchKeys":["asError","Error asError()","io.spine.server.integration.UnsupportedExternalMessageException.asError"]},{"name":"Error asError()","description":"io.spine.server.stand.InvalidRequestException.asError","location":"server/io.spine.server.stand/-invalid-request-exception/as-error.html","searchKeys":["asError","Error asError()","io.spine.server.stand.InvalidRequestException.asError"]},{"name":"Error error()","description":"io.spine.server.entity.InvalidEntityStateException.error","location":"server/io.spine.server.entity/-invalid-entity-state-exception/error.html","searchKeys":["error","Error error()","io.spine.server.entity.InvalidEntityStateException.error"]},{"name":"EventAcceptingMethodParams parameterSpec()","description":"io.spine.server.event.model.EventHandlerMethod.parameterSpec","location":"server/io.spine.server.event.model/-event-handler-method/parameter-spec.html","searchKeys":["parameterSpec","EventAcceptingMethodParams parameterSpec()","io.spine.server.event.model.EventHandlerMethod.parameterSpec"]},{"name":"EventAcceptingMethodParams parameterSpec()","description":"io.spine.server.event.model.EventSubscriberMethod.parameterSpec","location":"server/io.spine.server.event.model/-event-subscriber-method/parameter-spec.html","searchKeys":["parameterSpec","EventAcceptingMethodParams parameterSpec()","io.spine.server.event.model.EventSubscriberMethod.parameterSpec"]},{"name":"EventBus.Builder self()","description":"io.spine.server.event.EventBus.Builder.self","location":"server/io.spine.server.event/-event-bus/-builder/self.html","searchKeys":["self","EventBus.Builder self()","io.spine.server.event.EventBus.Builder.self"]},{"name":"EventBus.Builder setObserver(StreamObserver<Ack> observer)","description":"io.spine.server.event.EventBus.Builder.setObserver","location":"server/io.spine.server.event/-event-bus/-builder/set-observer.html","searchKeys":["setObserver","EventBus.Builder setObserver(StreamObserver<Ack> observer)","io.spine.server.event.EventBus.Builder.setObserver"]},{"name":"EventBus build()","description":"io.spine.server.event.EventBus.Builder.build","location":"server/io.spine.server.event/-event-bus/-builder/build.html","searchKeys":["build","EventBus build()","io.spine.server.event.EventBus.Builder.build"]},{"name":"EventBus eventBus()","description":"io.spine.server.BoundedContext.eventBus","location":"server/io.spine.server/-bounded-context/event-bus.html","searchKeys":["eventBus","EventBus eventBus()","io.spine.server.BoundedContext.eventBus"]},{"name":"EventClass messageClass()","description":"io.spine.server.aggregate.model.Applier.messageClass","location":"server/io.spine.server.aggregate.model/-applier/message-class.html","searchKeys":["messageClass","EventClass messageClass()","io.spine.server.aggregate.model.Applier.messageClass"]},{"name":"EventClass messageClass()","description":"io.spine.server.command.model.CommandReactionMethod.messageClass","location":"server/io.spine.server.command.model/-command-reaction-method/message-class.html","searchKeys":["messageClass","EventClass messageClass()","io.spine.server.command.model.CommandReactionMethod.messageClass"]},{"name":"EventClass messageClass()","description":"io.spine.server.event.RejectionEnvelope.messageClass","location":"server/io.spine.server.event/-rejection-envelope/message-class.html","searchKeys":["messageClass","EventClass messageClass()","io.spine.server.event.RejectionEnvelope.messageClass"]},{"name":"EventClass messageClass()","description":"io.spine.server.event.model.EventReactorMethod.messageClass","location":"server/io.spine.server.event.model/-event-reactor-method/message-class.html","searchKeys":["messageClass","EventClass messageClass()","io.spine.server.event.model.EventReactorMethod.messageClass"]},{"name":"EventClass messageClass()","description":"io.spine.server.event.model.SubscriberMethod.messageClass","location":"server/io.spine.server.event.model/-subscriber-method/message-class.html","searchKeys":["messageClass","EventClass messageClass()","io.spine.server.event.model.SubscriberMethod.messageClass"]},{"name":"EventClass messageClass()","description":"io.spine.server.type.EventEnvelope.messageClass","location":"server/io.spine.server.type/-event-envelope/message-class.html","searchKeys":["messageClass","EventClass messageClass()","io.spine.server.type.EventEnvelope.messageClass"]},{"name":"EventContext context()","description":"io.spine.server.event.RejectionEnvelope.context","location":"server/io.spine.server.event/-rejection-envelope/context.html","searchKeys":["context","EventContext context()","io.spine.server.event.RejectionEnvelope.context"]},{"name":"EventContext context()","description":"io.spine.server.type.EventEnvelope.context","location":"server/io.spine.server.type/-event-envelope/context.html","searchKeys":["context","EventContext context()","io.spine.server.type.EventEnvelope.context"]},{"name":"EventDispatcherRegistry registry()","description":"io.spine.server.event.EventBus.registry","location":"server/io.spine.server.event/-event-bus/registry.html","searchKeys":["registry","EventDispatcherRegistry registry()","io.spine.server.event.EventBus.registry"]},{"name":"EventEnricher.Builder add<M extends EventMessage, R extends Message>(Class<M> eventClassOrInterface, Class<R> enrichmentClass, EventEnrichmentFn<M, R> func)","description":"io.spine.server.event.EventEnricher.Builder.add","location":"server/io.spine.server.event/-event-enricher/-builder/add.html","searchKeys":["add","EventEnricher.Builder add<M extends EventMessage, R extends Message>(Class<M> eventClassOrInterface, Class<R> enrichmentClass, EventEnrichmentFn<M, R> func)","io.spine.server.event.EventEnricher.Builder.add"]},{"name":"EventEnricher build()","description":"io.spine.server.event.EventEnricher.Builder.build","location":"server/io.spine.server.event/-event-enricher/-builder/build.html","searchKeys":["build","EventEnricher build()","io.spine.server.event.EventEnricher.Builder.build"]},{"name":"EventEnvelope event()","description":"io.spine.server.event.EventDispatch.event","location":"server/io.spine.server.event/-event-dispatch/event.html","searchKeys":["event","EventEnvelope event()","io.spine.server.event.EventDispatch.event"]},{"name":"EventEnvelope getEvent()","description":"io.spine.server.event.RejectionEnvelope.getEvent","location":"server/io.spine.server.event/-rejection-envelope/get-event.html","searchKeys":["getEvent","EventEnvelope getEvent()","io.spine.server.event.RejectionEnvelope.getEvent"]},{"name":"EventEnvelope toEnriched(EnrichmentService<EventMessage, EventContext> service)","description":"io.spine.server.type.EventEnvelope.toEnriched","location":"server/io.spine.server.type/-event-envelope/to-enriched.html","searchKeys":["toEnriched","EventEnvelope toEnriched(EnrichmentService<EventMessage, EventContext> service)","io.spine.server.type.EventEnvelope.toEnriched"]},{"name":"EventEnvelope toEnvelope(Event message)","description":"io.spine.server.event.EventBus.toEnvelope","location":"server/io.spine.server.event/-event-bus/to-envelope.html","searchKeys":["toEnvelope","EventEnvelope toEnvelope(Event message)","io.spine.server.event.EventBus.toEnvelope"]},{"name":"EventEnvelope toEnvelope(Event wrapper)","description":"io.spine.server.aggregate.ImportBus.toEnvelope","location":"server/io.spine.server.aggregate/-import-bus/to-envelope.html","searchKeys":["toEnvelope","EventEnvelope toEnvelope(Event wrapper)","io.spine.server.aggregate.ImportBus.toEnvelope"]},{"name":"EventEnvelope toEventEnvelope()","description":"io.spine.server.integration.ExternalMessageEnvelope.toEventEnvelope","location":"server/io.spine.server.integration/-external-message-envelope/to-event-envelope.html","searchKeys":["toEventEnvelope","EventEnvelope toEventEnvelope()","io.spine.server.integration.ExternalMessageEnvelope.toEventEnvelope"]},{"name":"EventFieldFilter.Builder putMask(Class<? extends EventMessage> eventClass, FieldMask mask)","description":"io.spine.server.entity.EventFieldFilter.Builder.putMask","location":"server/io.spine.server.entity/-event-field-filter/-builder/put-mask.html","searchKeys":["putMask","EventFieldFilter.Builder putMask(Class<? extends EventMessage> eventClass, FieldMask mask)","io.spine.server.entity.EventFieldFilter.Builder.putMask"]},{"name":"EventFieldFilter build()","description":"io.spine.server.entity.EventFieldFilter.Builder.build","location":"server/io.spine.server.entity/-event-field-filter/-builder/build.html","searchKeys":["build","EventFieldFilter build()","io.spine.server.entity.EventFieldFilter.Builder.build"]},{"name":"EventFilter eventFilter()","description":"io.spine.server.entity.Repository.eventFilter","location":"server/io.spine.server.entity/-repository/event-filter.html","searchKeys":["eventFilter","EventFilter eventFilter()","io.spine.server.entity.Repository.eventFilter"]},{"name":"EventId id()","description":"io.spine.server.event.RejectionEnvelope.id","location":"server/io.spine.server.event/-rejection-envelope/id.html","searchKeys":["id","EventId id()","io.spine.server.event.RejectionEnvelope.id"]},{"name":"EventId id()","description":"io.spine.server.type.EventEnvelope.id","location":"server/io.spine.server.type/-event-envelope/id.html","searchKeys":["id","EventId id()","io.spine.server.type.EventEnvelope.id"]},{"name":"EventMessage getEventMessage()","description":"io.spine.server.event.EventException.getEventMessage","location":"server/io.spine.server.event/-event-exception/get-event-message.html","searchKeys":["getEventMessage","EventMessage getEventMessage()","io.spine.server.event.EventException.getEventMessage"]},{"name":"EventMessage message()","description":"io.spine.server.type.EventEnvelope.message","location":"server/io.spine.server.type/-event-envelope/message.html","searchKeys":["message","EventMessage message()","io.spine.server.type.EventEnvelope.message"]},{"name":"EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.EventReactorClass.reactorOf","location":"server/io.spine.server.event.model/-event-reactor-class/reactor-of.html","searchKeys":["reactorOf","EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.EventReactorClass.reactorOf"]},{"name":"EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.ReactorClassDelegate.reactorOf","location":"server/io.spine.server.event.model/-reactor-class-delegate/reactor-of.html","searchKeys":["reactorOf","EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.ReactorClassDelegate.reactorOf"]},{"name":"EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.procman.model.ProcessManagerClass.reactorOf","location":"server/io.spine.server.procman.model/-process-manager-class/reactor-of.html","searchKeys":["reactorOf","EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.procman.model.ProcessManagerClass.reactorOf"]},{"name":"EventRouting<I> replaceDefault(EventRoute<I, EventMessage> newDefault)","description":"io.spine.server.route.EventRouting.replaceDefault","location":"server/io.spine.server.route/-event-routing/replace-default.html","searchKeys":["replaceDefault","EventRouting<I> replaceDefault(EventRoute<I, EventMessage> newDefault)","io.spine.server.route.EventRouting.replaceDefault"]},{"name":"EventRouting<I> route<E extends EventMessage>(Class<E> eventType, EventRoute<I, ? extends Object> via)","description":"io.spine.server.route.EventRouting.route","location":"server/io.spine.server.route/-event-routing/route.html","searchKeys":["route","EventRouting<I> route<E extends EventMessage>(Class<E> eventType, EventRoute<I, ? extends Object> via)","io.spine.server.route.EventRouting.route"]},{"name":"EventRouting<I> routeStateUpdates(StateUpdateRouting<I> routing)","description":"io.spine.server.route.EventRouting.routeStateUpdates","location":"server/io.spine.server.route/-event-routing/route-state-updates.html","searchKeys":["routeStateUpdates","EventRouting<I> routeStateUpdates(StateUpdateRouting<I> routing)","io.spine.server.route.EventRouting.routeStateUpdates"]},{"name":"EventRouting<I> unicast<E extends EventMessage>(Class<E> eventType, BiFunction<E, EventContext, I> via)","description":"io.spine.server.route.EventRouting.unicast","location":"server/io.spine.server.route/-event-routing/unicast.html","searchKeys":["unicast","EventRouting<I> unicast<E extends EventMessage>(Class<E> eventType, BiFunction<E, EventContext, I> via)","io.spine.server.route.EventRouting.unicast"]},{"name":"EventRouting<I> unicast<E extends EventMessage>(Class<E> eventType, Function<E, I> via)","description":"io.spine.server.route.EventRouting.unicast","location":"server/io.spine.server.route/-event-routing/unicast.html","searchKeys":["unicast","EventRouting<I> unicast<E extends EventMessage>(Class<E> eventType, Function<E, I> via)","io.spine.server.route.EventRouting.unicast"]},{"name":"EventStore createEventStore(ContextSpec context)","description":"io.spine.server.storage.StorageFactory.createEventStore","location":"server/io.spine.server.storage/-storage-factory/create-event-store.html","searchKeys":["createEventStore","EventStore createEventStore(ContextSpec context)","io.spine.server.storage.StorageFactory.createEventStore"]},{"name":"EventStore createEventStore(ContextSpec context)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.createEventStore","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/create-event-store.html","searchKeys":["createEventStore","EventStore createEventStore(ContextSpec context)","io.spine.server.storage.system.SystemAwareStorageFactory.createEventStore"]},{"name":"EventStore eventStore()","description":"io.spine.server.event.EventBus.eventStore","location":"server/io.spine.server.event/-event-bus/event-store.html","searchKeys":["eventStore","EventStore eventStore()","io.spine.server.event.EventBus.eventStore"]},{"name":"Event createEvent(EventMessage message, Version version)","description":"io.spine.server.event.EventFactory.createEvent","location":"server/io.spine.server.event/-event-factory/create-event.html","searchKeys":["createEvent","Event createEvent(EventMessage message, Version version)","io.spine.server.event.EventFactory.createEvent"]},{"name":"Event createRejectionEvent(RejectionMessage message, Version version, RejectionEventContext rejectionContext)","description":"io.spine.server.event.EventFactory.createRejectionEvent","location":"server/io.spine.server.event/-event-factory/create-rejection-event.html","searchKeys":["createRejectionEvent","Event createRejectionEvent(RejectionMessage message, Version version, RejectionEventContext rejectionContext)","io.spine.server.event.EventFactory.createRejectionEvent"]},{"name":"Event getEvent()","description":"io.spine.server.tenant.EventOperation.getEvent","location":"server/io.spine.server.tenant/-event-operation/get-event.html","searchKeys":["getEvent","Event getEvent()","io.spine.server.tenant.EventOperation.getEvent"]},{"name":"Event postEvent(EventMessage systemEvent)","description":"io.spine.system.server.SystemWriteSide.postEvent","location":"server/io.spine.system.server/-system-write-side/post-event.html","searchKeys":["postEvent","Event postEvent(EventMessage systemEvent)","io.spine.system.server.SystemWriteSide.postEvent"]},{"name":"Event postEvent(EventMessage systemEvent, Origin origin)","description":"io.spine.system.server.NoOpSystemWriteSide.postEvent","location":"server/io.spine.system.server/-no-op-system-write-side/post-event.html","searchKeys":["postEvent","Event postEvent(EventMessage systemEvent, Origin origin)","io.spine.system.server.NoOpSystemWriteSide.postEvent"]},{"name":"E create(I id)","description":"io.spine.server.entity.RecordBasedRepository.create","location":"server/io.spine.server.entity/-record-based-repository/create.html","searchKeys":["create","E create(I id)","io.spine.server.entity.RecordBasedRepository.create"]},{"name":"E create(Object constructionArgument)","description":"io.spine.server.entity.model.EntityClass.create","location":"server/io.spine.server.entity.model/-entity-class/create.html","searchKeys":["create","E create(Object constructionArgument)","io.spine.server.entity.model.EntityClass.create"]},{"name":"E create(Object id)","description":"io.spine.server.entity.DefaultEntityFactory.create","location":"server/io.spine.server.entity/-default-entity-factory/create.html","searchKeys":["create","E create(Object id)","io.spine.server.entity.DefaultEntityFactory.create"]},{"name":"E doBackward(EntityRecord entityRecord)","description":"io.spine.server.entity.StorageConverter.doBackward","location":"server/io.spine.server.entity/-storage-converter/do-backward.html","searchKeys":["doBackward","E doBackward(EntityRecord entityRecord)","io.spine.server.entity.StorageConverter.doBackward"]},{"name":"E enrich<E extends EnrichableMessageEnvelope<? extends Object, ? extends Object, M, C, E>>(E source)","description":"io.spine.server.enrich.Enricher.enrich","location":"server/io.spine.server.enrich/-enricher/enrich.html","searchKeys":["enrich","E enrich<E extends EnrichableMessageEnvelope<? extends Object, ? extends Object, M, C, E>>(E source)","io.spine.server.enrich.Enricher.enrich"]},{"name":"E entity()","description":"io.spine.server.event.EventDispatch.entity","location":"server/io.spine.server.event/-event-dispatch/entity.html","searchKeys":["entity","E entity()","io.spine.server.event.EventDispatch.entity"]},{"name":"E findOrCreate(I id)","description":"io.spine.server.entity.RecordBasedRepository.findOrCreate","location":"server/io.spine.server.entity/-record-based-repository/find-or-create.html","searchKeys":["findOrCreate","E findOrCreate(I id)","io.spine.server.entity.RecordBasedRepository.findOrCreate"]},{"name":"E getE()","description":"io.spine.server.tuple.EitherOf5.getE","location":"server/io.spine.server.tuple/-either-of5/get-e.html","searchKeys":["getE","E getE()","io.spine.server.tuple.EitherOf5.getE"]},{"name":"E getE()","description":"io.spine.server.tuple.Quintet.getE","location":"server/io.spine.server.tuple/-quintet/get-e.html","searchKeys":["getE","E getE()","io.spine.server.tuple.Quintet.getE"]},{"name":"E toEntity(EntityRecord record)","description":"io.spine.server.entity.RecordBasedRepository.toEntity","location":"server/io.spine.server.entity/-record-based-repository/to-entity.html","searchKeys":["toEntity","E toEntity(EntityRecord record)","io.spine.server.entity.RecordBasedRepository.toEntity"]},{"name":"FieldDeclaration protoField()","description":"io.spine.server.entity.storage.InterfaceBasedColumn.protoField","location":"server/io.spine.server.entity.storage/-interface-based-column/proto-field.html","searchKeys":["protoField","FieldDeclaration protoField()","io.spine.server.entity.storage.InterfaceBasedColumn.protoField"]},{"name":"FieldMask fieldMask()","description":"io.spine.server.entity.StorageConverter.fieldMask","location":"server/io.spine.server.entity/-storage-converter/field-mask.html","searchKeys":["fieldMask","FieldMask fieldMask()","io.spine.server.entity.StorageConverter.fieldMask"]},{"name":"GrpcContainer.Builder addService(BindableService service)","description":"io.spine.server.GrpcContainer.Builder.addService","location":"server/io.spine.server/-grpc-container/-builder/add-service.html","searchKeys":["addService","GrpcContainer.Builder addService(BindableService service)","io.spine.server.GrpcContainer.Builder.addService"]},{"name":"GrpcContainer.Builder removeService(ServerServiceDefinition service)","description":"io.spine.server.GrpcContainer.Builder.removeService","location":"server/io.spine.server/-grpc-container/-builder/remove-service.html","searchKeys":["removeService","GrpcContainer.Builder removeService(ServerServiceDefinition service)","io.spine.server.GrpcContainer.Builder.removeService"]},{"name":"GrpcContainer.Builder setPort(int ignored)","description":"io.spine.server.GrpcContainer.Builder.setPort","location":"server/io.spine.server/-grpc-container/-builder/set-port.html","searchKeys":["setPort","GrpcContainer.Builder setPort(int ignored)","io.spine.server.GrpcContainer.Builder.setPort"]},{"name":"GrpcContainer build()","description":"io.spine.server.GrpcContainer.Builder.build","location":"server/io.spine.server/-grpc-container/-builder/build.html","searchKeys":["build","GrpcContainer build()","io.spine.server.GrpcContainer.Builder.build"]},{"name":"H handlerOf(CommandClass commandClass)","description":"io.spine.server.command.model.AbstractCommandHandlingClass.handlerOf","location":"server/io.spine.server.command.model/-abstract-command-handling-class/handler-of.html","searchKeys":["handlerOf","H handlerOf(CommandClass commandClass)","io.spine.server.command.model.AbstractCommandHandlingClass.handlerOf"]},{"name":"H handlerOf(M messageClass)","description":"io.spine.server.model.HandlerMap.handlerOf","location":"server/io.spine.server.model/-handler-map/handler-of.html","searchKeys":["handlerOf","H handlerOf(M messageClass)","io.spine.server.model.HandlerMap.handlerOf"]},{"name":"H handlerOf(M messageClass, MessageClass<?> originClass)","description":"io.spine.server.model.HandlerMap.handlerOf","location":"server/io.spine.server.model/-handler-map/handler-of.html","searchKeys":["handlerOf","H handlerOf(M messageClass, MessageClass<?> originClass)","io.spine.server.model.HandlerMap.handlerOf"]},{"name":"ID","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.ID","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/-i-d/index.html","searchKeys":["ID","ID","io.spine.server.aggregate.AggregatePart.GenericParameter.ID"]},{"name":"ID","description":"io.spine.server.entity.Entity.GenericParameter.ID","location":"server/io.spine.server.entity/-entity/-generic-parameter/-i-d/index.html","searchKeys":["ID","ID","io.spine.server.entity.Entity.GenericParameter.ID"]},{"name":"INSTANCE","description":"io.spine.system.server.NoOpSystemClient.INSTANCE","location":"server/io.spine.system.server/-no-op-system-client/-i-n-s-t-a-n-c-e/index.html","searchKeys":["INSTANCE","INSTANCE","io.spine.system.server.NoOpSystemClient.INSTANCE"]},{"name":"INSTANCE","description":"io.spine.system.server.NoOpSystemReadSide.INSTANCE","location":"server/io.spine.system.server/-no-op-system-read-side/-i-n-s-t-a-n-c-e/index.html","searchKeys":["INSTANCE","INSTANCE","io.spine.system.server.NoOpSystemReadSide.INSTANCE"]},{"name":"INSTANCE","description":"io.spine.system.server.NoOpSystemWriteSide.INSTANCE","location":"server/io.spine.system.server/-no-op-system-write-side/-i-n-s-t-a-n-c-e/index.html","searchKeys":["INSTANCE","INSTANCE","io.spine.system.server.NoOpSystemWriteSide.INSTANCE"]},{"name":"IllegalArgumentException unsupportedType(Class<? extends Object> aClass)","description":"io.spine.server.entity.storage.AbstractColumnMapping.unsupportedType","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/unsupported-type.html","searchKeys":["unsupportedType","IllegalArgumentException unsupportedType(Class<? extends Object> aClass)","io.spine.server.entity.storage.AbstractColumnMapping.unsupportedType"]},{"name":"ImmutableCollection<Event> filter(Collection<Event> events)","description":"io.spine.server.entity.EventFieldFilter.filter","location":"server/io.spine.server.entity/-event-field-filter/filter.html","searchKeys":["filter","ImmutableCollection<Event> filter(Collection<Event> events)","io.spine.server.entity.EventFieldFilter.filter"]},{"name":"ImmutableCollection<Event> filter(Collection<Event> events)","description":"io.spine.server.entity.EventFilter.filter","location":"server/io.spine.server.entity/-event-filter/filter.html","searchKeys":["filter","ImmutableCollection<Event> filter(Collection<Event> events)","io.spine.server.entity.EventFilter.filter"]},{"name":"ImmutableCollection<H> methods()","description":"io.spine.server.model.HandlerMap.methods","location":"server/io.spine.server.model/-handler-map/methods.html","searchKeys":["methods","ImmutableCollection<H> methods()","io.spine.server.model.HandlerMap.methods"]},{"name":"ImmutableList<BoundedContext> contexts()","description":"io.spine.server.SubscriptionService.Builder.contexts","location":"server/io.spine.server/-subscription-service/-builder/contexts.html","searchKeys":["contexts","ImmutableList<BoundedContext> contexts()","io.spine.server.SubscriptionService.Builder.contexts"]},{"name":"ImmutableList<Column> columnList()","description":"io.spine.server.entity.storage.Columns.columnList","location":"server/io.spine.server.entity.storage/-columns/column-list.html","searchKeys":["columnList","ImmutableList<Column> columnList()","io.spine.server.entity.storage.Columns.columnList"]},{"name":"ImmutableList<CommandDispatcher> commandDispatchers()","description":"io.spine.server.BoundedContextBuilder.commandDispatchers","location":"server/io.spine.server/-bounded-context-builder/command-dispatchers.html","searchKeys":["commandDispatchers","ImmutableList<CommandDispatcher> commandDispatchers()","io.spine.server.BoundedContextBuilder.commandDispatchers"]},{"name":"ImmutableList<EventDispatcher> eventDispatchers()","description":"io.spine.server.BoundedContextBuilder.eventDispatchers","location":"server/io.spine.server/-bounded-context-builder/event-dispatchers.html","searchKeys":["eventDispatchers","ImmutableList<EventDispatcher> eventDispatchers()","io.spine.server.BoundedContextBuilder.eventDispatchers"]},{"name":"ImmutableList<Repository<?, ?>> repositories()","description":"io.spine.server.BoundedContextBuilder.repositories","location":"server/io.spine.server/-bounded-context-builder/repositories.html","searchKeys":["repositories","ImmutableList<Repository<?, ?>> repositories()","io.spine.server.BoundedContextBuilder.repositories"]},{"name":"ImmutableMap<ColumnName, Column> lifecycleColumns()","description":"io.spine.server.entity.storage.Columns.lifecycleColumns","location":"server/io.spine.server.entity.storage/-columns/lifecycle-columns.html","searchKeys":["lifecycleColumns","ImmutableMap<ColumnName, Column> lifecycleColumns()","io.spine.server.entity.storage.Columns.lifecycleColumns"]},{"name":"ImmutableMap<ColumnName, InterfaceBasedColumn> interfaceBasedColumns()","description":"io.spine.server.entity.storage.Columns.interfaceBasedColumns","location":"server/io.spine.server.entity.storage/-columns/interface-based-columns.html","searchKeys":["interfaceBasedColumns","ImmutableMap<ColumnName, InterfaceBasedColumn> interfaceBasedColumns()","io.spine.server.entity.storage.Columns.interfaceBasedColumns"]},{"name":"ImmutableMultimap<Column, Filter> filters()","description":"io.spine.server.entity.storage.CompositeQueryParameter.filters","location":"server/io.spine.server.entity.storage/-composite-query-parameter/filters.html","searchKeys":["filters","ImmutableMultimap<Column, Filter> filters()","io.spine.server.entity.storage.CompositeQueryParameter.filters"]},{"name":"ImmutableSet<CatchUpId> route(EventEnvelope event)","description":"io.spine.server.delivery.CatchUpProcess.route","location":"server/io.spine.server.delivery/-catch-up-process/route.html","searchKeys":["route","ImmutableSet<CatchUpId> route(EventEnvelope event)","io.spine.server.delivery.CatchUpProcess.route"]},{"name":"ImmutableSet<ColumnName> columnNames()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.columnNames","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/column-names.html","searchKeys":["columnNames","ImmutableSet<ColumnName> columnNames()","io.spine.server.entity.storage.EntityRecordWithColumns.columnNames"]},{"name":"ImmutableSet<CommandClass> commands()","description":"io.spine.server.command.model.AbstractCommandHandlingClass.commands","location":"server/io.spine.server.command.model/-abstract-command-handling-class/commands.html","searchKeys":["commands","ImmutableSet<CommandClass> commands()","io.spine.server.command.model.AbstractCommandHandlingClass.commands"]},{"name":"ImmutableSet<CommandClass> commands()","description":"io.spine.server.entity.model.CommandHandlingEntityClass.commands","location":"server/io.spine.server.entity.model/-command-handling-entity-class/commands.html","searchKeys":["commands","ImmutableSet<CommandClass> commands()","io.spine.server.entity.model.CommandHandlingEntityClass.commands"]},{"name":"ImmutableSet<CommandClass> commands()","description":"io.spine.server.procman.model.ProcessManagerClass.commands","location":"server/io.spine.server.procman.model/-process-manager-class/commands.html","searchKeys":["commands","ImmutableSet<CommandClass> commands()","io.spine.server.procman.model.ProcessManagerClass.commands"]},{"name":"ImmutableSet<CommandClass> messageClasses()","description":"io.spine.server.command.AbstractCommandHandler.messageClasses","location":"server/io.spine.server.command/-abstract-command-handler/message-classes.html","searchKeys":["messageClasses","ImmutableSet<CommandClass> messageClasses()","io.spine.server.command.AbstractCommandHandler.messageClasses"]},{"name":"ImmutableSet<CommandClass> messageClasses()","description":"io.spine.server.command.AbstractCommander.messageClasses","location":"server/io.spine.server.command/-abstract-commander/message-classes.html","searchKeys":["messageClasses","ImmutableSet<CommandClass> messageClasses()","io.spine.server.command.AbstractCommander.messageClasses"]},{"name":"ImmutableSet<CommandClass> outgoingCommands()","description":"io.spine.server.command.model.CommanderClass.outgoingCommands","location":"server/io.spine.server.command.model/-commander-class/outgoing-commands.html","searchKeys":["outgoingCommands","ImmutableSet<CommandClass> outgoingCommands()","io.spine.server.command.model.CommanderClass.outgoingCommands"]},{"name":"ImmutableSet<CommandClass> outgoingCommands()","description":"io.spine.server.procman.model.ProcessManagerClass.outgoingCommands","location":"server/io.spine.server.procman.model/-process-manager-class/outgoing-commands.html","searchKeys":["outgoingCommands","ImmutableSet<CommandClass> outgoingCommands()","io.spine.server.procman.model.ProcessManagerClass.outgoingCommands"]},{"name":"ImmutableSet<EventClass> commandOutput()","description":"io.spine.server.entity.model.CommandHandlingEntityClass.commandOutput","location":"server/io.spine.server.entity.model/-command-handling-entity-class/command-output.html","searchKeys":["commandOutput","ImmutableSet<EventClass> commandOutput()","io.spine.server.entity.model.CommandHandlingEntityClass.commandOutput"]},{"name":"ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.aggregate.EventImportDispatcher.domesticEventClasses","location":"server/io.spine.server.aggregate/-event-import-dispatcher/domestic-event-classes.html","searchKeys":["domesticEventClasses","ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.aggregate.EventImportDispatcher.domesticEventClasses"]},{"name":"ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.event.AbstractEventReactor.domesticEventClasses","location":"server/io.spine.server.event/-abstract-event-reactor/domestic-event-classes.html","searchKeys":["domesticEventClasses","ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.event.AbstractEventReactor.domesticEventClasses"]},{"name":"ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.event.AbstractEventSubscriber.domesticEventClasses","location":"server/io.spine.server.event/-abstract-event-subscriber/domestic-event-classes.html","searchKeys":["domesticEventClasses","ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.event.AbstractEventSubscriber.domesticEventClasses"]},{"name":"ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.event.DelegatingEventDispatcher.domesticEventClasses","location":"server/io.spine.server.event/-delegating-event-dispatcher/domestic-event-classes.html","searchKeys":["domesticEventClasses","ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.event.DelegatingEventDispatcher.domesticEventClasses"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.aggregate.AggregateRepository.domesticEvents","location":"server/io.spine.server.aggregate/-aggregate-repository/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.aggregate.AggregateRepository.domesticEvents"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.command.AbstractCommander.domesticEvents","location":"server/io.spine.server.command/-abstract-commander/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.command.AbstractCommander.domesticEvents"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.command.model.CommanderClass.domesticEvents","location":"server/io.spine.server.command.model/-commander-class/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.command.model.CommanderClass.domesticEvents"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.event.model.EventReactorClass.domesticEvents","location":"server/io.spine.server.event.model/-event-reactor-class/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.event.model.EventReactorClass.domesticEvents"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.event.model.EventReceivingClassDelegate.domesticEvents","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.event.model.EventReceivingClassDelegate.domesticEvents"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.event.model.EventSubscriberClass.domesticEvents","location":"server/io.spine.server.event.model/-event-subscriber-class/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.event.model.EventSubscriberClass.domesticEvents"]},{"name":"ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.procman.model.ProcessManagerClass.domesticEvents","location":"server/io.spine.server.procman.model/-process-manager-class/domestic-events.html","searchKeys":["domesticEvents","ImmutableSet<EventClass> domesticEvents()","io.spine.server.procman.model.ProcessManagerClass.domesticEvents"]},{"name":"ImmutableSet<EventClass> eventClasses()","description":"io.spine.server.event.EventDispatcher.eventClasses","location":"server/io.spine.server.event/-event-dispatcher/event-classes.html","searchKeys":["eventClasses","ImmutableSet<EventClass> eventClasses()","io.spine.server.event.EventDispatcher.eventClasses"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.aggregate.AggregateRepository.events","location":"server/io.spine.server.aggregate/-aggregate-repository/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.aggregate.AggregateRepository.events"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.command.AbstractCommander.events","location":"server/io.spine.server.command/-abstract-commander/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.command.AbstractCommander.events"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.command.model.CommanderClass.events","location":"server/io.spine.server.command.model/-commander-class/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.command.model.CommanderClass.events"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.event.model.EventReactorClass.events","location":"server/io.spine.server.event.model/-event-reactor-class/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.event.model.EventReactorClass.events"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.event.model.EventReceivingClassDelegate.events","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.event.model.EventReceivingClassDelegate.events"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.event.model.EventSubscriberClass.events","location":"server/io.spine.server.event.model/-event-subscriber-class/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.event.model.EventSubscriberClass.events"]},{"name":"ImmutableSet<EventClass> events()","description":"io.spine.server.procman.model.ProcessManagerClass.events","location":"server/io.spine.server.procman.model/-process-manager-class/events.html","searchKeys":["events","ImmutableSet<EventClass> events()","io.spine.server.procman.model.ProcessManagerClass.events"]},{"name":"ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.aggregate.EventImportDispatcher.externalEventClasses","location":"server/io.spine.server.aggregate/-event-import-dispatcher/external-event-classes.html","searchKeys":["externalEventClasses","ImmutableSet<EventClass> externalEventClasses()","io.spine.server.aggregate.EventImportDispatcher.externalEventClasses"]},{"name":"ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.event.AbstractEventReactor.externalEventClasses","location":"server/io.spine.server.event/-abstract-event-reactor/external-event-classes.html","searchKeys":["externalEventClasses","ImmutableSet<EventClass> externalEventClasses()","io.spine.server.event.AbstractEventReactor.externalEventClasses"]},{"name":"ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.event.AbstractEventSubscriber.externalEventClasses","location":"server/io.spine.server.event/-abstract-event-subscriber/external-event-classes.html","searchKeys":["externalEventClasses","ImmutableSet<EventClass> externalEventClasses()","io.spine.server.event.AbstractEventSubscriber.externalEventClasses"]},{"name":"ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.event.DelegatingEventDispatcher.externalEventClasses","location":"server/io.spine.server.event/-delegating-event-dispatcher/external-event-classes.html","searchKeys":["externalEventClasses","ImmutableSet<EventClass> externalEventClasses()","io.spine.server.event.DelegatingEventDispatcher.externalEventClasses"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.aggregate.AggregateRepository.externalEvents","location":"server/io.spine.server.aggregate/-aggregate-repository/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.aggregate.AggregateRepository.externalEvents"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.command.AbstractCommander.externalEvents","location":"server/io.spine.server.command/-abstract-commander/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.command.AbstractCommander.externalEvents"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.command.model.CommanderClass.externalEvents","location":"server/io.spine.server.command.model/-commander-class/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.command.model.CommanderClass.externalEvents"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.event.model.EventReactorClass.externalEvents","location":"server/io.spine.server.event.model/-event-reactor-class/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.event.model.EventReactorClass.externalEvents"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.event.model.EventReceivingClassDelegate.externalEvents","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.event.model.EventReceivingClassDelegate.externalEvents"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.event.model.EventSubscriberClass.externalEvents","location":"server/io.spine.server.event.model/-event-subscriber-class/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.event.model.EventSubscriberClass.externalEvents"]},{"name":"ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.procman.model.ProcessManagerClass.externalEvents","location":"server/io.spine.server.procman.model/-process-manager-class/external-events.html","searchKeys":["externalEvents","ImmutableSet<EventClass> externalEvents()","io.spine.server.procman.model.ProcessManagerClass.externalEvents"]},{"name":"ImmutableSet<EventClass> importableEvents()","description":"io.spine.server.aggregate.AggregateRepository.importableEvents","location":"server/io.spine.server.aggregate/-aggregate-repository/importable-events.html","searchKeys":["importableEvents","ImmutableSet<EventClass> importableEvents()","io.spine.server.aggregate.AggregateRepository.importableEvents"]},{"name":"ImmutableSet<EventClass> messageClasses()","description":"io.spine.server.aggregate.EventImportDispatcher.messageClasses","location":"server/io.spine.server.aggregate/-event-import-dispatcher/message-classes.html","searchKeys":["messageClasses","ImmutableSet<EventClass> messageClasses()","io.spine.server.aggregate.EventImportDispatcher.messageClasses"]},{"name":"ImmutableSet<EventClass> messageClasses()","description":"io.spine.server.event.AbstractEventReactor.messageClasses","location":"server/io.spine.server.event/-abstract-event-reactor/message-classes.html","searchKeys":["messageClasses","ImmutableSet<EventClass> messageClasses()","io.spine.server.event.AbstractEventReactor.messageClasses"]},{"name":"ImmutableSet<EventClass> messageClasses()","description":"io.spine.server.event.AbstractEventSubscriber.messageClasses","location":"server/io.spine.server.event/-abstract-event-subscriber/message-classes.html","searchKeys":["messageClasses","ImmutableSet<EventClass> messageClasses()","io.spine.server.event.AbstractEventSubscriber.messageClasses"]},{"name":"ImmutableSet<EventClass> messageClasses()","description":"io.spine.server.event.DelegatingEventDispatcher.messageClasses","location":"server/io.spine.server.event/-delegating-event-dispatcher/message-classes.html","searchKeys":["messageClasses","ImmutableSet<EventClass> messageClasses()","io.spine.server.event.DelegatingEventDispatcher.messageClasses"]},{"name":"ImmutableSet<EventClass> outgoingEvents()","description":"io.spine.server.aggregate.AggregateRepository.outgoingEvents","location":"server/io.spine.server.aggregate/-aggregate-repository/outgoing-events.html","searchKeys":["outgoingEvents","ImmutableSet<EventClass> outgoingEvents()","io.spine.server.aggregate.AggregateRepository.outgoingEvents"]},{"name":"ImmutableSet<EventClass> outgoingEvents()","description":"io.spine.server.aggregate.model.AggregateClass.outgoingEvents","location":"server/io.spine.server.aggregate.model/-aggregate-class/outgoing-events.html","searchKeys":["outgoingEvents","ImmutableSet<EventClass> outgoingEvents()","io.spine.server.aggregate.model.AggregateClass.outgoingEvents"]},{"name":"ImmutableSet<EventClass> outgoingEvents()","description":"io.spine.server.procman.ProcessManagerRepository.outgoingEvents","location":"server/io.spine.server.procman/-process-manager-repository/outgoing-events.html","searchKeys":["outgoingEvents","ImmutableSet<EventClass> outgoingEvents()","io.spine.server.procman.ProcessManagerRepository.outgoingEvents"]},{"name":"ImmutableSet<EventClass> outgoingEvents()","description":"io.spine.server.procman.model.ProcessManagerClass.outgoingEvents","location":"server/io.spine.server.procman.model/-process-manager-class/outgoing-events.html","searchKeys":["outgoingEvents","ImmutableSet<EventClass> outgoingEvents()","io.spine.server.procman.model.ProcessManagerClass.outgoingEvents"]},{"name":"ImmutableSet<EventClass> producedEvents()","description":"io.spine.server.aggregate.Aggregate.producedEvents","location":"server/io.spine.server.aggregate/-aggregate/produced-events.html","searchKeys":["producedEvents","ImmutableSet<EventClass> producedEvents()","io.spine.server.aggregate.Aggregate.producedEvents"]},{"name":"ImmutableSet<EventClass> producedEvents()","description":"io.spine.server.command.AbstractCommandHandler.producedEvents","location":"server/io.spine.server.command/-abstract-command-handler/produced-events.html","searchKeys":["producedEvents","ImmutableSet<EventClass> producedEvents()","io.spine.server.command.AbstractCommandHandler.producedEvents"]},{"name":"ImmutableSet<EventClass> producedEvents()","description":"io.spine.server.command.AbstractCommander.producedEvents","location":"server/io.spine.server.command/-abstract-commander/produced-events.html","searchKeys":["producedEvents","ImmutableSet<EventClass> producedEvents()","io.spine.server.command.AbstractCommander.producedEvents"]},{"name":"ImmutableSet<EventClass> producedEvents()","description":"io.spine.server.event.AbstractEventReactor.producedEvents","location":"server/io.spine.server.event/-abstract-event-reactor/produced-events.html","searchKeys":["producedEvents","ImmutableSet<EventClass> producedEvents()","io.spine.server.event.AbstractEventReactor.producedEvents"]},{"name":"ImmutableSet<EventClass> producedEvents()","description":"io.spine.server.procman.ProcessManager.producedEvents","location":"server/io.spine.server.procman/-process-manager/produced-events.html","searchKeys":["producedEvents","ImmutableSet<EventClass> producedEvents()","io.spine.server.procman.ProcessManager.producedEvents"]},{"name":"ImmutableSet<EventClass> reactionOutput()","description":"io.spine.server.aggregate.model.AggregateClass.reactionOutput","location":"server/io.spine.server.aggregate.model/-aggregate-class/reaction-output.html","searchKeys":["reactionOutput","ImmutableSet<EventClass> reactionOutput()","io.spine.server.aggregate.model.AggregateClass.reactionOutput"]},{"name":"ImmutableSet<EventClass> reactionOutput()","description":"io.spine.server.event.model.EventReactorClass.reactionOutput","location":"server/io.spine.server.event.model/-event-reactor-class/reaction-output.html","searchKeys":["reactionOutput","ImmutableSet<EventClass> reactionOutput()","io.spine.server.event.model.EventReactorClass.reactionOutput"]},{"name":"ImmutableSet<EventClass> reactionOutput()","description":"io.spine.server.event.model.ReactorClassDelegate.reactionOutput","location":"server/io.spine.server.event.model/-reactor-class-delegate/reaction-output.html","searchKeys":["reactionOutput","ImmutableSet<EventClass> reactionOutput()","io.spine.server.event.model.ReactorClassDelegate.reactionOutput"]},{"name":"ImmutableSet<EventClass> reactionOutput()","description":"io.spine.server.procman.model.ProcessManagerClass.reactionOutput","location":"server/io.spine.server.procman.model/-process-manager-class/reaction-output.html","searchKeys":["reactionOutput","ImmutableSet<EventClass> reactionOutput()","io.spine.server.procman.model.ProcessManagerClass.reactionOutput"]},{"name":"ImmutableSet<EventClass> rejections()","description":"io.spine.server.command.model.AbstractCommandHandlingClass.rejections","location":"server/io.spine.server.command.model/-abstract-command-handling-class/rejections.html","searchKeys":["rejections","ImmutableSet<EventClass> rejections()","io.spine.server.command.model.AbstractCommandHandlingClass.rejections"]},{"name":"ImmutableSet<EventClass> rejections()","description":"io.spine.server.command.model.CommandAcceptingMethod.rejections","location":"server/io.spine.server.command.model/-command-accepting-method/rejections.html","searchKeys":["rejections","ImmutableSet<EventClass> rejections()","io.spine.server.command.model.CommandAcceptingMethod.rejections"]},{"name":"ImmutableSet<EventClass> rejections()","description":"io.spine.server.entity.model.CommandHandlingEntityClass.rejections","location":"server/io.spine.server.entity.model/-command-handling-entity-class/rejections.html","searchKeys":["rejections","ImmutableSet<EventClass> rejections()","io.spine.server.entity.model.CommandHandlingEntityClass.rejections"]},{"name":"ImmutableSet<H> handlersOf(M messageClass)","description":"io.spine.server.model.HandlerMap.handlersOf","location":"server/io.spine.server.model/-handler-map/handlers-of.html","searchKeys":["handlersOf","ImmutableSet<H> handlersOf(M messageClass)","io.spine.server.model.HandlerMap.handlersOf"]},{"name":"ImmutableSet<H> handlersOf(M messageClass, MessageClass<?> originClass)","description":"io.spine.server.model.HandlerMap.handlersOf","location":"server/io.spine.server.model/-handler-map/handlers-of.html","searchKeys":["handlersOf","ImmutableSet<H> handlersOf(M messageClass, MessageClass<?> originClass)","io.spine.server.model.HandlerMap.handlersOf"]},{"name":"ImmutableSet<M> handlersOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.EventReceivingClassDelegate.handlersOf","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/handlers-of.html","searchKeys":["handlersOf","ImmutableSet<M> handlersOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.EventReceivingClassDelegate.handlersOf"]},{"name":"ImmutableSet<M> messageClasses()","description":"io.spine.server.model.HandlerMap.messageClasses","location":"server/io.spine.server.model/-handler-map/message-classes.html","searchKeys":["messageClasses","ImmutableSet<M> messageClasses()","io.spine.server.model.HandlerMap.messageClasses"]},{"name":"ImmutableSet<M> messageClasses(Predicate<? extends Object> predicate)","description":"io.spine.server.model.HandlerMap.messageClasses","location":"server/io.spine.server.model/-handler-map/message-classes.html","searchKeys":["messageClasses","ImmutableSet<M> messageClasses(Predicate<? extends Object> predicate)","io.spine.server.model.HandlerMap.messageClasses"]},{"name":"ImmutableSet<Object> requestedIds()","description":"io.spine.server.delivery.CatchUpAlreadyStartedException.requestedIds","location":"server/io.spine.server.delivery/-catch-up-already-started-exception/requested-ids.html","searchKeys":["requestedIds","ImmutableSet<Object> requestedIds()","io.spine.server.delivery.CatchUpAlreadyStartedException.requestedIds"]},{"name":"ImmutableSet<P> producedTypes()","description":"io.spine.server.event.model.EventReceivingClassDelegate.producedTypes","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/produced-types.html","searchKeys":["producedTypes","ImmutableSet<P> producedTypes()","io.spine.server.event.model.EventReceivingClassDelegate.producedTypes"]},{"name":"ImmutableSet<R> commandOutput()","description":"io.spine.server.command.model.AbstractCommandHandlingClass.commandOutput","location":"server/io.spine.server.command.model/-abstract-command-handling-class/command-output.html","searchKeys":["commandOutput","ImmutableSet<R> commandOutput()","io.spine.server.command.model.AbstractCommandHandlingClass.commandOutput"]},{"name":"ImmutableSet<R> producedTypes()","description":"io.spine.server.model.HandlerMap.producedTypes","location":"server/io.spine.server.model/-handler-map/produced-types.html","searchKeys":["producedTypes","ImmutableSet<R> producedTypes()","io.spine.server.model.HandlerMap.producedTypes"]},{"name":"ImmutableSet<ServerServiceDefinition> services()","description":"io.spine.server.GrpcContainer.Builder.services","location":"server/io.spine.server/-grpc-container/-builder/services.html","searchKeys":["services","ImmutableSet<ServerServiceDefinition> services()","io.spine.server.GrpcContainer.Builder.services"]},{"name":"ImmutableSet<StateClass> domesticStates()","description":"io.spine.server.event.model.EventReceivingClassDelegate.domesticStates","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/domestic-states.html","searchKeys":["domesticStates","ImmutableSet<StateClass> domesticStates()","io.spine.server.event.model.EventReceivingClassDelegate.domesticStates"]},{"name":"ImmutableSet<StateClass> externalStates()","description":"io.spine.server.event.model.EventReceivingClassDelegate.externalStates","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/external-states.html","searchKeys":["externalStates","ImmutableSet<StateClass> externalStates()","io.spine.server.event.model.EventReceivingClassDelegate.externalStates"]},{"name":"ImmutableSet<String> identity()","description":"io.spine.server.event.EventDispatcherDelegate.identity","location":"server/io.spine.server.event/-event-dispatcher-delegate/identity.html","searchKeys":["identity","ImmutableSet<String> identity()","io.spine.server.event.EventDispatcherDelegate.identity"]},{"name":"ImmutableSet<SubscriberMethod> subscribersOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.EventSubscriberClass.subscribersOf","location":"server/io.spine.server.event.model/-event-subscriber-class/subscribers-of.html","searchKeys":["subscribersOf","ImmutableSet<SubscriberMethod> subscribersOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.EventSubscriberClass.subscribersOf"]},{"name":"ImmutableSet<TypeUrl> exposedAggregateTypes()","description":"io.spine.server.stand.Stand.exposedAggregateTypes","location":"server/io.spine.server.stand/-stand/exposed-aggregate-types.html","searchKeys":["exposedAggregateTypes","ImmutableSet<TypeUrl> exposedAggregateTypes()","io.spine.server.stand.Stand.exposedAggregateTypes"]},{"name":"ImmutableSet<TypeUrl> exposedEventTypes()","description":"io.spine.server.stand.Stand.exposedEventTypes","location":"server/io.spine.server.stand/-stand/exposed-event-types.html","searchKeys":["exposedEventTypes","ImmutableSet<TypeUrl> exposedEventTypes()","io.spine.server.stand.Stand.exposedEventTypes"]},{"name":"ImmutableSet<TypeUrl> exposedTypes()","description":"io.spine.server.stand.Stand.exposedTypes","location":"server/io.spine.server.stand/-stand/exposed-types.html","searchKeys":["exposedTypes","ImmutableSet<TypeUrl> exposedTypes()","io.spine.server.stand.Stand.exposedTypes"]},{"name":"ImportBus.Builder self()","description":"io.spine.server.aggregate.ImportBus.Builder.self","location":"server/io.spine.server.aggregate/-import-bus/-builder/self.html","searchKeys":["self","ImportBus.Builder self()","io.spine.server.aggregate.ImportBus.Builder.self"]},{"name":"ImportBus.Registry newRegistry()","description":"io.spine.server.aggregate.ImportBus.Builder.newRegistry","location":"server/io.spine.server.aggregate/-import-bus/-builder/new-registry.html","searchKeys":["newRegistry","ImportBus.Registry newRegistry()","io.spine.server.aggregate.ImportBus.Builder.newRegistry"]},{"name":"ImportBus.Registry registry()","description":"io.spine.server.aggregate.ImportBus.registry","location":"server/io.spine.server.aggregate/-import-bus/registry.html","searchKeys":["registry","ImportBus.Registry registry()","io.spine.server.aggregate.ImportBus.registry"]},{"name":"ImportBus build()","description":"io.spine.server.aggregate.ImportBus.Builder.build","location":"server/io.spine.server.aggregate/-import-bus/-builder/build.html","searchKeys":["build","ImportBus build()","io.spine.server.aggregate.ImportBus.Builder.build"]},{"name":"ImportBus importBus()","description":"io.spine.server.BoundedContext.importBus","location":"server/io.spine.server/-bounded-context/import-bus.html","searchKeys":["importBus","ImportBus importBus()","io.spine.server.BoundedContext.importBus"]},{"name":"Inbox.Builder<I> addCommandEndpoint(InboxLabel label, LazyEndpoint<I, CommandEnvelope> lazyEndpoint)","description":"io.spine.server.delivery.Inbox.Builder.addCommandEndpoint","location":"server/io.spine.server.delivery/-inbox/-builder/add-command-endpoint.html","searchKeys":["addCommandEndpoint","Inbox.Builder<I> addCommandEndpoint(InboxLabel label, LazyEndpoint<I, CommandEnvelope> lazyEndpoint)","io.spine.server.delivery.Inbox.Builder.addCommandEndpoint"]},{"name":"Inbox.Builder<I> addEventEndpoint(InboxLabel label, LazyEndpoint<I, EventEnvelope> lazyEndpoint)","description":"io.spine.server.delivery.Inbox.Builder.addEventEndpoint","location":"server/io.spine.server.delivery/-inbox/-builder/add-event-endpoint.html","searchKeys":["addEventEndpoint","Inbox.Builder<I> addEventEndpoint(InboxLabel label, LazyEndpoint<I, EventEnvelope> lazyEndpoint)","io.spine.server.delivery.Inbox.Builder.addEventEndpoint"]},{"name":"Inbox.Builder<I> newInbox<I>(TypeUrl entityType)","description":"io.spine.server.delivery.Delivery.newInbox","location":"server/io.spine.server.delivery/-delivery/new-inbox.html","searchKeys":["newInbox","Inbox.Builder<I> newInbox<I>(TypeUrl entityType)","io.spine.server.delivery.Delivery.newInbox"]},{"name":"Inbox.Builder<I> withBatchListener(BatchDeliveryListener<I> dispatcher)","description":"io.spine.server.delivery.Inbox.Builder.withBatchListener","location":"server/io.spine.server.delivery/-inbox/-builder/with-batch-listener.html","searchKeys":["withBatchListener","Inbox.Builder<I> withBatchListener(BatchDeliveryListener<I> dispatcher)","io.spine.server.delivery.Inbox.Builder.withBatchListener"]},{"name":"Inbox.CommandDestinations send(CommandEnvelope command)","description":"io.spine.server.delivery.Inbox.send","location":"server/io.spine.server.delivery/-inbox/send.html","searchKeys":["send","Inbox.CommandDestinations send(CommandEnvelope command)","io.spine.server.delivery.Inbox.send"]},{"name":"Inbox.EventDestinations send(EventEnvelope event)","description":"io.spine.server.delivery.Inbox.send","location":"server/io.spine.server.delivery/-inbox/send.html","searchKeys":["send","Inbox.EventDestinations send(EventEnvelope event)","io.spine.server.delivery.Inbox.send"]},{"name":"Inbox<I> build()","description":"io.spine.server.delivery.Inbox.Builder.build","location":"server/io.spine.server.delivery/-inbox/-builder/build.html","searchKeys":["build","Inbox<I> build()","io.spine.server.delivery.Inbox.Builder.build"]},{"name":"InboxMessageId recordId()","description":"io.spine.server.delivery.InboxReadRequest.recordId","location":"server/io.spine.server.delivery/-inbox-read-request/record-id.html","searchKeys":["recordId","InboxMessageId recordId()","io.spine.server.delivery.InboxReadRequest.recordId"]},{"name":"InboxStorage createInboxStorage(boolean multitenant)","description":"io.spine.server.storage.memory.InMemoryStorageFactory.createInboxStorage","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/create-inbox-storage.html","searchKeys":["createInboxStorage","InboxStorage createInboxStorage(boolean multitenant)","io.spine.server.storage.memory.InMemoryStorageFactory.createInboxStorage"]},{"name":"InboxStorage createInboxStorage(boolean multitenant)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.createInboxStorage","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/create-inbox-storage.html","searchKeys":["createInboxStorage","InboxStorage createInboxStorage(boolean multitenant)","io.spine.server.storage.system.SystemAwareStorageFactory.createInboxStorage"]},{"name":"IntegrationBroker broker()","description":"io.spine.server.BoundedContext.InternalAccess.broker","location":"server/io.spine.server/-bounded-context/-internal-access/broker.html","searchKeys":["broker","IntegrationBroker broker()","io.spine.server.BoundedContext.InternalAccess.broker"]},{"name":"Iterable<BusFilter<CommandEnvelope>> setupFilters(Iterable<BusFilter<CommandEnvelope>> filters)","description":"io.spine.server.commandbus.CommandBus.setupFilters","location":"server/io.spine.server.commandbus/-command-bus/setup-filters.html","searchKeys":["setupFilters","Iterable<BusFilter<CommandEnvelope>> setupFilters(Iterable<BusFilter<CommandEnvelope>> filters)","io.spine.server.commandbus.CommandBus.setupFilters"]},{"name":"Iterable<BusFilter<E>> setupFilters(Iterable<BusFilter<E>> filters)","description":"io.spine.server.bus.Bus.setupFilters","location":"server/io.spine.server.bus/-bus/setup-filters.html","searchKeys":["setupFilters","Iterable<BusFilter<E>> setupFilters(Iterable<BusFilter<E>> filters)","io.spine.server.bus.Bus.setupFilters"]},{"name":"Iterable<CatchUp> readAll()","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.readAll","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/read-all.html","searchKeys":["readAll","Iterable<CatchUp> readAll()","io.spine.server.storage.memory.InMemoryCatchUpStorage.readAll"]},{"name":"Iterable<CatchUp> readByType(TypeUrl projectionType)","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.readByType","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/read-by-type.html","searchKeys":["readByType","Iterable<CatchUp> readByType(TypeUrl projectionType)","io.spine.server.storage.memory.InMemoryCatchUpStorage.readByType"]},{"name":"Iterable<Event> filter(Collection<Event> events)","description":"io.spine.server.entity.EventProducingRepository.filter","location":"server/io.spine.server.entity/-event-producing-repository/filter.html","searchKeys":["filter","Iterable<Event> filter(Collection<Event> events)","io.spine.server.entity.EventProducingRepository.filter"]},{"name":"Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","description":"io.spine.server.delivery.AbstractWorkRegistry.releaseExpiredSessions","location":"server/io.spine.server.delivery/-abstract-work-registry/release-expired-sessions.html","searchKeys":["releaseExpiredSessions","Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","io.spine.server.delivery.AbstractWorkRegistry.releaseExpiredSessions"]},{"name":"Iterable<StreamObserver<ExternalMessage>> observers()","description":"io.spine.server.transport.Subscriber.observers","location":"server/io.spine.server.transport/-subscriber/observers.html","searchKeys":["observers","Iterable<StreamObserver<ExternalMessage>> observers()","io.spine.server.transport.Subscriber.observers"]},{"name":"Iterator<CatchUpId> index()","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.index","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/--index--.html","searchKeys":["index","Iterator<CatchUpId> index()","io.spine.server.storage.memory.InMemoryCatchUpStorage.index"]},{"name":"Iterator<CompositeQueryParameter> iterator()","description":"io.spine.server.entity.storage.QueryParameters.iterator","location":"server/io.spine.server.entity.storage/-query-parameters/iterator.html","searchKeys":["iterator","Iterator<CompositeQueryParameter> iterator()","io.spine.server.entity.storage.QueryParameters.iterator"]},{"name":"Iterator<E> find(TargetFilters filters, ResponseFormat format)","description":"io.spine.server.entity.RecordBasedRepository.find","location":"server/io.spine.server.entity/-record-based-repository/find.html","searchKeys":["find","Iterator<E> find(TargetFilters filters, ResponseFormat format)","io.spine.server.entity.RecordBasedRepository.find"]},{"name":"Iterator<E> iterator(Predicate<E> filter)","description":"io.spine.server.entity.RecordBasedRepository.iterator","location":"server/io.spine.server.entity/-record-based-repository/iterator.html","searchKeys":["iterator","Iterator<E> iterator(Predicate<E> filter)","io.spine.server.entity.RecordBasedRepository.iterator"]},{"name":"Iterator<E> iterator(Predicate<E> filter)","description":"io.spine.server.entity.Repository.iterator","location":"server/io.spine.server.entity/-repository/iterator.html","searchKeys":["iterator","Iterator<E> iterator(Predicate<E> filter)","io.spine.server.entity.Repository.iterator"]},{"name":"Iterator<E> loadAll(Iterable<I> ids, FieldMask fieldMask)","description":"io.spine.server.entity.RecordBasedRepository.loadAll","location":"server/io.spine.server.entity/-record-based-repository/load-all.html","searchKeys":["loadAll","Iterator<E> loadAll(Iterable<I> ids, FieldMask fieldMask)","io.spine.server.entity.RecordBasedRepository.loadAll"]},{"name":"Iterator<E> loadAll(ResponseFormat format)","description":"io.spine.server.entity.RecordBasedRepository.loadAll","location":"server/io.spine.server.entity/-record-based-repository/load-all.html","searchKeys":["loadAll","Iterator<E> loadAll(ResponseFormat format)","io.spine.server.entity.RecordBasedRepository.loadAll"]},{"name":"Iterator<EntityRecord> findRecords(TargetFilters filters, ResponseFormat format)","description":"io.spine.server.entity.RecordBasedRepository.findRecords","location":"server/io.spine.server.entity/-record-based-repository/find-records.html","searchKeys":["findRecords","Iterator<EntityRecord> findRecords(TargetFilters filters, ResponseFormat format)","io.spine.server.entity.RecordBasedRepository.findRecords"]},{"name":"Iterator<EntityRecord> loadAllRecords(ResponseFormat format)","description":"io.spine.server.entity.RecordBasedRepository.loadAllRecords","location":"server/io.spine.server.entity/-record-based-repository/load-all-records.html","searchKeys":["loadAllRecords","Iterator<EntityRecord> loadAllRecords(ResponseFormat format)","io.spine.server.entity.RecordBasedRepository.loadAllRecords"]},{"name":"Iterator<EntityRecord> readAll(EntityQuery<I> query)","description":"io.spine.server.storage.RecordStorage.readAll","location":"server/io.spine.server.storage/-record-storage/read-all.html","searchKeys":["readAll","Iterator<EntityRecord> readAll(EntityQuery<I> query)","io.spine.server.storage.RecordStorage.readAll"]},{"name":"Iterator<EntityRecord> readAll(EntityQuery<I> query, ResponseFormat format)","description":"io.spine.server.storage.RecordStorage.readAll","location":"server/io.spine.server.storage/-record-storage/read-all.html","searchKeys":["readAll","Iterator<EntityRecord> readAll(EntityQuery<I> query, ResponseFormat format)","io.spine.server.storage.RecordStorage.readAll"]},{"name":"Iterator<EntityRecord> readAll(ResponseFormat format)","description":"io.spine.server.storage.RecordStorage.readAll","location":"server/io.spine.server.storage/-record-storage/read-all.html","searchKeys":["readAll","Iterator<EntityRecord> readAll(ResponseFormat format)","io.spine.server.storage.RecordStorage.readAll"]},{"name":"Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","description":"io.spine.server.projection.ProjectionStorage.readAllRecords","location":"server/io.spine.server.projection/-projection-storage/read-all-records.html","searchKeys":["readAllRecords","Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","io.spine.server.projection.ProjectionStorage.readAllRecords"]},{"name":"Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.readAllRecords","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/read-all-records.html","searchKeys":["readAllRecords","Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","io.spine.server.storage.memory.InMemoryRecordStorage.readAllRecords"]},{"name":"Iterator<EntityRecord> readAllRecords(ResponseFormat format)","description":"io.spine.server.storage.memory.InMemoryProjectionStorage.readAllRecords","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/read-all-records.html","searchKeys":["readAllRecords","Iterator<EntityRecord> readAllRecords(ResponseFormat format)","io.spine.server.storage.memory.InMemoryProjectionStorage.readAllRecords"]},{"name":"Iterator<EntityRecord> readAllRecords(ResponseFormat format)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.readAllRecords","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/read-all-records.html","searchKeys":["readAllRecords","Iterator<EntityRecord> readAllRecords(ResponseFormat format)","io.spine.server.storage.memory.InMemoryRecordStorage.readAllRecords"]},{"name":"Iterator<EntityRecord> readMultiple(Iterable<I> ids, FieldMask fieldMask)","description":"io.spine.server.storage.RecordStorage.readMultiple","location":"server/io.spine.server.storage/-record-storage/read-multiple.html","searchKeys":["readMultiple","Iterator<EntityRecord> readMultiple(Iterable<I> ids, FieldMask fieldMask)","io.spine.server.storage.RecordStorage.readMultiple"]},{"name":"Iterator<EntityRecord> readMultipleRecords(Iterable<I> givenIds, FieldMask fieldMask)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.readMultipleRecords","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/read-multiple-records.html","searchKeys":["readMultipleRecords","Iterator<EntityRecord> readMultipleRecords(Iterable<I> givenIds, FieldMask fieldMask)","io.spine.server.storage.memory.InMemoryRecordStorage.readMultipleRecords"]},{"name":"Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","description":"io.spine.server.storage.memory.InMemoryProjectionStorage.readMultipleRecords","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/read-multiple-records.html","searchKeys":["readMultipleRecords","Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","io.spine.server.storage.memory.InMemoryProjectionStorage.readMultipleRecords"]},{"name":"Iterator<EntityStateWithVersion> readDomainAggregate(Query query)","description":"io.spine.system.server.NoOpSystemReadSide.readDomainAggregate","location":"server/io.spine.system.server/-no-op-system-read-side/read-domain-aggregate.html","searchKeys":["readDomainAggregate","Iterator<EntityStateWithVersion> readDomainAggregate(Query query)","io.spine.system.server.NoOpSystemReadSide.readDomainAggregate"]},{"name":"Iterator<Event> iterator()","description":"io.spine.server.entity.RecentHistory.iterator","location":"server/io.spine.server.entity/-recent-history/iterator.html","searchKeys":["iterator","Iterator<Event> iterator()","io.spine.server.entity.RecentHistory.iterator"]},{"name":"Iterator<I> index()","description":"io.spine.server.aggregate.AggregateStorage.index","location":"server/io.spine.server.aggregate/-aggregate-storage/--index--.html","searchKeys":["index","Iterator<I> index()","io.spine.server.aggregate.AggregateStorage.index"]},{"name":"Iterator<I> index()","description":"io.spine.server.entity.Repository.index","location":"server/io.spine.server.entity/-repository/--index--.html","searchKeys":["index","Iterator<I> index()","io.spine.server.entity.Repository.index"]},{"name":"Iterator<I> index()","description":"io.spine.server.storage.memory.InMemoryProjectionStorage.index","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/--index--.html","searchKeys":["index","Iterator<I> index()","io.spine.server.storage.memory.InMemoryProjectionStorage.index"]},{"name":"Iterator<I> index()","description":"io.spine.server.storage.memory.InMemoryRecordStorage.index","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/--index--.html","searchKeys":["index","Iterator<I> index()","io.spine.server.storage.memory.InMemoryRecordStorage.index"]},{"name":"Iterator<InboxMessageId> index()","description":"io.spine.server.storage.memory.InMemoryInboxStorage.index","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/--index--.html","searchKeys":["index","Iterator<InboxMessageId> index()","io.spine.server.storage.memory.InMemoryInboxStorage.index"]},{"name":"Iterator<ShardSessionRecord> allRecords()","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.allRecords","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/all-records.html","searchKeys":["allRecords","Iterator<ShardSessionRecord> allRecords()","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.allRecords"]},{"name":"I apply(CommandMessage message, CommandContext ignored)","description":"io.spine.server.route.DefaultCommandRoute.apply","location":"server/io.spine.server.route/-default-command-route/apply.html","searchKeys":["apply","I apply(CommandMessage message, CommandContext ignored)","io.spine.server.route.DefaultCommandRoute.apply"]},{"name":"I entityId()","description":"io.spine.server.entity.CommandDispatchingPhase.entityId","location":"server/io.spine.server.entity/-command-dispatching-phase/entity-id.html","searchKeys":["entityId","I entityId()","io.spine.server.entity.CommandDispatchingPhase.entityId"]},{"name":"I entityId()","description":"io.spine.server.entity.EventDispatchingPhase.entityId","location":"server/io.spine.server.entity/-event-dispatching-phase/entity-id.html","searchKeys":["entityId","I entityId()","io.spine.server.entity.EventDispatchingPhase.entityId"]},{"name":"I id()","description":"io.spine.server.aggregate.AggregateRoot.id","location":"server/io.spine.server.aggregate/-aggregate-root/id.html","searchKeys":["id","I id()","io.spine.server.aggregate.AggregateRoot.id"]},{"name":"I id()","description":"io.spine.server.entity.AbstractEntity.id","location":"server/io.spine.server.entity/-abstract-entity/id.html","searchKeys":["id","I id()","io.spine.server.entity.AbstractEntity.id"]},{"name":"I recordId()","description":"io.spine.server.aggregate.AggregateReadRequest.recordId","location":"server/io.spine.server.aggregate/-aggregate-read-request/record-id.html","searchKeys":["recordId","I recordId()","io.spine.server.aggregate.AggregateReadRequest.recordId"]},{"name":"I recordId()","description":"io.spine.server.storage.RecordReadRequest.recordId","location":"server/io.spine.server.storage/-record-read-request/record-id.html","searchKeys":["recordId","I recordId()","io.spine.server.storage.RecordReadRequest.recordId"]},{"name":"I value()","description":"io.spine.server.tenant.IdInTenant.value","location":"server/io.spine.server.tenant/-id-in-tenant/value.html","searchKeys":["value","I value()","io.spine.server.tenant.IdInTenant.value"]},{"name":"LifecycleFlags getLifecycleFlags()","description":"io.spine.server.entity.AbstractEntity.getLifecycleFlags","location":"server/io.spine.server.entity/-abstract-entity/get-lifecycle-flags.html","searchKeys":["getLifecycleFlags","LifecycleFlags getLifecycleFlags()","io.spine.server.entity.AbstractEntity.getLifecycleFlags"]},{"name":"LifecycleFlags getLifecycleFlags()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.getLifecycleFlags","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/get-lifecycle-flags.html","searchKeys":["getLifecycleFlags","LifecycleFlags getLifecycleFlags()","io.spine.server.entity.storage.EntityRecordWithColumns.getLifecycleFlags"]},{"name":"LifecycleFlags lifecycleFlags()","description":"io.spine.server.entity.WithLifecycle.lifecycleFlags","location":"server/io.spine.server.entity/-with-lifecycle/lifecycle-flags.html","searchKeys":["lifecycleFlags","LifecycleFlags lifecycleFlags()","io.spine.server.entity.WithLifecycle.lifecycleFlags"]},{"name":"Listener<EventEnvelope> eventListener()","description":"io.spine.server.stand.Stand.eventListener","location":"server/io.spine.server.stand/-stand/event-listener.html","searchKeys":["eventListener","Listener<EventEnvelope> eventListener()","io.spine.server.stand.Stand.eventListener"]},{"name":"Map<ColumnName, Object> valuesIn(Entity<? extends Object, ? extends Object> source)","description":"io.spine.server.entity.storage.Columns.valuesIn","location":"server/io.spine.server.entity.storage/-columns/values-in.html","searchKeys":["valuesIn","Map<ColumnName, Object> valuesIn(Entity<? extends Object, ? extends Object> source)","io.spine.server.entity.storage.Columns.valuesIn"]},{"name":"MatchCriterion getUnmetCriterion()","description":"io.spine.server.model.SignatureMismatch.getUnmetCriterion","location":"server/io.spine.server.model/-signature-mismatch/get-unmet-criterion.html","searchKeys":["getUnmetCriterion","MatchCriterion getUnmetCriterion()","io.spine.server.model.SignatureMismatch.getUnmetCriterion"]},{"name":"MessageClass messageClass()","description":"io.spine.server.integration.ExternalMessageEnvelope.messageClass","location":"server/io.spine.server.integration/-external-message-envelope/message-class.html","searchKeys":["messageClass","MessageClass messageClass()","io.spine.server.integration.ExternalMessageEnvelope.messageClass"]},{"name":"MessageClass originClass()","description":"io.spine.server.type.EventEnvelope.originClass","location":"server/io.spine.server.type/-event-envelope/origin-class.html","searchKeys":["originClass","MessageClass originClass()","io.spine.server.type.EventEnvelope.originClass"]},{"name":"MessageId messageId()","description":"io.spine.server.type.SignalEnvelope.messageId","location":"server/io.spine.server.type/-signal-envelope/message-id.html","searchKeys":["messageId","MessageId messageId()","io.spine.server.type.SignalEnvelope.messageId"]},{"name":"Message id()","description":"io.spine.server.integration.ExternalMessageEnvelope.id","location":"server/io.spine.server.integration/-external-message-envelope/id.html","searchKeys":["id","Message id()","io.spine.server.integration.ExternalMessageEnvelope.id"]},{"name":"Message message()","description":"io.spine.server.integration.ExternalMessageEnvelope.message","location":"server/io.spine.server.integration/-external-message-envelope/message.html","searchKeys":["message","Message message()","io.spine.server.integration.ExternalMessageEnvelope.message"]},{"name":"MethodParams params()","description":"io.spine.server.event.model.EventHandlerMethod.params","location":"server/io.spine.server.event.model/-event-handler-method/params.html","searchKeys":["params","MethodParams params()","io.spine.server.event.model.EventHandlerMethod.params"]},{"name":"MethodParams params()","description":"io.spine.server.event.model.SubscriberMethod.params","location":"server/io.spine.server.event.model/-subscriber-method/params.html","searchKeys":["params","MethodParams params()","io.spine.server.event.model.SubscriberMethod.params"]},{"name":"MethodParams params()","description":"io.spine.server.model.AbstractHandlerMethod.params","location":"server/io.spine.server.model/-abstract-handler-method/params.html","searchKeys":["params","MethodParams params()","io.spine.server.model.AbstractHandlerMethod.params"]},{"name":"MulticastDispatchListener dispatchListener()","description":"io.spine.server.delivery.Delivery.dispatchListener","location":"server/io.spine.server.delivery/-delivery/dispatch-listener.html","searchKeys":["dispatchListener","MulticastDispatchListener dispatchListener()","io.spine.server.delivery.Delivery.dispatchListener"]},{"name":"M handlerOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.EventReceivingClassDelegate.handlerOf","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/handler-of.html","searchKeys":["handlerOf","M handlerOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.EventReceivingClassDelegate.handlerOf"]},{"name":"NoOpSystemClient systemClient()","description":"io.spine.system.server.SystemContext.systemClient","location":"server/io.spine.system.server/-system-context/system-client.html","searchKeys":["systemClient","NoOpSystemClient systemClient()","io.spine.system.server.SystemContext.systemClient"]},{"name":"NoOpSystemReadSide readSide()","description":"io.spine.system.server.NoOpSystemClient.readSide","location":"server/io.spine.system.server/-no-op-system-client/read-side.html","searchKeys":["readSide","NoOpSystemReadSide readSide()","io.spine.system.server.NoOpSystemClient.readSide"]},{"name":"NoOpSystemWriteSide writeSide()","description":"io.spine.system.server.NoOpSystemClient.writeSide","location":"server/io.spine.system.server/-no-op-system-client/write-side.html","searchKeys":["writeSide","NoOpSystemWriteSide writeSide()","io.spine.system.server.NoOpSystemClient.writeSide"]},{"name":"NodeId nodeId()","description":"io.spine.server.ServerEnvironment.nodeId","location":"server/io.spine.server/-server-environment/node-id.html","searchKeys":["nodeId","NodeId nodeId()","io.spine.server.ServerEnvironment.nodeId"]},{"name":"Nothing nothing()","description":"io.spine.server.EventProducer.nothing","location":"server/io.spine.server/-event-producer/nothing.html","searchKeys":["nothing","Nothing nothing()","io.spine.server.EventProducer.nothing"]},{"name":"Object columnValue(ColumnName columnName)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.columnValue","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/column-value.html","searchKeys":["columnValue","Object columnValue(ColumnName columnName)","io.spine.server.entity.storage.EntityRecordWithColumns.columnValue"]},{"name":"Object entityId()","description":"io.spine.server.entity.rejection.StandardRejection.entityId","location":"server/io.spine.server.entity.rejection/-standard-rejection/entity-id.html","searchKeys":["entityId","Object entityId()","io.spine.server.entity.rejection.StandardRejection.entityId"]},{"name":"Object valueIn(Entity<? extends Object, ? extends Object> entity)","description":"io.spine.server.entity.storage.InterfaceBasedColumn.valueIn","location":"server/io.spine.server.entity.storage/-interface-based-column/value-in.html","searchKeys":["valueIn","Object valueIn(Entity<? extends Object, ? extends Object> entity)","io.spine.server.entity.storage.InterfaceBasedColumn.valueIn"]},{"name":"Object valueIn(EntityState state)","description":"io.spine.server.entity.storage.InterfaceBasedColumn.valueIn","location":"server/io.spine.server.entity.storage/-interface-based-column/value-in.html","searchKeys":["valueIn","Object valueIn(EntityState state)","io.spine.server.entity.storage.InterfaceBasedColumn.valueIn"]},{"name":"Optional<? extends AggregatePartRepository<? extends Object, ? extends Object, ? extends Object>> findPart(Class<? extends AggregateRoot<? extends Object>> rootClass, Class<? extends EntityState> partStateClass)","description":"io.spine.server.aggregate.InMemoryRootDirectory.findPart","location":"server/io.spine.server.aggregate/-in-memory-root-directory/find-part.html","searchKeys":["findPart","Optional<? extends AggregatePartRepository<? extends Object, ? extends Object, ? extends Object>> findPart(Class<? extends AggregateRoot<? extends Object>> rootClass, Class<? extends EntityState> partStateClass)","io.spine.server.aggregate.InMemoryRootDirectory.findPart"]},{"name":"Optional<? extends D> getDispatcherForType(C messageClass)","description":"io.spine.server.bus.DispatcherRegistry.getDispatcherForType","location":"server/io.spine.server.bus/-dispatcher-registry/get-dispatcher-for-type.html","searchKeys":["getDispatcherForType","Optional<? extends D> getDispatcherForType(C messageClass)","io.spine.server.bus.DispatcherRegistry.getDispatcherForType"]},{"name":"Optional<? extends EventMessage> filter(EventMessage event)","description":"io.spine.server.entity.CompositeEventFilter.filter","location":"server/io.spine.server.entity/-composite-event-filter/filter.html","searchKeys":["filter","Optional<? extends EventMessage> filter(EventMessage event)","io.spine.server.entity.CompositeEventFilter.filter"]},{"name":"Optional<? extends EventMessage> filter(EventMessage event)","description":"io.spine.server.entity.EventBlackList.filter","location":"server/io.spine.server.entity/-event-black-list/filter.html","searchKeys":["filter","Optional<? extends EventMessage> filter(EventMessage event)","io.spine.server.entity.EventBlackList.filter"]},{"name":"Optional<? extends EventMessage> filter(EventMessage event)","description":"io.spine.server.entity.EventFieldFilter.filter","location":"server/io.spine.server.entity/-event-field-filter/filter.html","searchKeys":["filter","Optional<? extends EventMessage> filter(EventMessage event)","io.spine.server.entity.EventFieldFilter.filter"]},{"name":"Optional<? extends EventMessage> filter(EventMessage event)","description":"io.spine.server.entity.EventWhiteList.filter","location":"server/io.spine.server.entity/-event-white-list/filter.html","searchKeys":["filter","Optional<? extends EventMessage> filter(EventMessage event)","io.spine.server.entity.EventWhiteList.filter"]},{"name":"Optional<? extends TenantIndex> tenantIndex()","description":"io.spine.server.BoundedContextBuilder.tenantIndex","location":"server/io.spine.server/-bounded-context-builder/tenant-index.html","searchKeys":["tenantIndex","Optional<? extends TenantIndex> tenantIndex()","io.spine.server.BoundedContextBuilder.tenantIndex"]},{"name":"Optional<A> find(I id)","description":"io.spine.server.aggregate.AggregateRepository.find","location":"server/io.spine.server.aggregate/-aggregate-repository/find.html","searchKeys":["find","Optional<A> find(I id)","io.spine.server.aggregate.AggregateRepository.find"]},{"name":"Optional<Ack> filter(CommandEnvelope envelope)","description":"io.spine.server.commandbus.CommandScheduler.filter","location":"server/io.spine.server.commandbus/-command-scheduler/filter.html","searchKeys":["filter","Optional<Ack> filter(CommandEnvelope envelope)","io.spine.server.commandbus.CommandScheduler.filter"]},{"name":"Optional<Ack> letPass()","description":"io.spine.server.bus.BusFilter.letPass","location":"server/io.spine.server.bus/-bus-filter/let-pass.html","searchKeys":["letPass","Optional<Ack> letPass()","io.spine.server.bus.BusFilter.letPass"]},{"name":"Optional<Ack> reject(E envelope)","description":"io.spine.server.bus.BusFilter.reject","location":"server/io.spine.server.bus/-bus-filter/reject.html","searchKeys":["reject","Optional<Ack> reject(E envelope)","io.spine.server.bus.BusFilter.reject"]},{"name":"Optional<Ack> reject(E envelope, Error cause)","description":"io.spine.server.bus.BusFilter.reject","location":"server/io.spine.server.bus/-bus-filter/reject.html","searchKeys":["reject","Optional<Ack> reject(E envelope, Error cause)","io.spine.server.bus.BusFilter.reject"]},{"name":"Optional<Ack> reject(E envelope, ThrowableMessage cause)","description":"io.spine.server.bus.BusFilter.reject","location":"server/io.spine.server.bus/-bus-filter/reject.html","searchKeys":["reject","Optional<Ack> reject(E envelope, ThrowableMessage cause)","io.spine.server.bus.BusFilter.reject"]},{"name":"Optional<AggregateHistory> read(AggregateReadRequest<I> request)","description":"io.spine.server.aggregate.AggregateStorage.read","location":"server/io.spine.server.aggregate/-aggregate-storage/read.html","searchKeys":["read","Optional<AggregateHistory> read(AggregateReadRequest<I> request)","io.spine.server.aggregate.AggregateStorage.read"]},{"name":"Optional<ArgumentFilter> filter()","description":"io.spine.server.model.MethodParams.filter","location":"server/io.spine.server.model/-method-params/filter.html","searchKeys":["filter","Optional<ArgumentFilter> filter()","io.spine.server.model.MethodParams.filter"]},{"name":"Optional<CatchUp> load(CatchUpId id)","description":"io.spine.server.delivery.CatchUpProcess.load","location":"server/io.spine.server.delivery/-catch-up-process/load.html","searchKeys":["load","Optional<CatchUp> load(CatchUpId id)","io.spine.server.delivery.CatchUpProcess.load"]},{"name":"Optional<CatchUp> read(CatchUpReadRequest request)","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.read","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/read.html","searchKeys":["read","Optional<CatchUp> read(CatchUpReadRequest request)","io.spine.server.storage.memory.InMemoryCatchUpStorage.read"]},{"name":"Optional<CatchUpStorage> catchUpStorage()","description":"io.spine.server.delivery.DeliveryBuilder.catchUpStorage","location":"server/io.spine.server.delivery/-delivery-builder/catch-up-storage.html","searchKeys":["catchUpStorage","Optional<CatchUpStorage> catchUpStorage()","io.spine.server.delivery.DeliveryBuilder.catchUpStorage"]},{"name":"Optional<Class<? extends Throwable>> allowedThrowable()","description":"io.spine.server.model.MethodSignature.allowedThrowable","location":"server/io.spine.server.model/-method-signature/allowed-throwable.html","searchKeys":["allowedThrowable","Optional<Class<? extends Throwable>> allowedThrowable()","io.spine.server.model.MethodSignature.allowedThrowable"]},{"name":"Optional<Column> find(ColumnName columnName)","description":"io.spine.server.entity.storage.Columns.find","location":"server/io.spine.server.entity.storage/-columns/find.html","searchKeys":["find","Optional<Column> find(ColumnName columnName)","io.spine.server.entity.storage.Columns.find"]},{"name":"Optional<CommandRoute<I, M>> get<M extends CommandMessage>(Class<M> commandClass)","description":"io.spine.server.route.CommandRouting.get","location":"server/io.spine.server.route/-command-routing/get.html","searchKeys":["get","Optional<CommandRoute<I, M>> get<M extends CommandMessage>(Class<M> commandClass)","io.spine.server.route.CommandRouting.get"]},{"name":"Optional<D> dispatcherOf(E envelope)","description":"io.spine.server.bus.DispatcherRegistry.dispatcherOf","location":"server/io.spine.server.bus/-dispatcher-registry/dispatcher-of.html","searchKeys":["dispatcherOf","Optional<D> dispatcherOf(E envelope)","io.spine.server.bus.DispatcherRegistry.dispatcherOf"]},{"name":"Optional<DeliveryMonitor> deliveryMonitor()","description":"io.spine.server.delivery.DeliveryBuilder.deliveryMonitor","location":"server/io.spine.server.delivery/-delivery-builder/delivery-monitor.html","searchKeys":["deliveryMonitor","Optional<DeliveryMonitor> deliveryMonitor()","io.spine.server.delivery.DeliveryBuilder.deliveryMonitor"]},{"name":"Optional<DeliveryStats> deliverMessagesFrom(ShardIndex index)","description":"io.spine.server.delivery.Delivery.deliverMessagesFrom","location":"server/io.spine.server.delivery/-delivery/deliver-messages-from.html","searchKeys":["deliverMessagesFrom","Optional<DeliveryStats> deliverMessagesFrom(ShardIndex index)","io.spine.server.delivery.Delivery.deliverMessagesFrom"]},{"name":"Optional<DeliveryStrategy> strategy()","description":"io.spine.server.delivery.DeliveryBuilder.strategy","location":"server/io.spine.server.delivery/-delivery-builder/strategy.html","searchKeys":["strategy","Optional<DeliveryStrategy> strategy()","io.spine.server.delivery.DeliveryBuilder.strategy"]},{"name":"Optional<Duration> deduplicationWindow()","description":"io.spine.server.delivery.DeliveryBuilder.deduplicationWindow","location":"server/io.spine.server.delivery/-delivery-builder/deduplication-window.html","searchKeys":["deduplicationWindow","Optional<Duration> deduplicationWindow()","io.spine.server.delivery.DeliveryBuilder.deduplicationWindow"]},{"name":"Optional<E> find(I id)","description":"io.spine.server.entity.RecordBasedRepository.find","location":"server/io.spine.server.entity/-record-based-repository/find.html","searchKeys":["find","Optional<E> find(I id)","io.spine.server.entity.RecordBasedRepository.find"]},{"name":"Optional<E> findActive(I id)","description":"io.spine.server.entity.RecordBasedRepository.findActive","location":"server/io.spine.server.entity/-record-based-repository/find-active.html","searchKeys":["findActive","Optional<E> findActive(I id)","io.spine.server.entity.RecordBasedRepository.findActive"]},{"name":"Optional<Enrichment> createEnrichment(M message, C context)","description":"io.spine.server.enrich.Enricher.createEnrichment","location":"server/io.spine.server.enrich/-enricher/create-enrichment.html","searchKeys":["createEnrichment","Optional<Enrichment> createEnrichment(M message, C context)","io.spine.server.enrich.Enricher.createEnrichment"]},{"name":"Optional<EntityRecord> read(RecordReadRequest<I> request)","description":"io.spine.server.storage.RecordStorage.read","location":"server/io.spine.server.storage/-record-storage/read.html","searchKeys":["read","Optional<EntityRecord> read(RecordReadRequest<I> request)","io.spine.server.storage.RecordStorage.read"]},{"name":"Optional<EntityRecord> read(RecordReadRequest<I> request, FieldMask fieldMask)","description":"io.spine.server.storage.RecordStorage.read","location":"server/io.spine.server.storage/-record-storage/read.html","searchKeys":["read","Optional<EntityRecord> read(RecordReadRequest<I> request, FieldMask fieldMask)","io.spine.server.storage.RecordStorage.read"]},{"name":"Optional<EntityRecord> readRecord(I id)","description":"io.spine.server.projection.ProjectionStorage.readRecord","location":"server/io.spine.server.projection/-projection-storage/read-record.html","searchKeys":["readRecord","Optional<EntityRecord> readRecord(I id)","io.spine.server.projection.ProjectionStorage.readRecord"]},{"name":"Optional<EntityRecord> readRecord(I id)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.readRecord","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/read-record.html","searchKeys":["readRecord","Optional<EntityRecord> readRecord(I id)","io.spine.server.storage.memory.InMemoryRecordStorage.readRecord"]},{"name":"Optional<Event> postEvent(EventMessage event)","description":"io.spine.server.entity.EntityLifecycle.postEvent","location":"server/io.spine.server.entity/-entity-lifecycle/post-event.html","searchKeys":["postEvent","Optional<Event> postEvent(EventMessage event)","io.spine.server.entity.EntityLifecycle.postEvent"]},{"name":"Optional<Event> postEvent(EventMessage event, Origin explicitOrigin)","description":"io.spine.server.entity.EntityLifecycle.postEvent","location":"server/io.spine.server.entity/-entity-lifecycle/post-event.html","searchKeys":["postEvent","Optional<Event> postEvent(EventMessage event, Origin explicitOrigin)","io.spine.server.entity.EntityLifecycle.postEvent"]},{"name":"Optional<EventEnricher> enricher()","description":"io.spine.server.event.EventBus.Builder.enricher","location":"server/io.spine.server.event/-event-bus/-builder/enricher.html","searchKeys":["enricher","Optional<EventEnricher> enricher()","io.spine.server.event.EventBus.Builder.enricher"]},{"name":"Optional<EventEnricher> eventEnricher()","description":"io.spine.server.BoundedContextBuilder.eventEnricher","location":"server/io.spine.server/-bounded-context-builder/event-enricher.html","searchKeys":["eventEnricher","Optional<EventEnricher> eventEnricher()","io.spine.server.BoundedContextBuilder.eventEnricher"]},{"name":"Optional<EventRoute<I, M>> get<M extends EventMessage>(Class<M> eventClass)","description":"io.spine.server.route.EventRouting.get","location":"server/io.spine.server.route/-event-routing/get.html","searchKeys":["get","Optional<EventRoute<I, M>> get<M extends EventMessage>(Class<M> eventClass)","io.spine.server.route.EventRouting.get"]},{"name":"Optional<InboxMessage> newestMessageToDeliver(ShardIndex index)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.newestMessageToDeliver","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/newest-message-to-deliver.html","searchKeys":["newestMessageToDeliver","Optional<InboxMessage> newestMessageToDeliver(ShardIndex index)","io.spine.server.storage.memory.InMemoryInboxStorage.newestMessageToDeliver"]},{"name":"Optional<InboxMessage> read(InboxReadRequest request)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.read","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/read.html","searchKeys":["read","Optional<InboxMessage> read(InboxReadRequest request)","io.spine.server.storage.memory.InMemoryInboxStorage.read"]},{"name":"Optional<InboxStorage> inboxStorage()","description":"io.spine.server.delivery.DeliveryBuilder.inboxStorage","location":"server/io.spine.server.delivery/-delivery-builder/inbox-storage.html","searchKeys":["inboxStorage","Optional<InboxStorage> inboxStorage()","io.spine.server.delivery.DeliveryBuilder.inboxStorage"]},{"name":"Optional<Integer> catchUpPageSize()","description":"io.spine.server.delivery.DeliveryBuilder.catchUpPageSize","location":"server/io.spine.server.delivery/-delivery-builder/catch-up-page-size.html","searchKeys":["catchUpPageSize","Optional<Integer> catchUpPageSize()","io.spine.server.delivery.DeliveryBuilder.catchUpPageSize"]},{"name":"Optional<Integer> pageSize()","description":"io.spine.server.delivery.DeliveryBuilder.pageSize","location":"server/io.spine.server.delivery/-delivery-builder/page-size.html","searchKeys":["pageSize","Optional<Integer> pageSize()","io.spine.server.delivery.DeliveryBuilder.pageSize"]},{"name":"Optional<Integer> port()","description":"io.spine.server.GrpcContainer.port","location":"server/io.spine.server/-grpc-container/port.html","searchKeys":["port","Optional<Integer> port()","io.spine.server.GrpcContainer.port"]},{"name":"Optional<LifecycleFlags> readLifecycleFlags(I id)","description":"io.spine.server.storage.RecordStorage.readLifecycleFlags","location":"server/io.spine.server.storage/-record-storage/read-lifecycle-flags.html","searchKeys":["readLifecycleFlags","Optional<LifecycleFlags> readLifecycleFlags(I id)","io.spine.server.storage.RecordStorage.readLifecycleFlags"]},{"name":"Optional<Repository<? extends Object, ? extends Object>> findRepository(Class<? extends EntityState> stateClass)","description":"io.spine.server.BoundedContext.InternalAccess.findRepository","location":"server/io.spine.server/-bounded-context/-internal-access/find-repository.html","searchKeys":["findRepository","Optional<Repository<? extends Object, ? extends Object>> findRepository(Class<? extends EntityState> stateClass)","io.spine.server.BoundedContext.InternalAccess.findRepository"]},{"name":"Optional<Repository<? extends Object, ? extends Object>> systemRepositoryFor(Class<? extends EntityState> stateClass)","description":"io.spine.system.server.NoOpSystemClient.systemRepositoryFor","location":"server/io.spine.system.server/-no-op-system-client/system-repository-for.html","searchKeys":["systemRepositoryFor","Optional<Repository<? extends Object, ? extends Object>> systemRepositoryFor(Class<? extends EntityState> stateClass)","io.spine.system.server.NoOpSystemClient.systemRepositoryFor"]},{"name":"Optional<ShardProcessingSession> pickUp(ShardIndex index, NodeId node)","description":"io.spine.server.delivery.AbstractWorkRegistry.pickUp","location":"server/io.spine.server.delivery/-abstract-work-registry/pick-up.html","searchKeys":["pickUp","Optional<ShardProcessingSession> pickUp(ShardIndex index, NodeId node)","io.spine.server.delivery.AbstractWorkRegistry.pickUp"]},{"name":"Optional<ShardSessionRecord> find(ShardIndex index)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.find","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/find.html","searchKeys":["find","Optional<ShardSessionRecord> find(ShardIndex index)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.find"]},{"name":"Optional<ShardedWorkRegistry> workRegistry()","description":"io.spine.server.delivery.DeliveryBuilder.workRegistry","location":"server/io.spine.server.delivery/-delivery-builder/work-registry.html","searchKeys":["workRegistry","Optional<ShardedWorkRegistry> workRegistry()","io.spine.server.delivery.DeliveryBuilder.workRegistry"]},{"name":"Optional<StorageFactory> optionalStorageFactory()","description":"io.spine.server.ServerEnvironment.optionalStorageFactory","location":"server/io.spine.server/-server-environment/optional-storage-factory.html","searchKeys":["optionalStorageFactory","Optional<StorageFactory> optionalStorageFactory()","io.spine.server.ServerEnvironment.optionalStorageFactory"]},{"name":"Optional<StreamObserver<Ack>> observer()","description":"io.spine.server.event.EventBus.Builder.observer","location":"server/io.spine.server.event/-event-bus/-builder/observer.html","searchKeys":["observer","Optional<StreamObserver<Ack>> observer()","io.spine.server.event.EventBus.Builder.observer"]},{"name":"Optional<String> serverName()","description":"io.spine.server.GrpcContainer.serverName","location":"server/io.spine.server/-grpc-container/server-name.html","searchKeys":["serverName","Optional<String> serverName()","io.spine.server.GrpcContainer.serverName"]},{"name":"Optional<SubscriberMethod> subscriberOf(EventEnvelope event)","description":"io.spine.server.event.model.SubscribingClass.subscriberOf","location":"server/io.spine.server.event.model/-subscribing-class/subscriber-of.html","searchKeys":["subscriberOf","Optional<SubscriberMethod> subscriberOf(EventEnvelope event)","io.spine.server.event.model.SubscribingClass.subscriberOf"]},{"name":"Optional<Success> handleRejection(ThrowableMessage throwableMessage, T target, E origin)","description":"io.spine.server.model.AbstractHandlerMethod.handleRejection","location":"server/io.spine.server.model/-abstract-handler-method/handle-rejection.html","searchKeys":["handleRejection","Optional<Success> handleRejection(ThrowableMessage throwableMessage, T target, E origin)","io.spine.server.model.AbstractHandlerMethod.handleRejection"]},{"name":"Optional<SystemWriteSide> system()","description":"io.spine.server.bus.BusBuilder.system","location":"server/io.spine.server.bus/-bus-builder/system.html","searchKeys":["system","Optional<SystemWriteSide> system()","io.spine.server.bus.BusBuilder.system"]},{"name":"Optional<TenantIndex> tenantIndex()","description":"io.spine.server.bus.BusBuilder.tenantIndex","location":"server/io.spine.server.bus/-bus-builder/tenant-index.html","searchKeys":["tenantIndex","Optional<TenantIndex> tenantIndex()","io.spine.server.bus.BusBuilder.tenantIndex"]},{"name":"Optional<TracerFactory> tracing()","description":"io.spine.server.ServerEnvironment.tracing","location":"server/io.spine.server/-server-environment/tracing.html","searchKeys":["tracing","Optional<TracerFactory> tracing()","io.spine.server.ServerEnvironment.tracing"]},{"name":"Origin asMessageOrigin()","description":"io.spine.server.integration.ExternalMessageEnvelope.asMessageOrigin","location":"server/io.spine.server.integration/-external-message-envelope/as-message-origin.html","searchKeys":["asMessageOrigin","Origin asMessageOrigin()","io.spine.server.integration.ExternalMessageEnvelope.asMessageOrigin"]},{"name":"Origin asMessageOrigin()","description":"io.spine.server.type.SignalEnvelope.asMessageOrigin","location":"server/io.spine.server.type/-signal-envelope/as-message-origin.html","searchKeys":["asMessageOrigin","Origin asMessageOrigin()","io.spine.server.type.SignalEnvelope.asMessageOrigin"]},{"name":"PARAMETERS","description":"io.spine.server.model.MatchCriterion.PARAMETERS","location":"server/io.spine.server.model/-match-criterion/-p-a-r-a-m-e-t-e-r-s/index.html","searchKeys":["PARAMETERS","PARAMETERS","io.spine.server.model.MatchCriterion.PARAMETERS"]},{"name":"PROHIBITED_EXCEPTION","description":"io.spine.server.model.MatchCriterion.PROHIBITED_EXCEPTION","location":"server/io.spine.server.model/-match-criterion/-p-r-o-h-i-b-i-t-e-d_-e-x-c-e-p-t-i-o-n/index.html","searchKeys":["PROHIBITED_EXCEPTION","PROHIBITED_EXCEPTION","io.spine.server.model.MatchCriterion.PROHIBITED_EXCEPTION"]},{"name":"Page<InboxMessage> readAll(ShardIndex index, int pageSize)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.readAll","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/read-all.html","searchKeys":["readAll","Page<InboxMessage> readAll(ShardIndex index, int pageSize)","io.spine.server.storage.memory.InMemoryInboxStorage.readAll"]},{"name":"ParameterSpec<E> parameterSpec()","description":"io.spine.server.model.AbstractHandlerMethod.parameterSpec","location":"server/io.spine.server.model/-abstract-handler-method/parameter-spec.html","searchKeys":["parameterSpec","ParameterSpec<E> parameterSpec()","io.spine.server.model.AbstractHandlerMethod.parameterSpec"]},{"name":"PmTransaction<? extends Object, ? extends Object, ? extends Object> beginTransactionFor(P manager)","description":"io.spine.server.procman.ProcessManagerRepository.beginTransactionFor","location":"server/io.spine.server.procman/-process-manager-repository/begin-transaction-for.html","searchKeys":["beginTransactionFor","PmTransaction<? extends Object, ? extends Object, ? extends Object> beginTransactionFor(P manager)","io.spine.server.procman.ProcessManagerRepository.beginTransactionFor"]},{"name":"ProcessManagerClass<? extends Object> modelClass()","description":"io.spine.server.procman.ProcessManager.modelClass","location":"server/io.spine.server.procman/-process-manager/model-class.html","searchKeys":["modelClass","ProcessManagerClass<? extends Object> modelClass()","io.spine.server.procman.ProcessManager.modelClass"]},{"name":"ProcessManagerClass<? extends Object> thisClass()","description":"io.spine.server.procman.ProcessManager.thisClass","location":"server/io.spine.server.procman/-process-manager/this-class.html","searchKeys":["thisClass","ProcessManagerClass<? extends Object> thisClass()","io.spine.server.procman.ProcessManager.thisClass"]},{"name":"ProcessManagerClass<P> entityModelClass()","description":"io.spine.server.procman.DefaultProcessManagerRepository.entityModelClass","location":"server/io.spine.server.procman/-default-process-manager-repository/entity-model-class.html","searchKeys":["entityModelClass","ProcessManagerClass<P> entityModelClass()","io.spine.server.procman.DefaultProcessManagerRepository.entityModelClass"]},{"name":"ProjectionClass<? extends Object> modelClass()","description":"io.spine.server.projection.Projection.modelClass","location":"server/io.spine.server.projection/-projection/model-class.html","searchKeys":["modelClass","ProjectionClass<? extends Object> modelClass()","io.spine.server.projection.Projection.modelClass"]},{"name":"ProjectionClass<? extends Object> thisClass()","description":"io.spine.server.projection.Projection.thisClass","location":"server/io.spine.server.projection/-projection/this-class.html","searchKeys":["thisClass","ProjectionClass<? extends Object> thisClass()","io.spine.server.projection.Projection.thisClass"]},{"name":"ProjectionClass<P> entityModelClass()","description":"io.spine.server.projection.DefaultProjectionRepository.entityModelClass","location":"server/io.spine.server.projection/-default-projection-repository/entity-model-class.html","searchKeys":["entityModelClass","ProjectionClass<P> entityModelClass()","io.spine.server.projection.DefaultProjectionRepository.entityModelClass"]},{"name":"ProjectionRepository<I, ? extends Object, ? extends Object> getRepository()","description":"io.spine.server.delivery.CatchUpProcessBuilder.getRepository","location":"server/io.spine.server.delivery/-catch-up-process-builder/get-repository.html","searchKeys":["getRepository","ProjectionRepository<I, ? extends Object, ? extends Object> getRepository()","io.spine.server.delivery.CatchUpProcessBuilder.getRepository"]},{"name":"ProjectionRepository<I, P, ? extends Object> repository()","description":"io.spine.server.projection.ProjectionEndpoint.repository","location":"server/io.spine.server.projection/-projection-endpoint/repository.html","searchKeys":["repository","ProjectionRepository<I, P, ? extends Object> repository()","io.spine.server.projection.ProjectionEndpoint.repository"]},{"name":"ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ? extends Object, ? extends Object>> projectionClass)","description":"io.spine.server.storage.memory.InMemoryStorageFactory.createProjectionStorage","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/create-projection-storage.html","searchKeys":["createProjectionStorage","ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ? extends Object, ? extends Object>> projectionClass)","io.spine.server.storage.memory.InMemoryStorageFactory.createProjectionStorage"]},{"name":"ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ? extends Object, ? extends Object>> projectionClass)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.createProjectionStorage","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/create-projection-storage.html","searchKeys":["createProjectionStorage","ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ? extends Object, ? extends Object>> projectionClass)","io.spine.server.storage.system.SystemAwareStorageFactory.createProjectionStorage"]},{"name":"Publisher newChannel(ChannelId channelId)","description":"io.spine.server.transport.PublisherHub.newChannel","location":"server/io.spine.server.transport/-publisher-hub/new-channel.html","searchKeys":["newChannel","Publisher newChannel(ChannelId channelId)","io.spine.server.transport.PublisherHub.newChannel"]},{"name":"P create(I id)","description":"io.spine.server.procman.ProcessManagerRepository.create","location":"server/io.spine.server.procman/-process-manager-repository/create.html","searchKeys":["create","P create(I id)","io.spine.server.procman.ProcessManagerRepository.create"]},{"name":"P create(I id)","description":"io.spine.server.projection.ProjectionRepository.create","location":"server/io.spine.server.projection/-projection-repository/create.html","searchKeys":["create","P create(I id)","io.spine.server.projection.ProjectionRepository.create"]},{"name":"P partState<P extends EntityState>(Class<P> partStateClass)","description":"io.spine.server.aggregate.AggregatePart.partState","location":"server/io.spine.server.aggregate/-aggregate-part/part-state.html","searchKeys":["partState","P partState<P extends EntityState>(Class<P> partStateClass)","io.spine.server.aggregate.AggregatePart.partState"]},{"name":"QueryId queryId()","description":"io.spine.server.tenant.QueryOperation.queryId","location":"server/io.spine.server.tenant/-query-operation/query-id.html","searchKeys":["queryId","QueryId queryId()","io.spine.server.tenant.QueryOperation.queryId"]},{"name":"QueryParameters.Builder add(CompositeQueryParameter parameter)","description":"io.spine.server.entity.storage.QueryParameters.Builder.add","location":"server/io.spine.server.entity.storage/-query-parameters/-builder/add.html","searchKeys":["add","QueryParameters.Builder add(CompositeQueryParameter parameter)","io.spine.server.entity.storage.QueryParameters.Builder.add"]},{"name":"QueryParameters.Builder addAll(Iterable<CompositeQueryParameter> parameters)","description":"io.spine.server.entity.storage.QueryParameters.Builder.addAll","location":"server/io.spine.server.entity.storage/-query-parameters/-builder/add-all.html","searchKeys":["addAll","QueryParameters.Builder addAll(Iterable<CompositeQueryParameter> parameters)","io.spine.server.entity.storage.QueryParameters.Builder.addAll"]},{"name":"QueryParameters build()","description":"io.spine.server.entity.storage.QueryParameters.Builder.build","location":"server/io.spine.server.entity.storage/-query-parameters/-builder/build.html","searchKeys":["build","QueryParameters build()","io.spine.server.entity.storage.QueryParameters.Builder.build"]},{"name":"QueryParameters getParameters()","description":"io.spine.server.entity.storage.EntityQuery.getParameters","location":"server/io.spine.server.entity.storage/-entity-query/get-parameters.html","searchKeys":["getParameters","QueryParameters getParameters()","io.spine.server.entity.storage.EntityQuery.getParameters"]},{"name":"QueryService.Builder add(BoundedContext context)","description":"io.spine.server.QueryService.Builder.add","location":"server/io.spine.server/-query-service/-builder/add.html","searchKeys":["add","QueryService.Builder add(BoundedContext context)","io.spine.server.QueryService.Builder.add"]},{"name":"QueryService.Builder remove(BoundedContext context)","description":"io.spine.server.QueryService.Builder.remove","location":"server/io.spine.server/-query-service/-builder/remove.html","searchKeys":["remove","QueryService.Builder remove(BoundedContext context)","io.spine.server.QueryService.Builder.remove"]},{"name":"QueryService build()","description":"io.spine.server.QueryService.Builder.build","location":"server/io.spine.server/-query-service/-builder/build.html","searchKeys":["build","QueryService build()","io.spine.server.QueryService.Builder.build"]},{"name":"Query query()","description":"io.spine.server.tenant.QueryOperation.query","location":"server/io.spine.server.tenant/-query-operation/query.html","searchKeys":["query","Query query()","io.spine.server.tenant.QueryOperation.query"]},{"name":"RETURN_TYPE","description":"io.spine.server.model.MatchCriterion.RETURN_TYPE","location":"server/io.spine.server.model/-match-criterion/-r-e-t-u-r-n_-t-y-p-e/index.html","searchKeys":["RETURN_TYPE","RETURN_TYPE","io.spine.server.model.MatchCriterion.RETURN_TYPE"]},{"name":"RecentHistory recentHistory()","description":"io.spine.server.entity.TransactionalEntity.recentHistory","location":"server/io.spine.server.entity/-transactional-entity/recent-history.html","searchKeys":["recentHistory","RecentHistory recentHistory()","io.spine.server.entity.TransactionalEntity.recentHistory"]},{"name":"RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ? extends Object>> entityClass)","description":"io.spine.server.storage.memory.InMemoryStorageFactory.createRecordStorage","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/create-record-storage.html","searchKeys":["createRecordStorage","RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ? extends Object>> entityClass)","io.spine.server.storage.memory.InMemoryStorageFactory.createRecordStorage"]},{"name":"RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ? extends Object>> entityClass)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.createRecordStorage","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/create-record-storage.html","searchKeys":["createRecordStorage","RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ? extends Object>> entityClass)","io.spine.server.storage.system.SystemAwareStorageFactory.createRecordStorage"]},{"name":"RecordStorage<I> createStorage()","description":"io.spine.server.entity.RecordBasedRepository.createStorage","location":"server/io.spine.server.entity/-record-based-repository/create-storage.html","searchKeys":["createStorage","RecordStorage<I> createStorage()","io.spine.server.entity.RecordBasedRepository.createStorage"]},{"name":"RecordStorage<I> recordStorage()","description":"io.spine.server.entity.RecordBasedRepository.recordStorage","location":"server/io.spine.server.entity/-record-based-repository/record-storage.html","searchKeys":["recordStorage","RecordStorage<I> recordStorage()","io.spine.server.entity.RecordBasedRepository.recordStorage"]},{"name":"RecordStorage<I> recordStorage()","description":"io.spine.server.storage.memory.InMemoryProjectionStorage.recordStorage","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/record-storage.html","searchKeys":["recordStorage","RecordStorage<I> recordStorage()","io.spine.server.storage.memory.InMemoryProjectionStorage.recordStorage"]},{"name":"RejectionMessage message()","description":"io.spine.server.event.RejectionEnvelope.message","location":"server/io.spine.server.event/-rejection-envelope/message.html","searchKeys":["message","RejectionMessage message()","io.spine.server.event.RejectionEnvelope.message"]},{"name":"Repository<? extends Object, ? extends Object> getRepository(Class<? extends EntityState> stateClass)","description":"io.spine.server.BoundedContext.InternalAccess.getRepository","location":"server/io.spine.server/-bounded-context/-internal-access/get-repository.html","searchKeys":["getRepository","Repository<? extends Object, ? extends Object> getRepository(Class<? extends EntityState> stateClass)","io.spine.server.BoundedContext.InternalAccess.getRepository"]},{"name":"Repository<? extends Object, ? extends Object> getRepository(TypeUrl stateType)","description":"io.spine.server.BoundedContext.InternalAccess.getRepository","location":"server/io.spine.server/-bounded-context/-internal-access/get-repository.html","searchKeys":["getRepository","Repository<? extends Object, ? extends Object> getRepository(TypeUrl stateType)","io.spine.server.BoundedContext.InternalAccess.getRepository"]},{"name":"Repository<I, E> repository()","description":"io.spine.server.entity.EntityMessageEndpoint.repository","location":"server/io.spine.server.entity/-entity-message-endpoint/repository.html","searchKeys":["repository","Repository<I, E> repository()","io.spine.server.entity.EntityMessageEndpoint.repository"]},{"name":"ReturnTypes returnTypes()","description":"io.spine.server.command.model.CommandHandlerSignature.returnTypes","location":"server/io.spine.server.command.model/-command-handler-signature/return-types.html","searchKeys":["returnTypes","ReturnTypes returnTypes()","io.spine.server.command.model.CommandHandlerSignature.returnTypes"]},{"name":"ReturnTypes returnTypes()","description":"io.spine.server.command.model.CommandReactionSignature.returnTypes","location":"server/io.spine.server.command.model/-command-reaction-signature/return-types.html","searchKeys":["returnTypes","ReturnTypes returnTypes()","io.spine.server.command.model.CommandReactionSignature.returnTypes"]},{"name":"ReturnTypes returnTypes()","description":"io.spine.server.command.model.CommandSubstituteSignature.returnTypes","location":"server/io.spine.server.command.model/-command-substitute-signature/return-types.html","searchKeys":["returnTypes","ReturnTypes returnTypes()","io.spine.server.command.model.CommandSubstituteSignature.returnTypes"]},{"name":"ReturnTypes returnTypes()","description":"io.spine.server.event.model.SubscriberSignature.returnTypes","location":"server/io.spine.server.event.model/-subscriber-signature/return-types.html","searchKeys":["returnTypes","ReturnTypes returnTypes()","io.spine.server.event.model.SubscriberSignature.returnTypes"]},{"name":"R applyTo(Object object)","description":"io.spine.server.entity.storage.ColumnTypeMapping.applyTo","location":"server/io.spine.server.entity.storage/-column-type-mapping/apply-to.html","searchKeys":["applyTo","R applyTo(Object object)","io.spine.server.entity.storage.ColumnTypeMapping.applyTo"]},{"name":"R columnValue<R>(ColumnName columnName, ColumnMapping<R> columnMapping)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.columnValue","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/column-value.html","searchKeys":["columnValue","R columnValue<R>(ColumnName columnName, ColumnMapping<R> columnMapping)","io.spine.server.entity.storage.EntityRecordWithColumns.columnValue"]},{"name":"R createRoot<I, R extends AggregateRoot<I>>(BoundedContext bc, I aggregateId)","description":"io.spine.server.aggregate.model.AggregatePartClass.createRoot","location":"server/io.spine.server.aggregate.model/-aggregate-part-class/create-root.html","searchKeys":["createRoot","R createRoot<I, R extends AggregateRoot<I>>(BoundedContext bc, I aggregateId)","io.spine.server.aggregate.model.AggregatePartClass.createRoot"]},{"name":"STATE","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.STATE","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/-s-t-a-t-e/index.html","searchKeys":["STATE","STATE","io.spine.server.aggregate.AggregatePart.GenericParameter.STATE"]},{"name":"STATE","description":"io.spine.server.entity.Entity.GenericParameter.STATE","location":"server/io.spine.server.entity/-entity/-generic-parameter/-s-t-a-t-e/index.html","searchKeys":["STATE","STATE","io.spine.server.entity.Entity.GenericParameter.STATE"]},{"name":"STATE_BUILDER","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.STATE_BUILDER","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/-s-t-a-t-e_-b-u-i-l-d-e-r/index.html","searchKeys":["STATE_BUILDER","STATE_BUILDER","io.spine.server.aggregate.AggregatePart.GenericParameter.STATE_BUILDER"]},{"name":"Server.Builder add(BoundedContextBuilder context)","description":"io.spine.server.Server.Builder.add","location":"server/io.spine.server/-server/-builder/add.html","searchKeys":["add","Server.Builder add(BoundedContextBuilder context)","io.spine.server.Server.Builder.add"]},{"name":"Server.Builder setPort(int port)","description":"io.spine.server.Server.Builder.setPort","location":"server/io.spine.server/-server/-builder/set-port.html","searchKeys":["setPort","Server.Builder setPort(int port)","io.spine.server.Server.Builder.setPort"]},{"name":"ServerEnvironment.TypeConfigurator use(Delivery delivery)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.use","location":"server/io.spine.server/-server-environment/-type-configurator/use.html","searchKeys":["use","ServerEnvironment.TypeConfigurator use(Delivery delivery)","io.spine.server.ServerEnvironment.TypeConfigurator.use"]},{"name":"ServerEnvironment.TypeConfigurator use(StorageFactory factory)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.use","location":"server/io.spine.server/-server-environment/-type-configurator/use.html","searchKeys":["use","ServerEnvironment.TypeConfigurator use(StorageFactory factory)","io.spine.server.ServerEnvironment.TypeConfigurator.use"]},{"name":"ServerEnvironment.TypeConfigurator use(TracerFactory factory)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.use","location":"server/io.spine.server/-server-environment/-type-configurator/use.html","searchKeys":["use","ServerEnvironment.TypeConfigurator use(TracerFactory factory)","io.spine.server.ServerEnvironment.TypeConfigurator.use"]},{"name":"ServerEnvironment.TypeConfigurator use(TransportFactory factory)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.use","location":"server/io.spine.server/-server-environment/-type-configurator/use.html","searchKeys":["use","ServerEnvironment.TypeConfigurator use(TransportFactory factory)","io.spine.server.ServerEnvironment.TypeConfigurator.use"]},{"name":"ServerEnvironment.TypeConfigurator useDelivery(ServerEnvironment.Fn<Delivery> fn)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.useDelivery","location":"server/io.spine.server/-server-environment/-type-configurator/use-delivery.html","searchKeys":["useDelivery","ServerEnvironment.TypeConfigurator useDelivery(ServerEnvironment.Fn<Delivery> fn)","io.spine.server.ServerEnvironment.TypeConfigurator.useDelivery"]},{"name":"ServerEnvironment.TypeConfigurator useStorageFactory(ServerEnvironment.Fn<StorageFactory> fn)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.useStorageFactory","location":"server/io.spine.server/-server-environment/-type-configurator/use-storage-factory.html","searchKeys":["useStorageFactory","ServerEnvironment.TypeConfigurator useStorageFactory(ServerEnvironment.Fn<StorageFactory> fn)","io.spine.server.ServerEnvironment.TypeConfigurator.useStorageFactory"]},{"name":"ServerEnvironment.TypeConfigurator useTracerFactory(ServerEnvironment.Fn<TracerFactory> fn)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.useTracerFactory","location":"server/io.spine.server/-server-environment/-type-configurator/use-tracer-factory.html","searchKeys":["useTracerFactory","ServerEnvironment.TypeConfigurator useTracerFactory(ServerEnvironment.Fn<TracerFactory> fn)","io.spine.server.ServerEnvironment.TypeConfigurator.useTracerFactory"]},{"name":"ServerEnvironment.TypeConfigurator useTransportFactory(ServerEnvironment.Fn<TransportFactory> fn)","description":"io.spine.server.ServerEnvironment.TypeConfigurator.useTransportFactory","location":"server/io.spine.server/-server-environment/-type-configurator/use-transport-factory.html","searchKeys":["useTransportFactory","ServerEnvironment.TypeConfigurator useTransportFactory(ServerEnvironment.Fn<TransportFactory> fn)","io.spine.server.ServerEnvironment.TypeConfigurator.useTransportFactory"]},{"name":"Server build()","description":"io.spine.server.Server.Builder.build","location":"server/io.spine.server/-server/-builder/build.html","searchKeys":["build","Server build()","io.spine.server.Server.Builder.build"]},{"name":"Set<C> registeredMessageClasses()","description":"io.spine.server.bus.DispatcherRegistry.registeredMessageClasses","location":"server/io.spine.server.bus/-dispatcher-registry/registered-message-classes.html","searchKeys":["registeredMessageClasses","Set<C> registeredMessageClasses()","io.spine.server.bus.DispatcherRegistry.registeredMessageClasses"]},{"name":"Set<ChannelId> ids()","description":"io.spine.server.transport.ChannelHub.ids","location":"server/io.spine.server.transport/-channel-hub/ids.html","searchKeys":["ids","Set<ChannelId> ids()","io.spine.server.transport.ChannelHub.ids"]},{"name":"Set<D> dispatchersOf(C messageClass)","description":"io.spine.server.bus.DispatcherRegistry.dispatchersOf","location":"server/io.spine.server.bus/-dispatcher-registry/dispatchers-of.html","searchKeys":["dispatchersOf","Set<D> dispatchersOf(C messageClass)","io.spine.server.bus.DispatcherRegistry.dispatchersOf"]},{"name":"Set<Function<Method, Attribute<? extends Object>>> attributeSuppliers()","description":"io.spine.server.aggregate.model.Applier.attributeSuppliers","location":"server/io.spine.server.aggregate.model/-applier/attribute-suppliers.html","searchKeys":["attributeSuppliers","Set<Function<Method, Attribute<? extends Object>>> attributeSuppliers()","io.spine.server.aggregate.model.Applier.attributeSuppliers"]},{"name":"Set<Function<Method, Attribute<? extends Object>>> attributeSuppliers()","description":"io.spine.server.model.AbstractHandlerMethod.attributeSuppliers","location":"server/io.spine.server.model/-abstract-handler-method/attribute-suppliers.html","searchKeys":["attributeSuppliers","Set<Function<Method, Attribute<? extends Object>>> attributeSuppliers()","io.spine.server.model.AbstractHandlerMethod.attributeSuppliers"]},{"name":"Set<I> route(EventEnvelope event)","description":"io.spine.server.entity.EventDispatchingRepository.route","location":"server/io.spine.server.entity/-event-dispatching-repository/route.html","searchKeys":["route","Set<I> route(EventEnvelope event)","io.spine.server.entity.EventDispatchingRepository.route"]},{"name":"Set<TypeName> stateTypes()","description":"io.spine.server.BoundedContext.stateTypes","location":"server/io.spine.server/-bounded-context/state-types.html","searchKeys":["stateTypes","Set<TypeName> stateTypes()","io.spine.server.BoundedContext.stateTypes"]},{"name":"Set<TypeName> stateTypes(Visibility visibility)","description":"io.spine.server.BoundedContext.stateTypes","location":"server/io.spine.server/-bounded-context/state-types.html","searchKeys":["stateTypes","Set<TypeName> stateTypes(Visibility visibility)","io.spine.server.BoundedContext.stateTypes"]},{"name":"ShardIndex indexFor(Object entityId, TypeUrl entityStateType)","description":"io.spine.server.delivery.UniformAcrossAllShards.indexFor","location":"server/io.spine.server.delivery/-uniform-across-all-shards/index-for.html","searchKeys":["indexFor","ShardIndex indexFor(Object entityId, TypeUrl entityStateType)","io.spine.server.delivery.UniformAcrossAllShards.indexFor"]},{"name":"ShardIndex shardIndex()","description":"io.spine.server.delivery.DeliveryStats.shardIndex","location":"server/io.spine.server.delivery/-delivery-stats/shard-index.html","searchKeys":["shardIndex","ShardIndex shardIndex()","io.spine.server.delivery.DeliveryStats.shardIndex"]},{"name":"ShardIndex shardIndex()","description":"io.spine.server.delivery.InboxMessageMixin.shardIndex","location":"server/io.spine.server.delivery/-inbox-message-mixin/shard-index.html","searchKeys":["shardIndex","ShardIndex shardIndex()","io.spine.server.delivery.InboxMessageMixin.shardIndex"]},{"name":"ShardIndex shardIndex()","description":"io.spine.server.delivery.ShardProcessingSession.shardIndex","location":"server/io.spine.server.delivery/-shard-processing-session/shard-index.html","searchKeys":["shardIndex","ShardIndex shardIndex()","io.spine.server.delivery.ShardProcessingSession.shardIndex"]},{"name":"ShardProcessingSession asSession(ShardSessionRecord record)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.asSession","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/as-session.html","searchKeys":["asSession","ShardProcessingSession asSession(ShardSessionRecord record)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.asSession"]},{"name":"ShardedMessageDelivery<InboxMessage> delivery()","description":"io.spine.server.delivery.Inbox.delivery","location":"server/io.spine.server.delivery/-inbox/delivery.html","searchKeys":["delivery","ShardedMessageDelivery<InboxMessage> delivery()","io.spine.server.delivery.Inbox.delivery"]},{"name":"Signal<?, ?, ?> signal()","description":"io.spine.server.entity.CommandDispatchingPhase.signal","location":"server/io.spine.server.entity/-command-dispatching-phase/signal.html","searchKeys":["signal","Signal<?, ?, ?> signal()","io.spine.server.entity.CommandDispatchingPhase.signal"]},{"name":"Signal<?, ?, ?> signal()","description":"io.spine.server.entity.EventDispatchingPhase.signal","location":"server/io.spine.server.entity/-event-dispatching-phase/signal.html","searchKeys":["signal","Signal<?, ?, ?> signal()","io.spine.server.entity.EventDispatchingPhase.signal"]},{"name":"Signal<?, ?, ?> signal()","description":"io.spine.server.trace.AbstractTracer.signal","location":"server/io.spine.server.trace/-abstract-tracer/signal.html","searchKeys":["signal","Signal<?, ?, ?> signal()","io.spine.server.trace.AbstractTracer.signal"]},{"name":"SignalId messageId()","description":"io.spine.server.entity.CommandDispatchingPhase.messageId","location":"server/io.spine.server.entity/-command-dispatching-phase/message-id.html","searchKeys":["messageId","SignalId messageId()","io.spine.server.entity.CommandDispatchingPhase.messageId"]},{"name":"SignalId messageId()","description":"io.spine.server.entity.EventDispatchingPhase.messageId","location":"server/io.spine.server.entity/-event-dispatching-phase/message-id.html","searchKeys":["messageId","SignalId messageId()","io.spine.server.entity.EventDispatchingPhase.messageId"]},{"name":"Stand.Builder setMultitenant(Boolean multitenant)","description":"io.spine.server.stand.Stand.Builder.setMultitenant","location":"server/io.spine.server.stand/-stand/-builder/set-multitenant.html","searchKeys":["setMultitenant","Stand.Builder setMultitenant(Boolean multitenant)","io.spine.server.stand.Stand.Builder.setMultitenant"]},{"name":"Stand.Builder setSystemReadSide(SystemReadSide readSide)","description":"io.spine.server.stand.Stand.Builder.setSystemReadSide","location":"server/io.spine.server.stand/-stand/-builder/set-system-read-side.html","searchKeys":["setSystemReadSide","Stand.Builder setSystemReadSide(SystemReadSide readSide)","io.spine.server.stand.Stand.Builder.setSystemReadSide"]},{"name":"Stand.Builder withSubscriptionRegistryFrom(Stand other)","description":"io.spine.server.stand.Stand.Builder.withSubscriptionRegistryFrom","location":"server/io.spine.server.stand/-stand/-builder/with-subscription-registry-from.html","searchKeys":["withSubscriptionRegistryFrom","Stand.Builder withSubscriptionRegistryFrom(Stand other)","io.spine.server.stand.Stand.Builder.withSubscriptionRegistryFrom"]},{"name":"Stand build()","description":"io.spine.server.stand.Stand.Builder.build","location":"server/io.spine.server.stand/-stand/-builder/build.html","searchKeys":["build","Stand build()","io.spine.server.stand.Stand.Builder.build"]},{"name":"Stand stand()","description":"io.spine.server.BoundedContext.stand","location":"server/io.spine.server/-bounded-context/stand.html","searchKeys":["stand","Stand stand()","io.spine.server.BoundedContext.stand"]},{"name":"StateUpdateRouting<I> route<S extends EntityState>(Class<S> stateClass, StateUpdateRoute<I, S> via)","description":"io.spine.server.route.StateUpdateRouting.route","location":"server/io.spine.server.route/-state-update-routing/route.html","searchKeys":["route","StateUpdateRouting<I> route<S extends EntityState>(Class<S> stateClass, StateUpdateRoute<I, S> via)","io.spine.server.route.StateUpdateRouting.route"]},{"name":"StorageFactory delegate()","description":"io.spine.server.storage.system.SystemAwareStorageFactory.delegate","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/delegate.html","searchKeys":["delegate","StorageFactory delegate()","io.spine.server.storage.system.SystemAwareStorageFactory.delegate"]},{"name":"StorageFactory storageFactory()","description":"io.spine.server.ServerEnvironment.storageFactory","location":"server/io.spine.server/-server-environment/storage-factory.html","searchKeys":["storageFactory","StorageFactory storageFactory()","io.spine.server.ServerEnvironment.storageFactory"]},{"name":"Stream<Event> stream()","description":"io.spine.server.entity.RecentHistory.stream","location":"server/io.spine.server.entity/-recent-history/stream.html","searchKeys":["stream","Stream<Event> stream()","io.spine.server.entity.RecentHistory.stream"]},{"name":"StreamObserver<Ack> prepareObserver(Iterable<Command> commands, StreamObserver<Ack> source)","description":"io.spine.server.commandbus.CommandBus.prepareObserver","location":"server/io.spine.server.commandbus/-command-bus/prepare-observer.html","searchKeys":["prepareObserver","StreamObserver<Ack> prepareObserver(Iterable<Command> commands, StreamObserver<Ack> source)","io.spine.server.commandbus.CommandBus.prepareObserver"]},{"name":"StreamObserver<Ack> prepareObserver(Iterable<T> messages, StreamObserver<Ack> source)","description":"io.spine.server.bus.Bus.prepareObserver","location":"server/io.spine.server.bus/-bus/prepare-observer.html","searchKeys":["prepareObserver","StreamObserver<Ack> prepareObserver(Iterable<T> messages, StreamObserver<Ack> source)","io.spine.server.bus.Bus.prepareObserver"]},{"name":"String getAggregateType()","description":"io.spine.system.server.MirrorProjection.getAggregateType","location":"server/io.spine.system.server/-mirror-projection/get-aggregate-type.html","searchKeys":["getAggregateType","String getAggregateType()","io.spine.system.server.MirrorProjection.getAggregateType"]},{"name":"String getFullName()","description":"io.spine.server.model.AbstractHandlerMethod.getFullName","location":"server/io.spine.server.model/-abstract-handler-method/get-full-name.html","searchKeys":["getFullName","String getFullName()","io.spine.server.model.AbstractHandlerMethod.getFullName"]},{"name":"String getMessage()","description":"io.spine.server.delivery.CatchUpAlreadyStartedException.getMessage","location":"server/io.spine.server.delivery/-catch-up-already-started-exception/get-message.html","searchKeys":["getMessage","String getMessage()","io.spine.server.delivery.CatchUpAlreadyStartedException.getMessage"]},{"name":"String getMessage()","description":"io.spine.server.delivery.LabelNotFoundException.getMessage","location":"server/io.spine.server.delivery/-label-not-found-exception/get-message.html","searchKeys":["getMessage","String getMessage()","io.spine.server.delivery.LabelNotFoundException.getMessage"]},{"name":"String id()","description":"io.spine.server.command.AbstractCommandDispatcher.id","location":"server/io.spine.server.command/-abstract-command-dispatcher/id.html","searchKeys":["id","String id()","io.spine.server.command.AbstractCommandDispatcher.id"]},{"name":"String idAsString()","description":"io.spine.server.entity.AbstractEntity.idAsString","location":"server/io.spine.server.entity/-abstract-entity/id-as-string.html","searchKeys":["idAsString","String idAsString()","io.spine.server.entity.AbstractEntity.idAsString"]},{"name":"String idAsString()","description":"io.spine.server.entity.Entity.idAsString","location":"server/io.spine.server.entity/-entity/id-as-string.html","searchKeys":["idAsString","String idAsString()","io.spine.server.entity.Entity.idAsString"]},{"name":"String logName()","description":"io.spine.server.DefaultRepository.logName","location":"server/io.spine.server/-default-repository/log-name.html","searchKeys":["logName","String logName()","io.spine.server.DefaultRepository.logName"]},{"name":"String missingTxMessage()","description":"io.spine.server.entity.TransactionalEntity.missingTxMessage","location":"server/io.spine.server.entity/-transactional-entity/missing-tx-message.html","searchKeys":["missingTxMessage","String missingTxMessage()","io.spine.server.entity.TransactionalEntity.missingTxMessage"]},{"name":"String missingTxMessage()","description":"io.spine.server.procman.ProcessManager.missingTxMessage","location":"server/io.spine.server.procman/-process-manager/missing-tx-message.html","searchKeys":["missingTxMessage","String missingTxMessage()","io.spine.server.procman.ProcessManager.missingTxMessage"]},{"name":"String missingTxMessage()","description":"io.spine.server.projection.Projection.missingTxMessage","location":"server/io.spine.server.projection/-projection/missing-tx-message.html","searchKeys":["missingTxMessage","String missingTxMessage()","io.spine.server.projection.Projection.missingTxMessage"]},{"name":"String parameter()","description":"io.spine.server.aggregate.model.AllowImportAttribute.parameter","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/parameter.html","searchKeys":["parameter","String parameter()","io.spine.server.aggregate.model.AllowImportAttribute.parameter"]},{"name":"String toString()","description":"io.spine.server.BoundedContext.toString","location":"server/io.spine.server/-bounded-context/to-string.html","searchKeys":["toString","String toString()","io.spine.server.BoundedContext.toString"]},{"name":"String toString()","description":"io.spine.server.ContextSpec.toString","location":"server/io.spine.server/-context-spec/to-string.html","searchKeys":["toString","String toString()","io.spine.server.ContextSpec.toString"]},{"name":"String toString()","description":"io.spine.server.aggregate.DefaultAggregatePartRepository.toString","location":"server/io.spine.server.aggregate/-default-aggregate-part-repository/to-string.html","searchKeys":["toString","String toString()","io.spine.server.aggregate.DefaultAggregatePartRepository.toString"]},{"name":"String toString()","description":"io.spine.server.aggregate.DefaultAggregateRepository.toString","location":"server/io.spine.server.aggregate/-default-aggregate-repository/to-string.html","searchKeys":["toString","String toString()","io.spine.server.aggregate.DefaultAggregateRepository.toString"]},{"name":"String toString()","description":"io.spine.server.commandbus.DelegatingCommandDispatcher.toString","location":"server/io.spine.server.commandbus/-delegating-command-dispatcher/to-string.html","searchKeys":["toString","String toString()","io.spine.server.commandbus.DelegatingCommandDispatcher.toString"]},{"name":"String toString()","description":"io.spine.server.entity.AbstractEntity.toString","location":"server/io.spine.server.entity/-abstract-entity/to-string.html","searchKeys":["toString","String toString()","io.spine.server.entity.AbstractEntity.toString"]},{"name":"String toString()","description":"io.spine.server.entity.EntityVisibility.toString","location":"server/io.spine.server.entity/-entity-visibility/to-string.html","searchKeys":["toString","String toString()","io.spine.server.entity.EntityVisibility.toString"]},{"name":"String toString()","description":"io.spine.server.entity.RecentHistory.toString","location":"server/io.spine.server.entity/-recent-history/to-string.html","searchKeys":["toString","String toString()","io.spine.server.entity.RecentHistory.toString"]},{"name":"String toString()","description":"io.spine.server.entity.storage.CompositeQueryParameter.toString","location":"server/io.spine.server.entity.storage/-composite-query-parameter/to-string.html","searchKeys":["toString","String toString()","io.spine.server.entity.storage.CompositeQueryParameter.toString"]},{"name":"String toString()","description":"io.spine.server.entity.storage.EntityQuery.toString","location":"server/io.spine.server.entity.storage/-entity-query/to-string.html","searchKeys":["toString","String toString()","io.spine.server.entity.storage.EntityQuery.toString"]},{"name":"String toString()","description":"io.spine.server.entity.storage.QueryParameters.toString","location":"server/io.spine.server.entity.storage/-query-parameters/to-string.html","searchKeys":["toString","String toString()","io.spine.server.entity.storage.QueryParameters.toString"]},{"name":"String toString()","description":"io.spine.server.event.DelegatingEventDispatcher.toString","location":"server/io.spine.server.event/-delegating-event-dispatcher/to-string.html","searchKeys":["toString","String toString()","io.spine.server.event.DelegatingEventDispatcher.toString"]},{"name":"String toString()","description":"io.spine.server.integration.IntegrationBroker.toString","location":"server/io.spine.server.integration/-integration-broker/to-string.html","searchKeys":["toString","String toString()","io.spine.server.integration.IntegrationBroker.toString"]},{"name":"String toString()","description":"io.spine.server.model.AbstractHandlerMethod.toString","location":"server/io.spine.server.model/-abstract-handler-method/to-string.html","searchKeys":["toString","String toString()","io.spine.server.model.AbstractHandlerMethod.toString"]},{"name":"String toString()","description":"io.spine.server.model.AccessModifier.toString","location":"server/io.spine.server.model/-access-modifier/to-string.html","searchKeys":["toString","String toString()","io.spine.server.model.AccessModifier.toString"]},{"name":"String toString()","description":"io.spine.server.model.ArgumentFilter.toString","location":"server/io.spine.server.model/-argument-filter/to-string.html","searchKeys":["toString","String toString()","io.spine.server.model.ArgumentFilter.toString"]},{"name":"String toString()","description":"io.spine.server.model.DispatchKey.toString","location":"server/io.spine.server.model/-dispatch-key/to-string.html","searchKeys":["toString","String toString()","io.spine.server.model.DispatchKey.toString"]},{"name":"String toString()","description":"io.spine.server.model.MethodParams.toString","location":"server/io.spine.server.model/-method-params/to-string.html","searchKeys":["toString","String toString()","io.spine.server.model.MethodParams.toString"]},{"name":"String toString()","description":"io.spine.server.model.SignatureMismatch.toString","location":"server/io.spine.server.model/-signature-mismatch/to-string.html","searchKeys":["toString","String toString()","io.spine.server.model.SignatureMismatch.toString"]},{"name":"String toString()","description":"io.spine.server.procman.DefaultProcessManagerRepository.toString","location":"server/io.spine.server.procman/-default-process-manager-repository/to-string.html","searchKeys":["toString","String toString()","io.spine.server.procman.DefaultProcessManagerRepository.toString"]},{"name":"String toString()","description":"io.spine.server.projection.DefaultProjectionRepository.toString","location":"server/io.spine.server.projection/-default-projection-repository/to-string.html","searchKeys":["toString","String toString()","io.spine.server.projection.DefaultProjectionRepository.toString"]},{"name":"String toString()","description":"io.spine.server.storage.memory.StorageSpec.toString","location":"server/io.spine.server.storage.memory/-storage-spec/to-string.html","searchKeys":["toString","String toString()","io.spine.server.storage.memory.StorageSpec.toString"]},{"name":"String toString()","description":"io.spine.server.tenant.IdInTenant.toString","location":"server/io.spine.server.tenant/-id-in-tenant/to-string.html","searchKeys":["toString","String toString()","io.spine.server.tenant.IdInTenant.toString"]},{"name":"String toString()","description":"io.spine.server.type.AbstractMessageEnvelope.toString","location":"server/io.spine.server.type/-abstract-message-envelope/to-string.html","searchKeys":["toString","String toString()","io.spine.server.type.AbstractMessageEnvelope.toString"]},{"name":"String toString()","description":"io.spine.server.type.EmptyClass.toString","location":"server/io.spine.server.type/-empty-class/to-string.html","searchKeys":["toString","String toString()","io.spine.server.type.EmptyClass.toString"]},{"name":"SubscriberMethod create(Method method, ParameterSpec<EventEnvelope> params)","description":"io.spine.server.event.model.SubscriberSignature.create","location":"server/io.spine.server.event.model/-subscriber-signature/create.html","searchKeys":["create","SubscriberMethod create(Method method, ParameterSpec<EventEnvelope> params)","io.spine.server.event.model.SubscriberSignature.create"]},{"name":"Subscriber newChannel(ChannelId id)","description":"io.spine.server.transport.SubscriberHub.newChannel","location":"server/io.spine.server.transport/-subscriber-hub/new-channel.html","searchKeys":["newChannel","Subscriber newChannel(ChannelId id)","io.spine.server.transport.SubscriberHub.newChannel"]},{"name":"Subscriber newSubscriber(ChannelId channelId)","description":"io.spine.server.transport.memory.SingleThreadInMemTransportFactory.newSubscriber","location":"server/io.spine.server.transport.memory/-single-thread-in-mem-transport-factory/new-subscriber.html","searchKeys":["newSubscriber","Subscriber newSubscriber(ChannelId channelId)","io.spine.server.transport.memory.SingleThreadInMemTransportFactory.newSubscriber"]},{"name":"Subscriber newSubscriber(ChannelId id)","description":"io.spine.server.transport.memory.InMemoryTransportFactory.newSubscriber","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/new-subscriber.html","searchKeys":["newSubscriber","Subscriber newSubscriber(ChannelId id)","io.spine.server.transport.memory.InMemoryTransportFactory.newSubscriber"]},{"name":"SubscriptionService.Builder add(BoundedContext context)","description":"io.spine.server.SubscriptionService.Builder.add","location":"server/io.spine.server/-subscription-service/-builder/add.html","searchKeys":["add","SubscriptionService.Builder add(BoundedContext context)","io.spine.server.SubscriptionService.Builder.add"]},{"name":"SubscriptionService.Builder remove(BoundedContext context)","description":"io.spine.server.SubscriptionService.Builder.remove","location":"server/io.spine.server/-subscription-service/-builder/remove.html","searchKeys":["remove","SubscriptionService.Builder remove(BoundedContext context)","io.spine.server.SubscriptionService.Builder.remove"]},{"name":"SubscriptionService build()","description":"io.spine.server.SubscriptionService.Builder.build","location":"server/io.spine.server/-subscription-service/-builder/build.html","searchKeys":["build","SubscriptionService build()","io.spine.server.SubscriptionService.Builder.build"]},{"name":"Subscription getRequest()","description":"io.spine.server.stand.InvalidSubscriptionException.getRequest","location":"server/io.spine.server.stand/-invalid-subscription-exception/get-request.html","searchKeys":["getRequest","Subscription getRequest()","io.spine.server.stand.InvalidSubscriptionException.getRequest"]},{"name":"Success fromEmpty(CommandEnvelope handledSignal)","description":"io.spine.server.command.model.CommandSubstituteMethod.fromEmpty","location":"server/io.spine.server.command.model/-command-substitute-method/from-empty.html","searchKeys":["fromEmpty","Success fromEmpty(CommandEnvelope handledSignal)","io.spine.server.command.model.CommandSubstituteMethod.fromEmpty"]},{"name":"Success fromEmpty(EventEnvelope handledSignal)","description":"io.spine.server.command.model.CommandReactionMethod.fromEmpty","location":"server/io.spine.server.command.model/-command-reaction-method/from-empty.html","searchKeys":["fromEmpty","Success fromEmpty(EventEnvelope handledSignal)","io.spine.server.command.model.CommandReactionMethod.fromEmpty"]},{"name":"Success toSuccessfulOutcome(Object rawResult, CommandHandler target, CommandEnvelope handledSignal)","description":"io.spine.server.command.model.CommandHandlerMethod.toSuccessfulOutcome","location":"server/io.spine.server.command.model/-command-handler-method/to-successful-outcome.html","searchKeys":["toSuccessfulOutcome","Success toSuccessfulOutcome(Object rawResult, CommandHandler target, CommandEnvelope handledSignal)","io.spine.server.command.model.CommandHandlerMethod.toSuccessfulOutcome"]},{"name":"Success toSuccessfulOutcome(Object rawResult, T target, E handledSignal)","description":"io.spine.server.model.CommandProducingMethod.toSuccessfulOutcome","location":"server/io.spine.server.model/-command-producing-method/to-successful-outcome.html","searchKeys":["toSuccessfulOutcome","Success toSuccessfulOutcome(Object rawResult, T target, E handledSignal)","io.spine.server.model.CommandProducingMethod.toSuccessfulOutcome"]},{"name":"Success toSuccessfulOutcome(Object rawResult, T target, E handledSignal)","description":"io.spine.server.model.EventProducingMethod.toSuccessfulOutcome","location":"server/io.spine.server.model/-event-producing-method/to-successful-outcome.html","searchKeys":["toSuccessfulOutcome","Success toSuccessfulOutcome(Object rawResult, T target, E handledSignal)","io.spine.server.model.EventProducingMethod.toSuccessfulOutcome"]},{"name":"Success toSuccessfulOutcome(Object result, T target, E handledSignal)","description":"io.spine.server.model.VoidMethod.toSuccessfulOutcome","location":"server/io.spine.server.model/-void-method/to-successful-outcome.html","searchKeys":["toSuccessfulOutcome","Success toSuccessfulOutcome(Object result, T target, E handledSignal)","io.spine.server.model.VoidMethod.toSuccessfulOutcome"]},{"name":"SystemClient createClient()","description":"io.spine.system.server.SystemContext.createClient","location":"server/io.spine.system.server/-system-context/create-client.html","searchKeys":["createClient","SystemClient createClient()","io.spine.system.server.SystemContext.createClient"]},{"name":"SystemReadSide get(TenantId tenantId)","description":"io.spine.system.server.ReadSideFunction.get","location":"server/io.spine.system.server/-read-side-function/get.html","searchKeys":["get","SystemReadSide get(TenantId tenantId)","io.spine.system.server.ReadSideFunction.get"]},{"name":"SystemSettings disableAggregateQuerying()","description":"io.spine.system.server.SystemSettings.disableAggregateQuerying","location":"server/io.spine.system.server/-system-settings/disable-aggregate-querying.html","searchKeys":["disableAggregateQuerying","SystemSettings disableAggregateQuerying()","io.spine.system.server.SystemSettings.disableAggregateQuerying"]},{"name":"SystemSettings disableCommandLog()","description":"io.spine.system.server.SystemSettings.disableCommandLog","location":"server/io.spine.system.server/-system-settings/disable-command-log.html","searchKeys":["disableCommandLog","SystemSettings disableCommandLog()","io.spine.system.server.SystemSettings.disableCommandLog"]},{"name":"SystemSettings disableParallelPosting()","description":"io.spine.system.server.SystemSettings.disableParallelPosting","location":"server/io.spine.system.server/-system-settings/disable-parallel-posting.html","searchKeys":["disableParallelPosting","SystemSettings disableParallelPosting()","io.spine.system.server.SystemSettings.disableParallelPosting"]},{"name":"SystemSettings enableAggregateQuerying()","description":"io.spine.system.server.SystemSettings.enableAggregateQuerying","location":"server/io.spine.system.server/-system-settings/enable-aggregate-querying.html","searchKeys":["enableAggregateQuerying","SystemSettings enableAggregateQuerying()","io.spine.system.server.SystemSettings.enableAggregateQuerying"]},{"name":"SystemSettings enableCommandLog()","description":"io.spine.system.server.SystemSettings.enableCommandLog","location":"server/io.spine.system.server/-system-settings/enable-command-log.html","searchKeys":["enableCommandLog","SystemSettings enableCommandLog()","io.spine.system.server.SystemSettings.enableCommandLog"]},{"name":"SystemSettings enableParallelPosting()","description":"io.spine.system.server.SystemSettings.enableParallelPosting","location":"server/io.spine.system.server/-system-settings/enable-parallel-posting.html","searchKeys":["enableParallelPosting","SystemSettings enableParallelPosting()","io.spine.system.server.SystemSettings.enableParallelPosting"]},{"name":"SystemSettings forgetEvents()","description":"io.spine.system.server.SystemSettings.forgetEvents","location":"server/io.spine.system.server/-system-settings/forget-events.html","searchKeys":["forgetEvents","SystemSettings forgetEvents()","io.spine.system.server.SystemSettings.forgetEvents"]},{"name":"SystemSettings persistEvents()","description":"io.spine.system.server.SystemSettings.persistEvents","location":"server/io.spine.system.server/-system-settings/persist-events.html","searchKeys":["persistEvents","SystemSettings persistEvents()","io.spine.system.server.SystemSettings.persistEvents"]},{"name":"SystemSettings systemFeatures()","description":"io.spine.server.BoundedContextBuilder.systemFeatures","location":"server/io.spine.server/-bounded-context-builder/system-features.html","searchKeys":["systemFeatures","SystemSettings systemFeatures()","io.spine.server.BoundedContextBuilder.systemFeatures"]},{"name":"SystemWriteSide get(TenantId tenantId)","description":"io.spine.system.server.WriteSideFunction.get","location":"server/io.spine.system.server/-write-side-function/get.html","searchKeys":["get","SystemWriteSide get(TenantId tenantId)","io.spine.system.server.WriteSideFunction.get"]},{"name":"S apply(S s)","description":"io.spine.server.procman.migration.MarkPmArchived.apply","location":"server/io.spine.server.procman.migration/-mark-pm-archived/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.procman.migration.MarkPmArchived.apply"]},{"name":"S apply(S s)","description":"io.spine.server.procman.migration.MarkPmDeleted.apply","location":"server/io.spine.server.procman.migration/-mark-pm-deleted/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.procman.migration.MarkPmDeleted.apply"]},{"name":"S apply(S s)","description":"io.spine.server.procman.migration.RemovePmFromStorage.apply","location":"server/io.spine.server.procman.migration/-remove-pm-from-storage/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.procman.migration.RemovePmFromStorage.apply"]},{"name":"S apply(S s)","description":"io.spine.server.procman.migration.UpdatePmColumns.apply","location":"server/io.spine.server.procman.migration/-update-pm-columns/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.procman.migration.UpdatePmColumns.apply"]},{"name":"S apply(S s)","description":"io.spine.server.projection.migration.MarkProjectionArchived.apply","location":"server/io.spine.server.projection.migration/-mark-projection-archived/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.projection.migration.MarkProjectionArchived.apply"]},{"name":"S apply(S s)","description":"io.spine.server.projection.migration.MarkProjectionDeleted.apply","location":"server/io.spine.server.projection.migration/-mark-projection-deleted/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.projection.migration.MarkProjectionDeleted.apply"]},{"name":"S apply(S s)","description":"io.spine.server.projection.migration.RemoveProjectionFromStorage.apply","location":"server/io.spine.server.projection.migration/-remove-projection-from-storage/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.projection.migration.RemoveProjectionFromStorage.apply"]},{"name":"S apply(S s)","description":"io.spine.server.projection.migration.UpdateProjectionColumns.apply","location":"server/io.spine.server.projection.migration/-update-projection-columns/apply.html","searchKeys":["apply","S apply(S s)","io.spine.server.projection.migration.UpdateProjectionColumns.apply"]},{"name":"S partState<S extends EntityState, A extends AggregatePart<I, S, ? extends Object, ? extends Object>>(Class<S> partStateClass)","description":"io.spine.server.aggregate.AggregateRoot.partState","location":"server/io.spine.server.aggregate/-aggregate-root/part-state.html","searchKeys":["partState","S partState<S extends EntityState, A extends AggregatePart<I, S, ? extends Object, ? extends Object>>(Class<S> partStateClass)","io.spine.server.aggregate.AggregateRoot.partState"]},{"name":"TenantId tenant()","description":"io.spine.server.delivery.InboxMessageMixin.tenant","location":"server/io.spine.server.delivery/-inbox-message-mixin/tenant.html","searchKeys":["tenant","TenantId tenant()","io.spine.server.delivery.InboxMessageMixin.tenant"]},{"name":"TenantId tenant()","description":"io.spine.server.tenant.IdInTenant.tenant","location":"server/io.spine.server.tenant/-id-in-tenant/tenant.html","searchKeys":["tenant","TenantId tenant()","io.spine.server.tenant.IdInTenant.tenant"]},{"name":"TenantId tenantId()","description":"io.spine.server.event.RejectionEnvelope.tenantId","location":"server/io.spine.server.event/-rejection-envelope/tenant-id.html","searchKeys":["tenantId","TenantId tenantId()","io.spine.server.event.RejectionEnvelope.tenantId"]},{"name":"TenantId tenantId()","description":"io.spine.server.type.CommandEnvelope.tenantId","location":"server/io.spine.server.type/-command-envelope/tenant-id.html","searchKeys":["tenantId","TenantId tenantId()","io.spine.server.type.CommandEnvelope.tenantId"]},{"name":"TenantId tenantId()","description":"io.spine.server.type.EventEnvelope.tenantId","location":"server/io.spine.server.type/-event-envelope/tenant-id.html","searchKeys":["tenantId","TenantId tenantId()","io.spine.server.type.EventEnvelope.tenantId"]},{"name":"TenantIndex tenantIndex()","description":"io.spine.server.BoundedContext.InternalAccess.tenantIndex","location":"server/io.spine.server/-bounded-context/-internal-access/tenant-index.html","searchKeys":["tenantIndex","TenantIndex tenantIndex()","io.spine.server.BoundedContext.InternalAccess.tenantIndex"]},{"name":"Throwable asThrowable()","description":"io.spine.server.aggregate.UnsupportedImportEventException.asThrowable","location":"server/io.spine.server.aggregate/-unsupported-import-event-exception/as-throwable.html","searchKeys":["asThrowable","Throwable asThrowable()","io.spine.server.aggregate.UnsupportedImportEventException.asThrowable"]},{"name":"Throwable asThrowable()","description":"io.spine.server.commandbus.CommandException.asThrowable","location":"server/io.spine.server.commandbus/-command-exception/as-throwable.html","searchKeys":["asThrowable","Throwable asThrowable()","io.spine.server.commandbus.CommandException.asThrowable"]},{"name":"Throwable asThrowable()","description":"io.spine.server.event.EventException.asThrowable","location":"server/io.spine.server.event/-event-exception/as-throwable.html","searchKeys":["asThrowable","Throwable asThrowable()","io.spine.server.event.EventException.asThrowable"]},{"name":"Throwable asThrowable()","description":"io.spine.server.integration.UnsupportedExternalMessageException.asThrowable","location":"server/io.spine.server.integration/-unsupported-external-message-exception/as-throwable.html","searchKeys":["asThrowable","Throwable asThrowable()","io.spine.server.integration.UnsupportedExternalMessageException.asThrowable"]},{"name":"Throwable asThrowable()","description":"io.spine.server.stand.InvalidRequestException.asThrowable","location":"server/io.spine.server.stand/-invalid-request-exception/as-throwable.html","searchKeys":["asThrowable","Throwable asThrowable()","io.spine.server.stand.InvalidRequestException.asThrowable"]},{"name":"Timestamp whenModified()","description":"io.spine.server.entity.AbstractEntity.whenModified","location":"server/io.spine.server.entity/-abstract-entity/when-modified.html","searchKeys":["whenModified","Timestamp whenModified()","io.spine.server.entity.AbstractEntity.whenModified"]},{"name":"Topic getRequest()","description":"io.spine.server.stand.InvalidTopicException.getRequest","location":"server/io.spine.server.stand/-invalid-topic-exception/get-request.html","searchKeys":["getRequest","Topic getRequest()","io.spine.server.stand.InvalidTopicException.getRequest"]},{"name":"Transaction<I, ? extends TransactionalEntity<I, S, B>, S, B> tx()","description":"io.spine.server.entity.TransactionalEntity.tx","location":"server/io.spine.server.entity/-transactional-entity/tx.html","searchKeys":["tx","Transaction<I, ? extends TransactionalEntity<I, S, B>, S, B> tx()","io.spine.server.entity.TransactionalEntity.tx"]},{"name":"Transaction<I, ? extends TransactionalEntity<I, S, B>, S, B> tx()","description":"io.spine.server.procman.ProcessManager.tx","location":"server/io.spine.server.procman/-process-manager/tx.html","searchKeys":["tx","Transaction<I, ? extends TransactionalEntity<I, S, B>, S, B> tx()","io.spine.server.procman.ProcessManager.tx"]},{"name":"Transaction<I, P, S, ? extends Object> startTransaction(P entity)","description":"io.spine.server.procman.ProcessManagerMigration.startTransaction","location":"server/io.spine.server.procman/-process-manager-migration/start-transaction.html","searchKeys":["startTransaction","Transaction<I, P, S, ? extends Object> startTransaction(P entity)","io.spine.server.procman.ProcessManagerMigration.startTransaction"]},{"name":"Transaction<I, P, S, ? extends Object> startTransaction(P entity)","description":"io.spine.server.projection.ProjectionMigration.startTransaction","location":"server/io.spine.server.projection/-projection-migration/start-transaction.html","searchKeys":["startTransaction","Transaction<I, P, S, ? extends Object> startTransaction(P entity)","io.spine.server.projection.ProjectionMigration.startTransaction"]},{"name":"TransportFactory transportFactory()","description":"io.spine.server.ServerEnvironment.transportFactory","location":"server/io.spine.server/-server-environment/transport-factory.html","searchKeys":["transportFactory","TransportFactory transportFactory()","io.spine.server.ServerEnvironment.transportFactory"]},{"name":"TypeName messageTypeName()","description":"io.spine.server.type.CommandEnvelope.messageTypeName","location":"server/io.spine.server.type/-command-envelope/message-type-name.html","searchKeys":["messageTypeName","TypeName messageTypeName()","io.spine.server.type.CommandEnvelope.messageTypeName"]},{"name":"TypeName messageTypeName()","description":"io.spine.server.type.EventEnvelope.messageTypeName","location":"server/io.spine.server.type/-event-envelope/message-type-name.html","searchKeys":["messageTypeName","TypeName messageTypeName()","io.spine.server.type.EventEnvelope.messageTypeName"]},{"name":"TypeUrl entityStateType()","description":"io.spine.server.delivery.Inbox.entityStateType","location":"server/io.spine.server.delivery/-inbox/entity-state-type.html","searchKeys":["entityStateType","TypeUrl entityStateType()","io.spine.server.delivery.Inbox.entityStateType"]},{"name":"TypeUrl entityStateType()","description":"io.spine.server.entity.StorageConverter.entityStateType","location":"server/io.spine.server.entity/-storage-converter/entity-state-type.html","searchKeys":["entityStateType","TypeUrl entityStateType()","io.spine.server.entity.StorageConverter.entityStateType"]},{"name":"TypeUrl entityStateUrl()","description":"io.spine.server.storage.memory.StorageSpec.entityStateUrl","location":"server/io.spine.server.storage.memory/-storage-spec/entity-state-url.html","searchKeys":["entityStateUrl","TypeUrl entityStateUrl()","io.spine.server.storage.memory.StorageSpec.entityStateUrl"]},{"name":"TypeUrl entityType()","description":"io.spine.system.server.event.EntityLifecycleEvent.entityType","location":"server/io.spine.system.server.event/-entity-lifecycle-event/entity-type.html","searchKeys":["entityType","TypeUrl entityType()","io.spine.system.server.event.EntityLifecycleEvent.entityType"]},{"name":"TypeUrl getEntityStateUrl()","description":"io.spine.server.storage.memory.StorageSpec.getEntityStateUrl","location":"server/io.spine.server.storage.memory/-storage-spec/get-entity-state-url.html","searchKeys":["getEntityStateUrl","TypeUrl getEntityStateUrl()","io.spine.server.storage.memory.StorageSpec.getEntityStateUrl"]},{"name":"TypeUrl projectionStateType()","description":"io.spine.server.delivery.CatchUpAlreadyStartedException.projectionStateType","location":"server/io.spine.server.delivery/-catch-up-already-started-exception/projection-state-type.html","searchKeys":["projectionStateType","TypeUrl projectionStateType()","io.spine.server.delivery.CatchUpAlreadyStartedException.projectionStateType"]},{"name":"TypeUrl targetType()","description":"io.spine.server.transport.MessageChannel.targetType","location":"server/io.spine.server.transport/-message-channel/target-type.html","searchKeys":["targetType","TypeUrl targetType()","io.spine.server.transport.MessageChannel.targetType"]},{"name":"TypeUrl typeUrl()","description":"io.spine.server.type.EventEnvelope.typeUrl","location":"server/io.spine.server.type/-event-envelope/type-url.html","searchKeys":["typeUrl","TypeUrl typeUrl()","io.spine.server.type.EventEnvelope.typeUrl"]},{"name":"T apply(Empty input)","description":"io.spine.server.tenant.TenantAwareFunction0.apply","location":"server/io.spine.server.tenant/-tenant-aware-function0/apply.html","searchKeys":["apply","T apply(Empty input)","io.spine.server.tenant.TenantAwareFunction0.apply"]},{"name":"T evaluate<T>(Supplier<T> operation)","description":"io.spine.server.tenant.TenantAwareRunner.evaluate","location":"server/io.spine.server.tenant/-tenant-aware-runner/evaluate.html","searchKeys":["evaluate","T evaluate<T>(Supplier<T> operation)","io.spine.server.tenant.TenantAwareRunner.evaluate"]},{"name":"T execute()","description":"io.spine.server.tenant.TenantAwareFunction0.execute","location":"server/io.spine.server.tenant/-tenant-aware-function0/execute.html","searchKeys":["execute","T execute()","io.spine.server.tenant.TenantAwareFunction0.execute"]},{"name":"T execute()","description":"io.spine.server.tenant.TenantFunction.execute","location":"server/io.spine.server.tenant/-tenant-function/execute.html","searchKeys":["execute","T execute()","io.spine.server.tenant.TenantFunction.execute"]},{"name":"T execute(F input)","description":"io.spine.server.tenant.TenantAwareFunction.execute","location":"server/io.spine.server.tenant/-tenant-aware-function/execute.html","searchKeys":["execute","T execute(F input)","io.spine.server.tenant.TenantAwareFunction.execute"]},{"name":"T outerObject()","description":"io.spine.server.type.AbstractMessageEnvelope.outerObject","location":"server/io.spine.server.type/-abstract-message-envelope/outer-object.html","searchKeys":["outerObject","T outerObject()","io.spine.server.type.AbstractMessageEnvelope.outerObject"]},{"name":"ValueMismatch expectedDefault(Message actual, Message newValue)","description":"io.spine.server.command.CommandHandlingEntity.expectedDefault","location":"server/io.spine.server.command/-command-handling-entity/expected-default.html","searchKeys":["expectedDefault","ValueMismatch expectedDefault(Message actual, Message newValue)","io.spine.server.command.CommandHandlingEntity.expectedDefault"]},{"name":"ValueMismatch expectedEmpty(String actual, String newValue)","description":"io.spine.server.command.CommandHandlingEntity.expectedEmpty","location":"server/io.spine.server.command/-command-handling-entity/expected-empty.html","searchKeys":["expectedEmpty","ValueMismatch expectedEmpty(String actual, String newValue)","io.spine.server.command.CommandHandlingEntity.expectedEmpty"]},{"name":"ValueMismatch expectedNotDefault(Message expected)","description":"io.spine.server.command.CommandHandlingEntity.expectedNotDefault","location":"server/io.spine.server.command/-command-handling-entity/expected-not-default.html","searchKeys":["expectedNotDefault","ValueMismatch expectedNotDefault(Message expected)","io.spine.server.command.CommandHandlingEntity.expectedNotDefault"]},{"name":"ValueMismatch expectedNotDefault(Message expected, Message newValue)","description":"io.spine.server.command.CommandHandlingEntity.expectedNotDefault","location":"server/io.spine.server.command/-command-handling-entity/expected-not-default.html","searchKeys":["expectedNotDefault","ValueMismatch expectedNotDefault(Message expected, Message newValue)","io.spine.server.command.CommandHandlingEntity.expectedNotDefault"]},{"name":"ValueMismatch expectedNotEmpty(String expected)","description":"io.spine.server.command.CommandHandlingEntity.expectedNotEmpty","location":"server/io.spine.server.command/-command-handling-entity/expected-not-empty.html","searchKeys":["expectedNotEmpty","ValueMismatch expectedNotEmpty(String expected)","io.spine.server.command.CommandHandlingEntity.expectedNotEmpty"]},{"name":"ValueMismatch unexpectedValue(Message expected, Message actual, Message newValue)","description":"io.spine.server.command.CommandHandlingEntity.unexpectedValue","location":"server/io.spine.server.command/-command-handling-entity/unexpected-value.html","searchKeys":["unexpectedValue","ValueMismatch unexpectedValue(Message expected, Message actual, Message newValue)","io.spine.server.command.CommandHandlingEntity.unexpectedValue"]},{"name":"ValueMismatch unexpectedValue(String expected, String actual, String newValue)","description":"io.spine.server.command.CommandHandlingEntity.unexpectedValue","location":"server/io.spine.server.command/-command-handling-entity/unexpected-value.html","searchKeys":["unexpectedValue","ValueMismatch unexpectedValue(String expected, String actual, String newValue)","io.spine.server.command.CommandHandlingEntity.unexpectedValue"]},{"name":"VersionIncrement createVersionIncrement(EventEnvelope event)","description":"io.spine.server.aggregate.AggregateTransaction.createVersionIncrement","location":"server/io.spine.server.aggregate/-aggregate-transaction/create-version-increment.html","searchKeys":["createVersionIncrement","VersionIncrement createVersionIncrement(EventEnvelope event)","io.spine.server.aggregate.AggregateTransaction.createVersionIncrement"]},{"name":"VersionIncrement createVersionIncrement(EventEnvelope ignored)","description":"io.spine.server.projection.ProjectionTransaction.createVersionIncrement","location":"server/io.spine.server.projection/-projection-transaction/create-version-increment.html","searchKeys":["createVersionIncrement","VersionIncrement createVersionIncrement(EventEnvelope ignored)","io.spine.server.projection.ProjectionTransaction.createVersionIncrement"]},{"name":"Version getVersion()","description":"io.spine.server.entity.HasVersionColumn.getVersion","location":"server/io.spine.server.entity/-has-version-column/get-version.html","searchKeys":["getVersion","Version getVersion()","io.spine.server.entity.HasVersionColumn.getVersion"]},{"name":"Version version()","description":"io.spine.server.command.AbstractCommandHandler.version","location":"server/io.spine.server.command/-abstract-command-handler/version.html","searchKeys":["version","Version version()","io.spine.server.command.AbstractCommandHandler.version"]},{"name":"Version version()","description":"io.spine.server.command.AbstractCommander.version","location":"server/io.spine.server.command/-abstract-commander/version.html","searchKeys":["version","Version version()","io.spine.server.command.AbstractCommander.version"]},{"name":"Version version()","description":"io.spine.server.entity.AbstractEntity.version","location":"server/io.spine.server.entity/-abstract-entity/version.html","searchKeys":["version","Version version()","io.spine.server.entity.AbstractEntity.version"]},{"name":"Version version()","description":"io.spine.server.event.AbstractEventReactor.version","location":"server/io.spine.server.event/-abstract-event-reactor/version.html","searchKeys":["version","Version version()","io.spine.server.event.AbstractEventReactor.version"]},{"name":"WorkerId currentWorkerFor(NodeId node)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.currentWorkerFor","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/current-worker-for.html","searchKeys":["currentWorkerFor","WorkerId currentWorkerFor(NodeId node)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.currentWorkerFor"]},{"name":"abstract Ack publish(Any id, ExternalMessage message)","description":"io.spine.server.transport.Publisher.publish","location":"server/io.spine.server.transport/-publisher/publish.html","searchKeys":["publish","abstract Ack publish(Any id, ExternalMessage message)","io.spine.server.transport.Publisher.publish"]},{"name":"abstract AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ? extends Object, ? extends Object>> aggregateClass)","description":"io.spine.server.storage.StorageFactory.createAggregateStorage","location":"server/io.spine.server.storage/-storage-factory/create-aggregate-storage.html","searchKeys":["createAggregateStorage","abstract AggregateStorage<I> createAggregateStorage<I>(ContextSpec context, Class<? extends Aggregate<I, ? extends Object, ? extends Object>> aggregateClass)","io.spine.server.storage.StorageFactory.createAggregateStorage"]},{"name":"abstract AllowedParams<E> params()","description":"io.spine.server.model.MethodSignature.params","location":"server/io.spine.server.model/-method-signature/params.html","searchKeys":["params","abstract AllowedParams<E> params()","io.spine.server.model.MethodSignature.params"]},{"name":"abstract Any getEntityId()","description":"io.spine.server.entity.rejection.StandardRejection.getEntityId","location":"server/io.spine.server.entity.rejection/-standard-rejection/get-entity-id.html","searchKeys":["getEntityId","abstract Any getEntityId()","io.spine.server.entity.rejection.StandardRejection.getEntityId"]},{"name":"abstract Any producerId()","description":"io.spine.server.EventProducer.producerId","location":"server/io.spine.server/-event-producer/producer-id.html","searchKeys":["producerId","abstract Any producerId()","io.spine.server.EventProducer.producerId"]},{"name":"abstract Api at(Level level)","description":"io.spine.server.log.LoggingEntity.at","location":"server/io.spine.server.log/-logging-entity/at.html","searchKeys":["at","abstract Api at(Level level)","io.spine.server.log.LoggingEntity.at"]},{"name":"abstract ArgumentFilter createFilter()","description":"io.spine.server.event.model.SubscriberMethod.createFilter","location":"server/io.spine.server.event.model/-subscriber-method/create-filter.html","searchKeys":["createFilter","abstract ArgumentFilter createFilter()","io.spine.server.event.model.SubscriberMethod.createFilter"]},{"name":"abstract ArgumentFilter filter()","description":"io.spine.server.model.SelectiveHandler.filter","location":"server/io.spine.server.model/-selective-handler/filter.html","searchKeys":["filter","abstract ArgumentFilter filter()","io.spine.server.model.SelectiveHandler.filter"]},{"name":"abstract Array<Object> extractArguments(E envelope)","description":"io.spine.server.model.ParameterSpec.extractArguments","location":"server/io.spine.server.model/-parameter-spec/extract-arguments.html","searchKeys":["extractArguments","abstract Array<Object> extractArguments(E envelope)","io.spine.server.model.ParameterSpec.extractArguments"]},{"name":"abstract BatchDispatchOutcome play(Iterable<Event> events)","description":"io.spine.server.entity.EventPlayer.play","location":"server/io.spine.server.entity/-event-player/play.html","searchKeys":["play","abstract BatchDispatchOutcome play(Iterable<Event> events)","io.spine.server.entity.EventPlayer.play"]},{"name":"abstract Bus<? extends Object, E, ? extends Object, ? extends Object> build()","description":"io.spine.server.bus.BusBuilder.build","location":"server/io.spine.server.bus/-bus-builder/build.html","searchKeys":["build","abstract Bus<? extends Object, E, ? extends Object, ? extends Object> build()","io.spine.server.bus.BusBuilder.build"]},{"name":"abstract B newStateBuilderWith(I id)","description":"io.spine.server.event.AbstractStatefulReactor.newStateBuilderWith","location":"server/io.spine.server.event/-abstract-stateful-reactor/new-state-builder-with.html","searchKeys":["newStateBuilderWith","abstract B newStateBuilderWith(I id)","io.spine.server.event.AbstractStatefulReactor.newStateBuilderWith"]},{"name":"abstract B self()","description":"io.spine.server.bus.BusBuilder.self","location":"server/io.spine.server.bus/-bus-builder/self.html","searchKeys":["self","abstract B self()","io.spine.server.bus.BusBuilder.self"]},{"name":"abstract CatchUpId getId()","description":"io.spine.server.delivery.CatchUpSignal.getId","location":"server/io.spine.server.delivery/-catch-up-signal/get-id.html","searchKeys":["getId","abstract CatchUpId getId()","io.spine.server.delivery.CatchUpSignal.getId"]},{"name":"abstract CatchUpStorage createCatchUpStorage(boolean multitenant)","description":"io.spine.server.storage.StorageFactory.createCatchUpStorage","location":"server/io.spine.server.storage/-storage-factory/create-catch-up-storage.html","searchKeys":["createCatchUpStorage","abstract CatchUpStorage createCatchUpStorage(boolean multitenant)","io.spine.server.storage.StorageFactory.createCatchUpStorage"]},{"name":"abstract ChannelId id()","description":"io.spine.server.transport.MessageChannel.id","location":"server/io.spine.server.transport/-message-channel/id.html","searchKeys":["id","abstract ChannelId id()","io.spine.server.transport.MessageChannel.id"]},{"name":"abstract Class<? extends Object> type()","description":"io.spine.server.entity.storage.Column.type","location":"server/io.spine.server.entity.storage/-column/type.html","searchKeys":["type","abstract Class<? extends Object> type()","io.spine.server.entity.storage.Column.type"]},{"name":"abstract ColumnName name()","description":"io.spine.server.entity.storage.Column.name","location":"server/io.spine.server.entity.storage/-column/name.html","searchKeys":["name","abstract ColumnName name()","io.spine.server.entity.storage.Column.name"]},{"name":"abstract ColumnTypeMapping<? extends Object, ? extends R> ofNull()","description":"io.spine.server.entity.storage.ColumnMapping.ofNull","location":"server/io.spine.server.entity.storage/-column-mapping/of-null.html","searchKeys":["ofNull","abstract ColumnTypeMapping<? extends Object, ? extends R> ofNull()","io.spine.server.entity.storage.ColumnMapping.ofNull"]},{"name":"abstract ColumnTypeMapping<Boolean, ? extends R> ofBoolean()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofBoolean","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-boolean.html","searchKeys":["ofBoolean","abstract ColumnTypeMapping<Boolean, ? extends R> ofBoolean()","io.spine.server.entity.storage.AbstractColumnMapping.ofBoolean"]},{"name":"abstract ColumnTypeMapping<ByteString, ? extends R> ofByteString()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofByteString","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-byte-string.html","searchKeys":["ofByteString","abstract ColumnTypeMapping<ByteString, ? extends R> ofByteString()","io.spine.server.entity.storage.AbstractColumnMapping.ofByteString"]},{"name":"abstract ColumnTypeMapping<Double, ? extends R> ofDouble()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofDouble","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-double.html","searchKeys":["ofDouble","abstract ColumnTypeMapping<Double, ? extends R> ofDouble()","io.spine.server.entity.storage.AbstractColumnMapping.ofDouble"]},{"name":"abstract ColumnTypeMapping<Enum<? extends Object>, ? extends R> ofEnum()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofEnum","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-enum.html","searchKeys":["ofEnum","abstract ColumnTypeMapping<Enum<? extends Object>, ? extends R> ofEnum()","io.spine.server.entity.storage.AbstractColumnMapping.ofEnum"]},{"name":"abstract ColumnTypeMapping<Float, ? extends R> ofFloat()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofFloat","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-float.html","searchKeys":["ofFloat","abstract ColumnTypeMapping<Float, ? extends R> ofFloat()","io.spine.server.entity.storage.AbstractColumnMapping.ofFloat"]},{"name":"abstract ColumnTypeMapping<Integer, ? extends R> ofInteger()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofInteger","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-integer.html","searchKeys":["ofInteger","abstract ColumnTypeMapping<Integer, ? extends R> ofInteger()","io.spine.server.entity.storage.AbstractColumnMapping.ofInteger"]},{"name":"abstract ColumnTypeMapping<Long, ? extends R> ofLong()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofLong","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-long.html","searchKeys":["ofLong","abstract ColumnTypeMapping<Long, ? extends R> ofLong()","io.spine.server.entity.storage.AbstractColumnMapping.ofLong"]},{"name":"abstract ColumnTypeMapping<Message, ? extends R> ofMessage()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofMessage","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-message.html","searchKeys":["ofMessage","abstract ColumnTypeMapping<Message, ? extends R> ofMessage()","io.spine.server.entity.storage.AbstractColumnMapping.ofMessage"]},{"name":"abstract ColumnTypeMapping<String, ? extends R> ofString()","description":"io.spine.server.entity.storage.AbstractColumnMapping.ofString","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/of-string.html","searchKeys":["ofString","abstract ColumnTypeMapping<String, ? extends R> ofString()","io.spine.server.entity.storage.AbstractColumnMapping.ofString"]},{"name":"abstract ColumnTypeMapping<T, ? extends R> of<T>(Class<T> type)","description":"io.spine.server.entity.storage.ColumnMapping.of","location":"server/io.spine.server.entity.storage/-column-mapping/of.html","searchKeys":["of","abstract ColumnTypeMapping<T, ? extends R> of<T>(Class<T> type)","io.spine.server.entity.storage.ColumnMapping.of"]},{"name":"abstract Constructor<E> constructor()","description":"io.spine.server.entity.EntityFactory.constructor","location":"server/io.spine.server.entity/-entity-factory/constructor.html","searchKeys":["constructor","abstract Constructor<E> constructor()","io.spine.server.entity.EntityFactory.constructor"]},{"name":"abstract Constructor<E> findConstructor()","description":"io.spine.server.entity.model.AbstractEntityFactory.findConstructor","location":"server/io.spine.server.entity.model/-abstract-entity-factory/find-constructor.html","searchKeys":["findConstructor","abstract Constructor<E> findConstructor()","io.spine.server.entity.model.AbstractEntityFactory.findConstructor"]},{"name":"abstract C context()","description":"io.spine.server.type.MessageEnvelope.context","location":"server/io.spine.server.type/-message-envelope/context.html","searchKeys":["context","abstract C context()","io.spine.server.type.MessageEnvelope.context"]},{"name":"abstract C messageClass()","description":"io.spine.server.model.HandlerMethod.messageClass","location":"server/io.spine.server.model/-handler-method/message-class.html","searchKeys":["messageClass","abstract C messageClass()","io.spine.server.model.HandlerMethod.messageClass"]},{"name":"abstract C newChannel(ChannelId id)","description":"io.spine.server.transport.ChannelHub.newChannel","location":"server/io.spine.server.transport/-channel-hub/new-channel.html","searchKeys":["newChannel","abstract C newChannel(ChannelId id)","io.spine.server.transport.ChannelHub.newChannel"]},{"name":"abstract DeadMessageHandler<E> deadMessageHandler()","description":"io.spine.server.bus.Bus.deadMessageHandler","location":"server/io.spine.server.bus/-bus/dead-message-handler.html","searchKeys":["deadMessageHandler","abstract DeadMessageHandler<E> deadMessageHandler()","io.spine.server.bus.Bus.deadMessageHandler"]},{"name":"abstract DispatchOutcome dispatch(E entity, EventEnvelope event)","description":"io.spine.server.entity.EventPlayingTransaction.dispatch","location":"server/io.spine.server.entity/-event-playing-transaction/dispatch.html","searchKeys":["dispatch","abstract DispatchOutcome dispatch(E entity, EventEnvelope event)","io.spine.server.entity.EventPlayingTransaction.dispatch"]},{"name":"abstract DispatchOutcome dispatchCommand(CommandEnvelope cmd)","description":"io.spine.server.command.CommandHandlingEntity.dispatchCommand","location":"server/io.spine.server.command/-command-handling-entity/dispatch-command.html","searchKeys":["dispatchCommand","abstract DispatchOutcome dispatchCommand(CommandEnvelope cmd)","io.spine.server.command.CommandHandlingEntity.dispatchCommand"]},{"name":"abstract DispatchOutcome invoke(T target, E envelope)","description":"io.spine.server.model.HandlerMethod.invoke","location":"server/io.spine.server.model/-handler-method/invoke.html","searchKeys":["invoke","abstract DispatchOutcome invoke(T target, E envelope)","io.spine.server.model.HandlerMethod.invoke"]},{"name":"abstract DispatchOutcome invokeDispatcher(E entity)","description":"io.spine.server.entity.EntityMessageEndpoint.invokeDispatcher","location":"server/io.spine.server.entity/-entity-message-endpoint/invoke-dispatcher.html","searchKeys":["invokeDispatcher","abstract DispatchOutcome invokeDispatcher(E entity)","io.spine.server.entity.EntityMessageEndpoint.invokeDispatcher"]},{"name":"abstract DispatchOutcome performDispatch()","description":"io.spine.server.entity.Phase.performDispatch","location":"server/io.spine.server.entity/-phase/perform-dispatch.html","searchKeys":["performDispatch","abstract DispatchOutcome performDispatch()","io.spine.server.entity.Phase.performDispatch"]},{"name":"abstract DispatcherRegistry<C, E, D> newRegistry()","description":"io.spine.server.bus.BusBuilder.newRegistry","location":"server/io.spine.server.bus/-bus-builder/new-registry.html","searchKeys":["newRegistry","abstract DispatcherRegistry<C, E, D> newRegistry()","io.spine.server.bus.BusBuilder.newRegistry"]},{"name":"abstract Enricher build()","description":"io.spine.server.enrich.EnricherBuilder.build","location":"server/io.spine.server.enrich/-enricher-builder/build.html","searchKeys":["build","abstract Enricher build()","io.spine.server.enrich.EnricherBuilder.build"]},{"name":"abstract EntityClass<? extends Object> entityModelClass()","description":"io.spine.server.DefaultRepository.entityModelClass","location":"server/io.spine.server/-default-repository/entity-model-class.html","searchKeys":["entityModelClass","abstract EntityClass<? extends Object> entityModelClass()","io.spine.server.DefaultRepository.entityModelClass"]},{"name":"abstract EntityFactory<E> entityFactory()","description":"io.spine.server.entity.RecordBasedRepository.entityFactory","location":"server/io.spine.server.entity/-record-based-repository/entity-factory.html","searchKeys":["entityFactory","abstract EntityFactory<E> entityFactory()","io.spine.server.entity.RecordBasedRepository.entityFactory"]},{"name":"abstract EntityTypeName getEntityType()","description":"io.spine.system.server.event.SignalDispatchedMixin.getEntityType","location":"server/io.spine.system.server.event/-signal-dispatched-mixin/get-entity-type.html","searchKeys":["getEntityType","abstract EntityTypeName getEntityType()","io.spine.system.server.event.SignalDispatchedMixin.getEntityType"]},{"name":"abstract EnvelopeValidator<E> validator()","description":"io.spine.server.bus.Bus.validator","location":"server/io.spine.server.bus/-bus/validator.html","searchKeys":["validator","abstract EnvelopeValidator<E> validator()","io.spine.server.bus.Bus.validator"]},{"name":"abstract Error asError()","description":"io.spine.server.MessageError.asError","location":"server/io.spine.server/-message-error/as-error.html","searchKeys":["asError","abstract Error asError()","io.spine.server.MessageError.asError"]},{"name":"abstract EventBus eventBus()","description":"io.spine.server.entity.EventProducingRepository.eventBus","location":"server/io.spine.server.entity/-event-producing-repository/event-bus.html","searchKeys":["eventBus","abstract EventBus eventBus()","io.spine.server.entity.EventProducingRepository.eventBus"]},{"name":"abstract EventFilter eventFilter()","description":"io.spine.server.entity.EventProducingRepository.eventFilter","location":"server/io.spine.server.entity/-event-producing-repository/event-filter.html","searchKeys":["eventFilter","abstract EventFilter eventFilter()","io.spine.server.entity.EventProducingRepository.eventFilter"]},{"name":"abstract EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.ReactingClass.reactorOf","location":"server/io.spine.server.event.model/-reacting-class/reactor-of.html","searchKeys":["reactorOf","abstract EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.ReactingClass.reactorOf"]},{"name":"abstract Event postEvent(EventMessage systemEvent, Origin origin)","description":"io.spine.system.server.SystemWriteSide.postEvent","location":"server/io.spine.system.server/-system-write-side/post-event.html","searchKeys":["postEvent","abstract Event postEvent(EventMessage systemEvent, Origin origin)","io.spine.system.server.SystemWriteSide.postEvent"]},{"name":"abstract E create(I id)","description":"io.spine.server.entity.Repository.create","location":"server/io.spine.server.entity/-repository/create.html","searchKeys":["create","abstract E create(I id)","io.spine.server.entity.Repository.create"]},{"name":"abstract E create(Object constructionArgument)","description":"io.spine.server.entity.EntityFactory.create","location":"server/io.spine.server.entity/-entity-factory/create.html","searchKeys":["create","abstract E create(Object constructionArgument)","io.spine.server.entity.EntityFactory.create"]},{"name":"abstract E toEnriched(EnrichmentService<M, C> service)","description":"io.spine.server.type.EnrichableMessageEnvelope.toEnriched","location":"server/io.spine.server.type/-enrichable-message-envelope/to-enriched.html","searchKeys":["toEnriched","abstract E toEnriched(EnrichmentService<M, C> service)","io.spine.server.type.EnrichableMessageEnvelope.toEnriched"]},{"name":"abstract E toEnvelope(T message)","description":"io.spine.server.bus.Bus.toEnvelope","location":"server/io.spine.server.bus/-bus/to-envelope.html","searchKeys":["toEnvelope","abstract E toEnvelope(T message)","io.spine.server.bus.Bus.toEnvelope"]},{"name":"abstract H create(Method method, ParameterSpec<E> params)","description":"io.spine.server.model.MethodSignature.create","location":"server/io.spine.server.model/-method-signature/create.html","searchKeys":["create","abstract H create(Method method, ParameterSpec<E> params)","io.spine.server.model.MethodSignature.create"]},{"name":"abstract H handlerOf(CommandClass commandClass)","description":"io.spine.server.command.model.CommandHandlingClass.handlerOf","location":"server/io.spine.server.command.model/-command-handling-class/handler-of.html","searchKeys":["handlerOf","abstract H handlerOf(CommandClass commandClass)","io.spine.server.command.model.CommandHandlingClass.handlerOf"]},{"name":"abstract ImmutableList<M> contents()","description":"io.spine.server.delivery.Page.contents","location":"server/io.spine.server.delivery/-page/contents.html","searchKeys":["contents","abstract ImmutableList<M> contents()","io.spine.server.delivery.Page.contents"]},{"name":"abstract ImmutableSet<C> messageClasses()","description":"io.spine.server.bus.MessageDispatcher.messageClasses","location":"server/io.spine.server.bus/-message-dispatcher/message-classes.html","searchKeys":["messageClasses","abstract ImmutableSet<C> messageClasses()","io.spine.server.bus.MessageDispatcher.messageClasses"]},{"name":"abstract ImmutableSet<CommandClass> commandClasses()","description":"io.spine.server.commandbus.CommandDispatcherDelegate.commandClasses","location":"server/io.spine.server.commandbus/-command-dispatcher-delegate/command-classes.html","searchKeys":["commandClasses","abstract ImmutableSet<CommandClass> commandClasses()","io.spine.server.commandbus.CommandDispatcherDelegate.commandClasses"]},{"name":"abstract ImmutableSet<CommandClass> commands()","description":"io.spine.server.command.model.CommandHandlingClass.commands","location":"server/io.spine.server.command.model/-command-handling-class/commands.html","searchKeys":["commands","abstract ImmutableSet<CommandClass> commands()","io.spine.server.command.model.CommandHandlingClass.commands"]},{"name":"abstract ImmutableSet<CommandClass> outgoingCommands()","description":"io.spine.server.command.model.CommandingClass.outgoingCommands","location":"server/io.spine.server.command.model/-commanding-class/outgoing-commands.html","searchKeys":["outgoingCommands","abstract ImmutableSet<CommandClass> outgoingCommands()","io.spine.server.command.model.CommandingClass.outgoingCommands"]},{"name":"abstract ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.event.EventDispatcher.domesticEventClasses","location":"server/io.spine.server.event/-event-dispatcher/domestic-event-classes.html","searchKeys":["domesticEventClasses","abstract ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.event.EventDispatcher.domesticEventClasses"]},{"name":"abstract ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.event.EventDispatcherDelegate.domesticEvents","location":"server/io.spine.server.event/-event-dispatcher-delegate/domestic-events.html","searchKeys":["domesticEvents","abstract ImmutableSet<EventClass> domesticEvents()","io.spine.server.event.EventDispatcherDelegate.domesticEvents"]},{"name":"abstract ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.event.model.EventReceiverClass.domesticEvents","location":"server/io.spine.server.event.model/-event-receiver-class/domestic-events.html","searchKeys":["domesticEvents","abstract ImmutableSet<EventClass> domesticEvents()","io.spine.server.event.model.EventReceiverClass.domesticEvents"]},{"name":"abstract ImmutableSet<EventClass> events()","description":"io.spine.server.event.EventDispatcherDelegate.events","location":"server/io.spine.server.event/-event-dispatcher-delegate/events.html","searchKeys":["events","abstract ImmutableSet<EventClass> events()","io.spine.server.event.EventDispatcherDelegate.events"]},{"name":"abstract ImmutableSet<EventClass> events()","description":"io.spine.server.event.model.EventReceiverClass.events","location":"server/io.spine.server.event.model/-event-receiver-class/events.html","searchKeys":["events","abstract ImmutableSet<EventClass> events()","io.spine.server.event.model.EventReceiverClass.events"]},{"name":"abstract ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.event.EventDispatcher.externalEventClasses","location":"server/io.spine.server.event/-event-dispatcher/external-event-classes.html","searchKeys":["externalEventClasses","abstract ImmutableSet<EventClass> externalEventClasses()","io.spine.server.event.EventDispatcher.externalEventClasses"]},{"name":"abstract ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.event.EventDispatcherDelegate.externalEvents","location":"server/io.spine.server.event/-event-dispatcher-delegate/external-events.html","searchKeys":["externalEvents","abstract ImmutableSet<EventClass> externalEvents()","io.spine.server.event.EventDispatcherDelegate.externalEvents"]},{"name":"abstract ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.event.model.EventReceiverClass.externalEvents","location":"server/io.spine.server.event.model/-event-receiver-class/external-events.html","searchKeys":["externalEvents","abstract ImmutableSet<EventClass> externalEvents()","io.spine.server.event.model.EventReceiverClass.externalEvents"]},{"name":"abstract ImmutableSet<EventClass> outgoingEvents()","description":"io.spine.server.entity.EventProducingRepository.outgoingEvents","location":"server/io.spine.server.entity/-event-producing-repository/outgoing-events.html","searchKeys":["outgoingEvents","abstract ImmutableSet<EventClass> outgoingEvents()","io.spine.server.entity.EventProducingRepository.outgoingEvents"]},{"name":"abstract ImmutableSet<EventClass> producedEvents()","description":"io.spine.server.EventProducer.producedEvents","location":"server/io.spine.server/-event-producer/produced-events.html","searchKeys":["producedEvents","abstract ImmutableSet<EventClass> producedEvents()","io.spine.server.EventProducer.producedEvents"]},{"name":"abstract ImmutableSet<EventClass> reactionOutput()","description":"io.spine.server.event.model.ReactingClass.reactionOutput","location":"server/io.spine.server.event.model/-reacting-class/reaction-output.html","searchKeys":["reactionOutput","abstract ImmutableSet<EventClass> reactionOutput()","io.spine.server.event.model.ReactingClass.reactionOutput"]},{"name":"abstract ImmutableSet<EventClass> rejections()","description":"io.spine.server.command.model.CommandHandlingClass.rejections","location":"server/io.spine.server.command.model/-command-handling-class/rejections.html","searchKeys":["rejections","abstract ImmutableSet<EventClass> rejections()","io.spine.server.command.model.CommandHandlingClass.rejections"]},{"name":"abstract ImmutableSet<I> route(EventEnvelope event)","description":"io.spine.server.event.AbstractStatefulReactor.route","location":"server/io.spine.server.event/-abstract-stateful-reactor/route.html","searchKeys":["route","abstract ImmutableSet<I> route(EventEnvelope event)","io.spine.server.event.AbstractStatefulReactor.route"]},{"name":"abstract ImmutableSet<R> commandOutput()","description":"io.spine.server.command.model.CommandHandlingClass.commandOutput","location":"server/io.spine.server.command.model/-command-handling-class/command-output.html","searchKeys":["commandOutput","abstract ImmutableSet<R> commandOutput()","io.spine.server.command.model.CommandHandlingClass.commandOutput"]},{"name":"abstract ImmutableSet<StateClass> domesticStates()","description":"io.spine.server.entity.model.StateSubscribingClass.domesticStates","location":"server/io.spine.server.entity.model/-state-subscribing-class/domestic-states.html","searchKeys":["domesticStates","abstract ImmutableSet<StateClass> domesticStates()","io.spine.server.entity.model.StateSubscribingClass.domesticStates"]},{"name":"abstract ImmutableSet<StateClass> externalStates()","description":"io.spine.server.entity.model.StateSubscribingClass.externalStates","location":"server/io.spine.server.entity.model/-state-subscribing-class/external-states.html","searchKeys":["externalStates","abstract ImmutableSet<StateClass> externalStates()","io.spine.server.entity.model.StateSubscribingClass.externalStates"]},{"name":"abstract ImmutableSet<SubscriberMethod> subscribersOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.event.model.SubscribingClass.subscribersOf","location":"server/io.spine.server.event.model/-subscribing-class/subscribers-of.html","searchKeys":["subscribersOf","abstract ImmutableSet<SubscriberMethod> subscribersOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.event.model.SubscribingClass.subscribersOf"]},{"name":"abstract InboxStorage createInboxStorage(boolean multitenant)","description":"io.spine.server.storage.StorageFactory.createInboxStorage","location":"server/io.spine.server.storage/-storage-factory/create-inbox-storage.html","searchKeys":["createInboxStorage","abstract InboxStorage createInboxStorage(boolean multitenant)","io.spine.server.storage.StorageFactory.createInboxStorage"]},{"name":"abstract Iterable<CatchUp> readAll()","description":"io.spine.server.delivery.CatchUpStorage.readAll","location":"server/io.spine.server.delivery/-catch-up-storage/read-all.html","searchKeys":["readAll","abstract Iterable<CatchUp> readAll()","io.spine.server.delivery.CatchUpStorage.readAll"]},{"name":"abstract Iterable<CatchUp> readByType(TypeUrl projectionType)","description":"io.spine.server.delivery.CatchUpStorage.readByType","location":"server/io.spine.server.delivery/-catch-up-storage/read-by-type.html","searchKeys":["readByType","abstract Iterable<CatchUp> readByType(TypeUrl projectionType)","io.spine.server.delivery.CatchUpStorage.readByType"]},{"name":"abstract Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","description":"io.spine.server.delivery.ShardedWorkRegistry.releaseExpiredSessions","location":"server/io.spine.server.delivery/-sharded-work-registry/release-expired-sessions.html","searchKeys":["releaseExpiredSessions","abstract Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","io.spine.server.delivery.ShardedWorkRegistry.releaseExpiredSessions"]},{"name":"abstract Iterator<AggregateEventRecord> historyBackward(AggregateReadRequest<I> request)","description":"io.spine.server.aggregate.AggregateStorage.historyBackward","location":"server/io.spine.server.aggregate/-aggregate-storage/history-backward.html","searchKeys":["historyBackward","abstract Iterator<AggregateEventRecord> historyBackward(AggregateReadRequest<I> request)","io.spine.server.aggregate.AggregateStorage.historyBackward"]},{"name":"abstract Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","description":"io.spine.server.storage.RecordStorage.readAllRecords","location":"server/io.spine.server.storage/-record-storage/read-all-records.html","searchKeys":["readAllRecords","abstract Iterator<EntityRecord> readAllRecords(EntityQuery<I> query, ResponseFormat format)","io.spine.server.storage.RecordStorage.readAllRecords"]},{"name":"abstract Iterator<EntityRecord> readAllRecords(ResponseFormat format)","description":"io.spine.server.storage.RecordStorage.readAllRecords","location":"server/io.spine.server.storage/-record-storage/read-all-records.html","searchKeys":["readAllRecords","abstract Iterator<EntityRecord> readAllRecords(ResponseFormat format)","io.spine.server.storage.RecordStorage.readAllRecords"]},{"name":"abstract Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","description":"io.spine.server.storage.RecordStorage.readMultipleRecords","location":"server/io.spine.server.storage/-record-storage/read-multiple-records.html","searchKeys":["readMultipleRecords","abstract Iterator<EntityRecord> readMultipleRecords(Iterable<I> ids, FieldMask fieldMask)","io.spine.server.storage.RecordStorage.readMultipleRecords"]},{"name":"abstract Iterator<EntityStateWithVersion> readDomainAggregate(Query query)","description":"io.spine.system.server.SystemReadSide.readDomainAggregate","location":"server/io.spine.system.server/-system-read-side/read-domain-aggregate.html","searchKeys":["readDomainAggregate","abstract Iterator<EntityStateWithVersion> readDomainAggregate(Query query)","io.spine.system.server.SystemReadSide.readDomainAggregate"]},{"name":"abstract Iterator<I> distinctAggregateIds()","description":"io.spine.server.aggregate.AggregateStorage.distinctAggregateIds","location":"server/io.spine.server.aggregate/-aggregate-storage/distinct-aggregate-ids.html","searchKeys":["distinctAggregateIds","abstract Iterator<I> distinctAggregateIds()","io.spine.server.aggregate.AggregateStorage.distinctAggregateIds"]},{"name":"abstract Iterator<I> index()","description":"io.spine.server.storage.Storage.index","location":"server/io.spine.server.storage/-storage/--index--.html","searchKeys":["index","abstract Iterator<I> index()","io.spine.server.storage.Storage.index"]},{"name":"abstract Iterator<ShardSessionRecord> allRecords()","description":"io.spine.server.delivery.AbstractWorkRegistry.allRecords","location":"server/io.spine.server.delivery/-abstract-work-registry/all-records.html","searchKeys":["allRecords","abstract Iterator<ShardSessionRecord> allRecords()","io.spine.server.delivery.AbstractWorkRegistry.allRecords"]},{"name":"abstract I entityId()","description":"io.spine.server.entity.Phase.entityId","location":"server/io.spine.server.entity/-phase/entity-id.html","searchKeys":["entityId","abstract I entityId()","io.spine.server.entity.Phase.entityId"]},{"name":"abstract I id()","description":"io.spine.server.entity.Entity.id","location":"server/io.spine.server.entity/-entity/id.html","searchKeys":["id","abstract I id()","io.spine.server.entity.Entity.id"]},{"name":"abstract I id()","description":"io.spine.server.type.MessageEnvelope.id","location":"server/io.spine.server.type/-message-envelope/id.html","searchKeys":["id","abstract I id()","io.spine.server.type.MessageEnvelope.id"]},{"name":"abstract I recordId()","description":"io.spine.server.storage.ReadRequest.recordId","location":"server/io.spine.server.storage/-read-request/record-id.html","searchKeys":["recordId","abstract I recordId()","io.spine.server.storage.ReadRequest.recordId"]},{"name":"abstract LifecycleFlags getLifecycleFlags()","description":"io.spine.server.entity.WithLifecycle.getLifecycleFlags","location":"server/io.spine.server.entity/-with-lifecycle/get-lifecycle-flags.html","searchKeys":["getLifecycleFlags","abstract LifecycleFlags getLifecycleFlags()","io.spine.server.entity.WithLifecycle.getLifecycleFlags"]},{"name":"abstract MessageClass messageClass()","description":"io.spine.server.type.MessageEnvelope.messageClass","location":"server/io.spine.server.type/-message-envelope/message-class.html","searchKeys":["messageClass","abstract MessageClass messageClass()","io.spine.server.type.MessageEnvelope.messageClass"]},{"name":"abstract MessageId getEntity()","description":"io.spine.system.server.event.EntityLifecycleEvent.getEntity","location":"server/io.spine.system.server.event/-entity-lifecycle-event/get-entity.html","searchKeys":["getEntity","abstract MessageId getEntity()","io.spine.system.server.event.EntityLifecycleEvent.getEntity"]},{"name":"abstract MessageId getReceiver()","description":"io.spine.system.server.event.SignalDispatchedMixin.getReceiver","location":"server/io.spine.system.server.event/-signal-dispatched-mixin/get-receiver.html","searchKeys":["getReceiver","abstract MessageId getReceiver()","io.spine.system.server.event.SignalDispatchedMixin.getReceiver"]},{"name":"abstract MessageUnhandled handle(E message)","description":"io.spine.server.bus.DeadMessageHandler.handle","location":"server/io.spine.server.bus/-dead-message-handler/handle.html","searchKeys":["handle","abstract MessageUnhandled handle(E message)","io.spine.server.bus.DeadMessageHandler.handle"]},{"name":"abstract Message message()","description":"io.spine.server.type.MessageEnvelope.message","location":"server/io.spine.server.type/-message-envelope/message.html","searchKeys":["message","abstract Message message()","io.spine.server.type.MessageEnvelope.message"]},{"name":"abstract MethodParams params()","description":"io.spine.server.model.HandlerMethod.params","location":"server/io.spine.server.model/-handler-method/params.html","searchKeys":["params","abstract MethodParams params()","io.spine.server.model.HandlerMethod.params"]},{"name":"abstract Method rawMethod()","description":"io.spine.server.model.HandlerMethod.rawMethod","location":"server/io.spine.server.model/-handler-method/raw-method.html","searchKeys":["rawMethod","abstract Method rawMethod()","io.spine.server.model.HandlerMethod.rawMethod"]},{"name":"abstract Optional<? extends AggregatePartRepository<? extends Object, ? extends Object, ? extends Object>> findPart(Class<? extends AggregateRoot<? extends Object>> rootClass, Class<? extends EntityState> partStateClass)","description":"io.spine.server.aggregate.AggregateRootDirectory.findPart","location":"server/io.spine.server.aggregate/-aggregate-root-directory/find-part.html","searchKeys":["findPart","abstract Optional<? extends AggregatePartRepository<? extends Object, ? extends Object, ? extends Object>> findPart(Class<? extends AggregateRoot<? extends Object>> rootClass, Class<? extends EntityState> partStateClass)","io.spine.server.aggregate.AggregateRootDirectory.findPart"]},{"name":"abstract Optional<? extends EventMessage> filter(EventMessage event)","description":"io.spine.server.entity.EventFilter.filter","location":"server/io.spine.server.entity/-event-filter/filter.html","searchKeys":["filter","abstract Optional<? extends EventMessage> filter(EventMessage event)","io.spine.server.entity.EventFilter.filter"]},{"name":"abstract Optional<Ack> filter(E envelope)","description":"io.spine.server.bus.BusFilter.filter","location":"server/io.spine.server.bus/-bus-filter/filter.html","searchKeys":["filter","abstract Optional<Ack> filter(E envelope)","io.spine.server.bus.BusFilter.filter"]},{"name":"abstract Optional<E> find(I id)","description":"io.spine.server.entity.Repository.find","location":"server/io.spine.server.entity/-repository/find.html","searchKeys":["find","abstract Optional<E> find(I id)","io.spine.server.entity.Repository.find"]},{"name":"abstract Optional<Enrichment> createEnrichment(M message, C context)","description":"io.spine.server.enrich.EnrichmentService.createEnrichment","location":"server/io.spine.server.enrich/-enrichment-service/create-enrichment.html","searchKeys":["createEnrichment","abstract Optional<Enrichment> createEnrichment(M message, C context)","io.spine.server.enrich.EnrichmentService.createEnrichment"]},{"name":"abstract Optional<EntityRecord> readRecord(I id)","description":"io.spine.server.storage.RecordStorage.readRecord","location":"server/io.spine.server.storage/-record-storage/read-record.html","searchKeys":["readRecord","abstract Optional<EntityRecord> readRecord(I id)","io.spine.server.storage.RecordStorage.readRecord"]},{"name":"abstract Optional<InboxMessage> newestMessageToDeliver(ShardIndex index)","description":"io.spine.server.delivery.InboxStorage.newestMessageToDeliver","location":"server/io.spine.server.delivery/-inbox-storage/newest-message-to-deliver.html","searchKeys":["newestMessageToDeliver","abstract Optional<InboxMessage> newestMessageToDeliver(ShardIndex index)","io.spine.server.delivery.InboxStorage.newestMessageToDeliver"]},{"name":"abstract Optional<LifecycleFlags> readLifecycleFlags(I id)","description":"io.spine.server.storage.StorageWithLifecycleFlags.readLifecycleFlags","location":"server/io.spine.server.storage/-storage-with-lifecycle-flags/read-lifecycle-flags.html","searchKeys":["readLifecycleFlags","abstract Optional<LifecycleFlags> readLifecycleFlags(I id)","io.spine.server.storage.StorageWithLifecycleFlags.readLifecycleFlags"]},{"name":"abstract Optional<M> read(R request)","description":"io.spine.server.storage.Storage.read","location":"server/io.spine.server.storage/-storage/read.html","searchKeys":["read","abstract Optional<M> read(R request)","io.spine.server.storage.Storage.read"]},{"name":"abstract Optional<MessageInvalid> validate(E envelope)","description":"io.spine.server.bus.EnvelopeValidator.validate","location":"server/io.spine.server.bus/-envelope-validator/validate.html","searchKeys":["validate","abstract Optional<MessageInvalid> validate(E envelope)","io.spine.server.bus.EnvelopeValidator.validate"]},{"name":"abstract Optional<Page<M>> next()","description":"io.spine.server.delivery.Page.next","location":"server/io.spine.server.delivery/-page/next.html","searchKeys":["next","abstract Optional<Page<M>> next()","io.spine.server.delivery.Page.next"]},{"name":"abstract Optional<Repository<? extends Object, ? extends Object>> systemRepositoryFor(Class<? extends EntityState> stateClass)","description":"io.spine.system.server.SystemClient.systemRepositoryFor","location":"server/io.spine.system.server/-system-client/system-repository-for.html","searchKeys":["systemRepositoryFor","abstract Optional<Repository<? extends Object, ? extends Object>> systemRepositoryFor(Class<? extends EntityState> stateClass)","io.spine.system.server.SystemClient.systemRepositoryFor"]},{"name":"abstract Optional<S> load(I id)","description":"io.spine.server.event.AbstractStatefulReactor.load","location":"server/io.spine.server.event/-abstract-stateful-reactor/load.html","searchKeys":["load","abstract Optional<S> load(I id)","io.spine.server.event.AbstractStatefulReactor.load"]},{"name":"abstract Optional<ShardProcessingSession> pickUp(ShardIndex index, NodeId node)","description":"io.spine.server.delivery.ShardedWorkRegistry.pickUp","location":"server/io.spine.server.delivery/-sharded-work-registry/pick-up.html","searchKeys":["pickUp","abstract Optional<ShardProcessingSession> pickUp(ShardIndex index, NodeId node)","io.spine.server.delivery.ShardedWorkRegistry.pickUp"]},{"name":"abstract Optional<ShardSessionRecord> find(ShardIndex index)","description":"io.spine.server.delivery.AbstractWorkRegistry.find","location":"server/io.spine.server.delivery/-abstract-work-registry/find.html","searchKeys":["find","abstract Optional<ShardSessionRecord> find(ShardIndex index)","io.spine.server.delivery.AbstractWorkRegistry.find"]},{"name":"abstract Origin asMessageOrigin()","description":"io.spine.server.type.MessageEnvelope.asMessageOrigin","location":"server/io.spine.server.type/-message-envelope/as-message-origin.html","searchKeys":["asMessageOrigin","abstract Origin asMessageOrigin()","io.spine.server.type.MessageEnvelope.asMessageOrigin"]},{"name":"abstract Page<InboxMessage> readAll(ShardIndex index, int pageSize)","description":"io.spine.server.delivery.InboxStorage.readAll","location":"server/io.spine.server.delivery/-inbox-storage/read-all.html","searchKeys":["readAll","abstract Page<InboxMessage> readAll(ShardIndex index, int pageSize)","io.spine.server.delivery.InboxStorage.readAll"]},{"name":"abstract ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ? extends Object, ? extends Object>> projectionClass)","description":"io.spine.server.storage.StorageFactory.createProjectionStorage","location":"server/io.spine.server.storage/-storage-factory/create-projection-storage.html","searchKeys":["createProjectionStorage","abstract ProjectionStorage<I> createProjectionStorage<I>(ContextSpec context, Class<? extends Projection<I, ? extends Object, ? extends Object>> projectionClass)","io.spine.server.storage.StorageFactory.createProjectionStorage"]},{"name":"abstract Publisher createPublisher(ChannelId id)","description":"io.spine.server.transport.TransportFactory.createPublisher","location":"server/io.spine.server.transport/-transport-factory/create-publisher.html","searchKeys":["createPublisher","abstract Publisher createPublisher(ChannelId id)","io.spine.server.transport.TransportFactory.createPublisher"]},{"name":"abstract RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ? extends Object>> entityClass)","description":"io.spine.server.storage.StorageFactory.createRecordStorage","location":"server/io.spine.server.storage/-storage-factory/create-record-storage.html","searchKeys":["createRecordStorage","abstract RecordStorage<I> createRecordStorage<I>(ContextSpec context, Class<? extends Entity<I, ? extends Object>> entityClass)","io.spine.server.storage.StorageFactory.createRecordStorage"]},{"name":"abstract RecordStorage<I> recordStorage()","description":"io.spine.server.projection.ProjectionStorage.recordStorage","location":"server/io.spine.server.projection/-projection-storage/record-storage.html","searchKeys":["recordStorage","abstract RecordStorage<I> recordStorage()","io.spine.server.projection.ProjectionStorage.recordStorage"]},{"name":"abstract Repository<I, ? extends Object> repository()","description":"io.spine.server.delivery.MessageEndpoint.repository","location":"server/io.spine.server.delivery/-message-endpoint/repository.html","searchKeys":["repository","abstract Repository<I, ? extends Object> repository()","io.spine.server.delivery.MessageEndpoint.repository"]},{"name":"abstract ReturnTypes returnTypes()","description":"io.spine.server.model.MethodSignature.returnTypes","location":"server/io.spine.server.model/-method-signature/return-types.html","searchKeys":["returnTypes","abstract ReturnTypes returnTypes()","io.spine.server.model.MethodSignature.returnTypes"]},{"name":"abstract R apply(M message, C context)","description":"io.spine.server.route.Route.apply","location":"server/io.spine.server.route/-route/apply.html","searchKeys":["apply","abstract R apply(M message, C context)","io.spine.server.route.Route.apply"]},{"name":"abstract Set<Attribute<? extends Object>> attributes()","description":"io.spine.server.model.HandlerMethod.attributes","location":"server/io.spine.server.model/-handler-method/attributes.html","searchKeys":["attributes","abstract Set<Attribute<? extends Object>> attributes()","io.spine.server.model.HandlerMethod.attributes"]},{"name":"abstract Set<I> perform(ProjectionRepository<I, ? extends Object, ? extends Object> repo, Event event, Set<I> narrowDownToIds)","description":"io.spine.server.delivery.CatchUpProcess.DispatchCatchingUp.perform","location":"server/io.spine.server.delivery/-catch-up-process/-dispatch-catching-up/perform.html","searchKeys":["perform","abstract Set<I> perform(ProjectionRepository<I, ? extends Object, ? extends Object> repo, Event event, Set<I> narrowDownToIds)","io.spine.server.delivery.CatchUpProcess.DispatchCatchingUp.perform"]},{"name":"abstract Set<R> producedMessages()","description":"io.spine.server.model.HandlerMethod.producedMessages","location":"server/io.spine.server.model/-handler-method/produced-messages.html","searchKeys":["producedMessages","abstract Set<R> producedMessages()","io.spine.server.model.HandlerMethod.producedMessages"]},{"name":"abstract Set<TenantId> all()","description":"io.spine.server.tenant.TenantIndex.all","location":"server/io.spine.server.tenant/-tenant-index/all.html","searchKeys":["all","abstract Set<TenantId> all()","io.spine.server.tenant.TenantIndex.all"]},{"name":"abstract ShardIndex getId()","description":"io.spine.server.delivery.ShardEvent.getId","location":"server/io.spine.server.delivery/-shard-event/get-id.html","searchKeys":["getId","abstract ShardIndex getId()","io.spine.server.delivery.ShardEvent.getId"]},{"name":"abstract ShardIndex indexFor(Object entityId, TypeUrl entityStateType)","description":"io.spine.server.delivery.DeliveryStrategy.indexFor","location":"server/io.spine.server.delivery/-delivery-strategy/index-for.html","searchKeys":["indexFor","abstract ShardIndex indexFor(Object entityId, TypeUrl entityStateType)","io.spine.server.delivery.DeliveryStrategy.indexFor"]},{"name":"abstract ShardIndex shardIndex()","description":"io.spine.server.delivery.ShardedRecord.shardIndex","location":"server/io.spine.server.delivery/-sharded-record/shard-index.html","searchKeys":["shardIndex","abstract ShardIndex shardIndex()","io.spine.server.delivery.ShardedRecord.shardIndex"]},{"name":"abstract ShardProcessingSession asSession(ShardSessionRecord record)","description":"io.spine.server.delivery.AbstractWorkRegistry.asSession","location":"server/io.spine.server.delivery/-abstract-work-registry/as-session.html","searchKeys":["asSession","abstract ShardProcessingSession asSession(ShardSessionRecord record)","io.spine.server.delivery.AbstractWorkRegistry.asSession"]},{"name":"abstract Signal<?, ?, ?> signal()","description":"io.spine.server.entity.Phase.signal","location":"server/io.spine.server.entity/-phase/signal.html","searchKeys":["signal","abstract Signal<?, ?, ?> signal()","io.spine.server.entity.Phase.signal"]},{"name":"abstract Signal<?, ?, ?> signal()","description":"io.spine.server.trace.Tracer.signal","location":"server/io.spine.server.trace/-tracer/signal.html","searchKeys":["signal","abstract Signal<?, ?, ?> signal()","io.spine.server.trace.Tracer.signal"]},{"name":"abstract SignalId messageId()","description":"io.spine.server.entity.Phase.messageId","location":"server/io.spine.server.entity/-phase/message-id.html","searchKeys":["messageId","abstract SignalId messageId()","io.spine.server.entity.Phase.messageId"]},{"name":"abstract Storage<I, ? extends Object, ? extends Object> createStorage()","description":"io.spine.server.entity.Repository.createStorage","location":"server/io.spine.server.entity/-repository/create-storage.html","searchKeys":["createStorage","abstract Storage<I, ? extends Object, ? extends Object> createStorage()","io.spine.server.entity.Repository.createStorage"]},{"name":"abstract StorageConverter<I, E, S> storageConverter()","description":"io.spine.server.entity.RecordBasedRepository.storageConverter","location":"server/io.spine.server.entity/-record-based-repository/storage-converter.html","searchKeys":["storageConverter","abstract StorageConverter<I, E, S> storageConverter()","io.spine.server.entity.RecordBasedRepository.storageConverter"]},{"name":"abstract StorageConverter<I, E, S> withFieldMask(FieldMask fieldMask)","description":"io.spine.server.entity.StorageConverter.withFieldMask","location":"server/io.spine.server.entity/-storage-converter/with-field-mask.html","searchKeys":["withFieldMask","abstract StorageConverter<I, E, S> withFieldMask(FieldMask fieldMask)","io.spine.server.entity.StorageConverter.withFieldMask"]},{"name":"abstract String name()","description":"io.spine.server.entity.storage.SystemColumn.name","location":"server/io.spine.server.entity.storage/-system-column/name.html","searchKeys":["name","abstract String name()","io.spine.server.entity.storage.SystemColumn.name"]},{"name":"abstract String name()","description":"io.spine.server.storage.StorageField.name","location":"server/io.spine.server.storage/-storage-field/name.html","searchKeys":["name","abstract String name()","io.spine.server.storage.StorageField.name"]},{"name":"abstract String parameter()","description":"io.spine.server.model.Attribute.parameter","location":"server/io.spine.server.model/-attribute/parameter.html","searchKeys":["parameter","abstract String parameter()","io.spine.server.model.Attribute.parameter"]},{"name":"abstract Subscriber createSubscriber(ChannelId id)","description":"io.spine.server.transport.TransportFactory.createSubscriber","location":"server/io.spine.server.transport/-transport-factory/create-subscriber.html","searchKeys":["createSubscriber","abstract Subscriber createSubscriber(ChannelId id)","io.spine.server.transport.TransportFactory.createSubscriber"]},{"name":"abstract Success fromEmpty(E handledSignal)","description":"io.spine.server.model.CommandProducingMethod.fromEmpty","location":"server/io.spine.server.model/-command-producing-method/from-empty.html","searchKeys":["fromEmpty","abstract Success fromEmpty(E handledSignal)","io.spine.server.model.CommandProducingMethod.fromEmpty"]},{"name":"abstract Success toSuccessfulOutcome(Object rawResult, T target, E handledSignal)","description":"io.spine.server.model.HandlerMethod.toSuccessfulOutcome","location":"server/io.spine.server.model/-handler-method/to-successful-outcome.html","searchKeys":["toSuccessfulOutcome","abstract Success toSuccessfulOutcome(Object rawResult, T target, E handledSignal)","io.spine.server.model.HandlerMethod.toSuccessfulOutcome"]},{"name":"abstract SystemClient systemClient()","description":"io.spine.server.BoundedContext.systemClient","location":"server/io.spine.server/-bounded-context/system-client.html","searchKeys":["systemClient","abstract SystemClient systemClient()","io.spine.server.BoundedContext.systemClient"]},{"name":"abstract SystemReadSide readSide()","description":"io.spine.system.server.SystemClient.readSide","location":"server/io.spine.system.server/-system-client/read-side.html","searchKeys":["readSide","abstract SystemReadSide readSide()","io.spine.system.server.SystemClient.readSide"]},{"name":"abstract SystemWriteSide writeSide()","description":"io.spine.system.server.SystemClient.writeSide","location":"server/io.spine.system.server/-system-client/write-side.html","searchKeys":["writeSide","abstract SystemWriteSide writeSide()","io.spine.system.server.SystemClient.writeSide"]},{"name":"abstract S getPayload()","description":"io.spine.system.server.event.SignalDispatchedMixin.getPayload","location":"server/io.spine.system.server.event/-signal-dispatched-mixin/get-payload.html","searchKeys":["getPayload","abstract S getPayload()","io.spine.system.server.event.SignalDispatchedMixin.getPayload"]},{"name":"abstract S state()","description":"io.spine.server.entity.Entity.state","location":"server/io.spine.server.entity/-entity/state.html","searchKeys":["state","abstract S state()","io.spine.server.entity.Entity.state"]},{"name":"abstract TenantId tenantId()","description":"io.spine.server.type.SignalEnvelope.tenantId","location":"server/io.spine.server.type/-signal-envelope/tenant-id.html","searchKeys":["tenantId","abstract TenantId tenantId()","io.spine.server.type.SignalEnvelope.tenantId"]},{"name":"abstract Throwable asThrowable()","description":"io.spine.server.MessageError.asThrowable","location":"server/io.spine.server/-message-error/as-throwable.html","searchKeys":["asThrowable","abstract Throwable asThrowable()","io.spine.server.MessageError.asThrowable"]},{"name":"abstract Timestamp getWhenReceived()","description":"io.spine.server.delivery.ShardedRecord.getWhenReceived","location":"server/io.spine.server.delivery/-sharded-record/get-when-received.html","searchKeys":["getWhenReceived","abstract Timestamp getWhenReceived()","io.spine.server.delivery.ShardedRecord.getWhenReceived"]},{"name":"abstract Tracer trace(ContextSpec context, Signal<?, ?, ?> signalMessage)","description":"io.spine.server.trace.TracerFactory.trace","location":"server/io.spine.server.trace/-tracer-factory/trace.html","searchKeys":["trace","abstract Tracer trace(ContextSpec context, Signal<?, ?, ?> signalMessage)","io.spine.server.trace.TracerFactory.trace"]},{"name":"abstract Transaction<I, E, S, ? extends Object> startTransaction(E entity)","description":"io.spine.server.entity.Migration.startTransaction","location":"server/io.spine.server.entity/-migration/start-transaction.html","searchKeys":["startTransaction","abstract Transaction<I, E, S, ? extends Object> startTransaction(E entity)","io.spine.server.entity.Migration.startTransaction"]},{"name":"abstract T apply()","description":"io.spine.server.tenant.TenantAwareFunction0.apply","location":"server/io.spine.server.tenant/-tenant-aware-function0/apply.html","searchKeys":["apply","abstract T apply()","io.spine.server.tenant.TenantAwareFunction0.apply"]},{"name":"abstract T outerObject()","description":"io.spine.server.type.MessageEnvelope.outerObject","location":"server/io.spine.server.type/-message-envelope/outer-object.html","searchKeys":["outerObject","abstract T outerObject()","io.spine.server.type.MessageEnvelope.outerObject"]},{"name":"abstract VersionIncrement createVersionIncrement(EventEnvelope event)","description":"io.spine.server.entity.EventPlayingTransaction.createVersionIncrement","location":"server/io.spine.server.entity/-event-playing-transaction/create-version-increment.html","searchKeys":["createVersionIncrement","abstract VersionIncrement createVersionIncrement(EventEnvelope event)","io.spine.server.entity.EventPlayingTransaction.createVersionIncrement"]},{"name":"abstract Version nextVersion()","description":"io.spine.server.entity.VersionIncrement.nextVersion","location":"server/io.spine.server.entity/-version-increment/next-version.html","searchKeys":["nextVersion","abstract Version nextVersion()","io.spine.server.entity.VersionIncrement.nextVersion"]},{"name":"abstract Version version()","description":"io.spine.server.EventProducer.version","location":"server/io.spine.server/-event-producer/version.html","searchKeys":["version","abstract Version version()","io.spine.server.EventProducer.version"]},{"name":"abstract Version version()","description":"io.spine.server.entity.Entity.version","location":"server/io.spine.server.entity/-entity/version.html","searchKeys":["version","abstract Version version()","io.spine.server.entity.Entity.version"]},{"name":"abstract V value()","description":"io.spine.server.model.Attribute.value","location":"server/io.spine.server.model/-attribute/value.html","searchKeys":["value","abstract V value()","io.spine.server.model.Attribute.value"]},{"name":"abstract WorkerId currentWorkerFor(NodeId node)","description":"io.spine.server.delivery.AbstractWorkRegistry.currentWorkerFor","location":"server/io.spine.server.delivery/-abstract-work-registry/current-worker-for.html","searchKeys":["currentWorkerFor","abstract WorkerId currentWorkerFor(NodeId node)","io.spine.server.delivery.AbstractWorkRegistry.currentWorkerFor"]},{"name":"abstract boolean allowImport()","description":"io.spine.server.aggregate.Apply.allowImport","location":"server/io.spine.server.aggregate/-apply/allow-import.html","searchKeys":["allowImport","abstract boolean allowImport()","io.spine.server.aggregate.Apply.allowImport"]},{"name":"abstract boolean delete(I id)","description":"io.spine.server.storage.RecordStorage.delete","location":"server/io.spine.server.storage/-record-storage/delete.html","searchKeys":["delete","abstract boolean delete(I id)","io.spine.server.storage.RecordStorage.delete"]},{"name":"abstract boolean external()","description":"io.spine.server.command.Command.external","location":"server/io.spine.server.command/-command/external.html","searchKeys":["external","abstract boolean external()","io.spine.server.command.Command.external"]},{"name":"abstract boolean external()","description":"io.spine.server.event.React.external","location":"server/io.spine.server.event/-react/external.html","searchKeys":["external","abstract boolean external()","io.spine.server.event.React.external"]},{"name":"abstract boolean isModified(E entity)","description":"io.spine.server.entity.EntityMessageEndpoint.isModified","location":"server/io.spine.server.entity/-entity-message-endpoint/is-modified.html","searchKeys":["isModified","abstract boolean isModified(E entity)","io.spine.server.entity.EntityMessageEndpoint.isModified"]},{"name":"abstract boolean isMultitenant()","description":"io.spine.server.storage.Storage.isMultitenant","location":"server/io.spine.server.storage/-storage/is-multitenant.html","searchKeys":["isMultitenant","abstract boolean isMultitenant()","io.spine.server.storage.Storage.isMultitenant"]},{"name":"abstract boolean isOpen()","description":"io.spine.server.Closeable.isOpen","location":"server/io.spine.server/-closeable/is-open.html","searchKeys":["isOpen","abstract boolean isOpen()","io.spine.server.Closeable.isOpen"]},{"name":"abstract boolean isOpen()","description":"io.spine.server.storage.Storage.isOpen","location":"server/io.spine.server.storage/-storage/is-open.html","searchKeys":["isOpen","abstract boolean isOpen()","io.spine.server.storage.Storage.isOpen"]},{"name":"abstract boolean isRegistered()","description":"io.spine.server.ContextAware.isRegistered","location":"server/io.spine.server/-context-aware/is-registered.html","searchKeys":["isRegistered","abstract boolean isRegistered()","io.spine.server.ContextAware.isRegistered"]},{"name":"abstract boolean isStale()","description":"io.spine.server.transport.MessageChannel.isStale","location":"server/io.spine.server.transport/-message-channel/is-stale.html","searchKeys":["isStale","abstract boolean isStale()","io.spine.server.transport.MessageChannel.isStale"]},{"name":"abstract boolean lifecycleFlagsChanged()","description":"io.spine.server.entity.Entity.lifecycleFlagsChanged","location":"server/io.spine.server.entity/-entity/lifecycle-flags-changed.html","searchKeys":["lifecycleFlagsChanged","abstract boolean lifecycleFlagsChanged()","io.spine.server.entity.Entity.lifecycleFlagsChanged"]},{"name":"abstract boolean matches(MethodParams params)","description":"io.spine.server.model.ParameterSpec.matches","location":"server/io.spine.server.model/-parameter-spec/matches.html","searchKeys":["matches","abstract boolean matches(MethodParams params)","io.spine.server.model.ParameterSpec.matches"]},{"name":"abstract boolean mayReturnIgnored()","description":"io.spine.server.model.MethodSignature.mayReturnIgnored","location":"server/io.spine.server.model/-method-signature/may-return-ignored.html","searchKeys":["mayReturnIgnored","abstract boolean mayReturnIgnored()","io.spine.server.model.MethodSignature.mayReturnIgnored"]},{"name":"abstract int shardCount()","description":"io.spine.server.delivery.DeliveryStrategy.shardCount","location":"server/io.spine.server.delivery/-delivery-strategy/shard-count.html","searchKeys":["shardCount","abstract int shardCount()","io.spine.server.delivery.DeliveryStrategy.shardCount"]},{"name":"abstract int size()","description":"io.spine.server.delivery.Page.size","location":"server/io.spine.server.delivery/-page/size.html","searchKeys":["size","abstract int size()","io.spine.server.delivery.Page.size"]},{"name":"abstract void afterDispatched(I entityId)","description":"io.spine.server.entity.EntityMessageEndpoint.afterDispatched","location":"server/io.spine.server.entity/-entity-message-endpoint/after-dispatched.html","searchKeys":["afterDispatched","abstract void afterDispatched(I entityId)","io.spine.server.entity.EntityMessageEndpoint.afterDispatched"]},{"name":"abstract void afterInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","description":"io.spine.server.log.HandlerLifecycle.afterInvoke","location":"server/io.spine.server.log/-handler-lifecycle/after-invoke.html","searchKeys":["afterInvoke","abstract void afterInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","io.spine.server.log.HandlerLifecycle.afterInvoke"]},{"name":"abstract void append(Event event)","description":"io.spine.server.event.EventStore.append","location":"server/io.spine.server.event/-event-store/append.html","searchKeys":["append","abstract void append(Event event)","io.spine.server.event.EventStore.append"]},{"name":"abstract void appendAll(Iterable<Event> events)","description":"io.spine.server.event.EventStore.appendAll","location":"server/io.spine.server.event/-event-store/append-all.html","searchKeys":["appendAll","abstract void appendAll(Iterable<Event> events)","io.spine.server.event.EventStore.appendAll"]},{"name":"abstract void beforeInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","description":"io.spine.server.log.HandlerLifecycle.beforeInvoke","location":"server/io.spine.server.log/-handler-lifecycle/before-invoke.html","searchKeys":["beforeInvoke","abstract void beforeInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","io.spine.server.log.HandlerLifecycle.beforeInvoke"]},{"name":"abstract void close()","description":"io.spine.server.storage.Storage.close","location":"server/io.spine.server.storage/-storage/close.html","searchKeys":["close","abstract void close()","io.spine.server.storage.Storage.close"]},{"name":"abstract void close()","description":"io.spine.server.tenant.TenantIndex.close","location":"server/io.spine.server.tenant/-tenant-index/close.html","searchKeys":["close","abstract void close()","io.spine.server.tenant.TenantIndex.close"]},{"name":"abstract void closeSystemContext()","description":"io.spine.system.server.SystemClient.closeSystemContext","location":"server/io.spine.system.server/-system-client/close-system-context.html","searchKeys":["closeSystemContext","abstract void closeSystemContext()","io.spine.system.server.SystemClient.closeSystemContext"]},{"name":"abstract void complete()","description":"io.spine.server.delivery.ShardProcessingSession.complete","location":"server/io.spine.server.delivery/-shard-processing-session/complete.html","searchKeys":["complete","abstract void complete()","io.spine.server.delivery.ShardProcessingSession.complete"]},{"name":"abstract void discoverAttributes()","description":"io.spine.server.model.HandlerMethod.discoverAttributes","location":"server/io.spine.server.model/-handler-method/discover-attributes.html","searchKeys":["discoverAttributes","abstract void discoverAttributes()","io.spine.server.model.HandlerMethod.discoverAttributes"]},{"name":"abstract void dispatch(E envelope)","description":"io.spine.server.bus.Bus.dispatch","location":"server/io.spine.server.bus/-bus/dispatch.html","searchKeys":["dispatch","abstract void dispatch(E envelope)","io.spine.server.bus.Bus.dispatch"]},{"name":"abstract void dispatch(E envelope)","description":"io.spine.server.bus.MessageDispatcher.dispatch","location":"server/io.spine.server.bus/-message-dispatcher/dispatch.html","searchKeys":["dispatch","abstract void dispatch(E envelope)","io.spine.server.bus.MessageDispatcher.dispatch"]},{"name":"abstract void dispatchCommand(CommandEnvelope envelope)","description":"io.spine.server.commandbus.CommandDispatcherDelegate.dispatchCommand","location":"server/io.spine.server.commandbus/-command-dispatcher-delegate/dispatch-command.html","searchKeys":["dispatchCommand","abstract void dispatchCommand(CommandEnvelope envelope)","io.spine.server.commandbus.CommandDispatcherDelegate.dispatchCommand"]},{"name":"abstract void dispatchEvent(EventEnvelope event)","description":"io.spine.server.event.EventDispatcherDelegate.dispatchEvent","location":"server/io.spine.server.event/-event-dispatcher-delegate/dispatch-event.html","searchKeys":["dispatchEvent","abstract void dispatchEvent(EventEnvelope event)","io.spine.server.event.EventDispatcherDelegate.dispatchEvent"]},{"name":"abstract void dispatchTo(I id, Event event)","description":"io.spine.server.entity.EventDispatchingRepository.dispatchTo","location":"server/io.spine.server.entity/-event-dispatching-repository/dispatch-to.html","searchKeys":["dispatchTo","abstract void dispatchTo(I id, Event event)","io.spine.server.entity.EventDispatchingRepository.dispatchTo"]},{"name":"abstract void dispatchTo(I targetId)","description":"io.spine.server.delivery.MessageEndpoint.dispatchTo","location":"server/io.spine.server.delivery/-message-endpoint/dispatch-to.html","searchKeys":["dispatchTo","abstract void dispatchTo(I targetId)","io.spine.server.delivery.MessageEndpoint.dispatchTo"]},{"name":"abstract void doSchedule(Command command)","description":"io.spine.server.commandbus.CommandScheduler.doSchedule","location":"server/io.spine.server.commandbus/-command-scheduler/do-schedule.html","searchKeys":["doSchedule","abstract void doSchedule(Command command)","io.spine.server.commandbus.CommandScheduler.doSchedule"]},{"name":"abstract void handle(ExternalMessage message)","description":"io.spine.server.integration.AbstractChannelObserver.handle","location":"server/io.spine.server.integration/-abstract-channel-observer/handle.html","searchKeys":["handle","abstract void handle(ExternalMessage message)","io.spine.server.integration.AbstractChannelObserver.handle"]},{"name":"abstract void handle(T outcomeResult)","description":"io.spine.server.dispatch.OutcomeHandler.handle","location":"server/io.spine.server.dispatch/-outcome-handler/handle.html","searchKeys":["handle","abstract void handle(T outcomeResult)","io.spine.server.dispatch.OutcomeHandler.handle"]},{"name":"abstract void injectState(E entity, S state, EntityRecord entityRecord)","description":"io.spine.server.entity.StorageConverter.injectState","location":"server/io.spine.server.entity/-storage-converter/inject-state.html","searchKeys":["injectState","abstract void injectState(E entity, S state, EntityRecord entityRecord)","io.spine.server.entity.StorageConverter.injectState"]},{"name":"abstract void keep(TenantId id)","description":"io.spine.server.tenant.TenantIndex.keep","location":"server/io.spine.server.tenant/-tenant-index/keep.html","searchKeys":["keep","abstract void keep(TenantId id)","io.spine.server.tenant.TenantIndex.keep"]},{"name":"abstract void onAfterCommit(EntityRecordChange change)","description":"io.spine.server.entity.TransactionListener.onAfterCommit","location":"server/io.spine.server.entity/-transaction-listener/on-after-commit.html","searchKeys":["onAfterCommit","abstract void onAfterCommit(EntityRecordChange change)","io.spine.server.entity.TransactionListener.onAfterCommit"]},{"name":"abstract void onAfterPhase(Phase<I> phase)","description":"io.spine.server.entity.TransactionListener.onAfterPhase","location":"server/io.spine.server.entity/-transaction-listener/on-after-phase.html","searchKeys":["onAfterPhase","abstract void onAfterPhase(Phase<I> phase)","io.spine.server.entity.TransactionListener.onAfterPhase"]},{"name":"abstract void onBeforeCommit(EntityRecord entityRecord)","description":"io.spine.server.entity.TransactionListener.onBeforeCommit","location":"server/io.spine.server.entity/-transaction-listener/on-before-commit.html","searchKeys":["onBeforeCommit","abstract void onBeforeCommit(EntityRecord entityRecord)","io.spine.server.entity.TransactionListener.onBeforeCommit"]},{"name":"abstract void onBeforePhase(Phase<I> phase)","description":"io.spine.server.entity.TransactionListener.onBeforePhase","location":"server/io.spine.server.entity/-transaction-listener/on-before-phase.html","searchKeys":["onBeforePhase","abstract void onBeforePhase(Phase<I> phase)","io.spine.server.entity.TransactionListener.onBeforePhase"]},{"name":"abstract void onCompleted(SignalId signal)","description":"io.spine.server.bus.MulticastDispatchListener.onCompleted","location":"server/io.spine.server.bus/-multicast-dispatch-listener/on-completed.html","searchKeys":["onCompleted","abstract void onCompleted(SignalId signal)","io.spine.server.bus.MulticastDispatchListener.onCompleted"]},{"name":"abstract void onDispatchCommand(CommandEnvelope command)","description":"io.spine.server.commandbus.CommandFlowWatcher.onDispatchCommand","location":"server/io.spine.server.commandbus/-command-flow-watcher/on-dispatch-command.html","searchKeys":["onDispatchCommand","abstract void onDispatchCommand(CommandEnvelope command)","io.spine.server.commandbus.CommandFlowWatcher.onDispatchCommand"]},{"name":"abstract void onDuplicate(I target, M envelope)","description":"io.spine.server.delivery.MessageEndpoint.onDuplicate","location":"server/io.spine.server.delivery/-message-endpoint/on-duplicate.html","searchKeys":["onDuplicate","abstract void onDuplicate(I target, M envelope)","io.spine.server.delivery.MessageEndpoint.onDuplicate"]},{"name":"abstract void onEmptyResult(E entity)","description":"io.spine.server.entity.EntityMessageEndpoint.onEmptyResult","location":"server/io.spine.server.entity/-entity-message-endpoint/on-empty-result.html","searchKeys":["onEmptyResult","abstract void onEmptyResult(E entity)","io.spine.server.entity.EntityMessageEndpoint.onEmptyResult"]},{"name":"abstract void onEnd(I id)","description":"io.spine.server.delivery.BatchDeliveryListener.onEnd","location":"server/io.spine.server.delivery/-batch-delivery-listener/on-end.html","searchKeys":["onEnd","abstract void onEnd(I id)","io.spine.server.delivery.BatchDeliveryListener.onEnd"]},{"name":"abstract void onMessage(InboxMessage update)","description":"io.spine.server.delivery.ShardObserver.onMessage","location":"server/io.spine.server.delivery/-shard-observer/on-message.html","searchKeys":["onMessage","abstract void onMessage(InboxMessage update)","io.spine.server.delivery.ShardObserver.onMessage"]},{"name":"abstract void onModified(E entity)","description":"io.spine.server.entity.EntityMessageEndpoint.onModified","location":"server/io.spine.server.entity/-entity-message-endpoint/on-modified.html","searchKeys":["onModified","abstract void onModified(E entity)","io.spine.server.entity.EntityMessageEndpoint.onModified"]},{"name":"abstract void onScheduled(CommandEnvelope command)","description":"io.spine.server.commandbus.CommandFlowWatcher.onScheduled","location":"server/io.spine.server.commandbus/-command-flow-watcher/on-scheduled.html","searchKeys":["onScheduled","abstract void onScheduled(CommandEnvelope command)","io.spine.server.commandbus.CommandFlowWatcher.onScheduled"]},{"name":"abstract void onStart(I id)","description":"io.spine.server.delivery.BatchDeliveryListener.onStart","location":"server/io.spine.server.delivery/-batch-delivery-listener/on-start.html","searchKeys":["onStart","abstract void onStart(I id)","io.spine.server.delivery.BatchDeliveryListener.onStart"]},{"name":"abstract void onStarted(SignalId signal)","description":"io.spine.server.bus.MulticastDispatchListener.onStarted","location":"server/io.spine.server.bus/-multicast-dispatch-listener/on-started.html","searchKeys":["onStarted","abstract void onStarted(SignalId signal)","io.spine.server.bus.MulticastDispatchListener.onStarted"]},{"name":"abstract void onTransactionFailed(Error cause, EntityRecord entityRecord)","description":"io.spine.server.entity.TransactionListener.onTransactionFailed","location":"server/io.spine.server.entity/-transaction-listener/on-transaction-failed.html","searchKeys":["onTransactionFailed","abstract void onTransactionFailed(Error cause, EntityRecord entityRecord)","io.spine.server.entity.TransactionListener.onTransactionFailed"]},{"name":"abstract void onTransactionFailed(Event cause, EntityRecord entityRecord)","description":"io.spine.server.entity.TransactionListener.onTransactionFailed","location":"server/io.spine.server.entity/-transaction-listener/on-transaction-failed.html","searchKeys":["onTransactionFailed","abstract void onTransactionFailed(Event cause, EntityRecord entityRecord)","io.spine.server.entity.TransactionListener.onTransactionFailed"]},{"name":"abstract void processedBy(MessageId receiver, EntityTypeName receiverType)","description":"io.spine.server.trace.Tracer.processedBy","location":"server/io.spine.server.trace/-tracer/processed-by.html","searchKeys":["processedBy","abstract void processedBy(MessageId receiver, EntityTypeName receiverType)","io.spine.server.trace.Tracer.processedBy"]},{"name":"abstract void read(EventStreamQuery request, StreamObserver<Event> responseObserver)","description":"io.spine.server.event.EventStore.read","location":"server/io.spine.server.event/-event-store/read.html","searchKeys":["read","abstract void read(EventStreamQuery request, StreamObserver<Event> responseObserver)","io.spine.server.event.EventStore.read"]},{"name":"abstract void register(AggregatePartRepository<? extends Object, ? extends Object, ? extends Object> repository)","description":"io.spine.server.aggregate.AggregateRootDirectory.register","location":"server/io.spine.server.aggregate/-aggregate-root-directory/register.html","searchKeys":["register","abstract void register(AggregatePartRepository<? extends Object, ? extends Object, ? extends Object> repository)","io.spine.server.aggregate.AggregateRootDirectory.register"]},{"name":"abstract void register(EventDispatcher dispatcher)","description":"io.spine.system.server.SystemReadSide.register","location":"server/io.spine.system.server/-system-read-side/register.html","searchKeys":["register","abstract void register(EventDispatcher dispatcher)","io.spine.system.server.SystemReadSide.register"]},{"name":"abstract void registerWith(BoundedContext context)","description":"io.spine.server.ContextAware.registerWith","location":"server/io.spine.server/-context-aware/register-with.html","searchKeys":["registerWith","abstract void registerWith(BoundedContext context)","io.spine.server.ContextAware.registerWith"]},{"name":"abstract void removeAll(Iterable<InboxMessage> messages)","description":"io.spine.server.delivery.InboxStorage.removeAll","location":"server/io.spine.server.delivery/-inbox-storage/remove-all.html","searchKeys":["removeAll","abstract void removeAll(Iterable<InboxMessage> messages)","io.spine.server.delivery.InboxStorage.removeAll"]},{"name":"abstract void store(E obj)","description":"io.spine.server.entity.Repository.store","location":"server/io.spine.server.entity/-repository/store.html","searchKeys":["store","abstract void store(E obj)","io.spine.server.entity.Repository.store"]},{"name":"abstract void store(Iterable<T> messages)","description":"io.spine.server.bus.Bus.store","location":"server/io.spine.server.bus/-bus/store.html","searchKeys":["store","abstract void store(Iterable<T> messages)","io.spine.server.bus.Bus.store"]},{"name":"abstract void store(S updatedState)","description":"io.spine.server.event.AbstractStatefulReactor.store","location":"server/io.spine.server.event/-abstract-stateful-reactor/store.html","searchKeys":["store","abstract void store(S updatedState)","io.spine.server.event.AbstractStatefulReactor.store"]},{"name":"abstract void truncate(int snapshotIndex)","description":"io.spine.server.aggregate.AggregateStorage.truncate","location":"server/io.spine.server.aggregate/-aggregate-storage/truncate.html","searchKeys":["truncate","abstract void truncate(int snapshotIndex)","io.spine.server.aggregate.AggregateStorage.truncate"]},{"name":"abstract void truncate(int snapshotIndex, Timestamp date)","description":"io.spine.server.aggregate.AggregateStorage.truncate","location":"server/io.spine.server.aggregate/-aggregate-storage/truncate.html","searchKeys":["truncate","abstract void truncate(int snapshotIndex, Timestamp date)","io.spine.server.aggregate.AggregateStorage.truncate"]},{"name":"abstract void unregister(EventDispatcher dispatcher)","description":"io.spine.system.server.SystemReadSide.unregister","location":"server/io.spine.system.server/-system-read-side/unregister.html","searchKeys":["unregister","abstract void unregister(EventDispatcher dispatcher)","io.spine.system.server.SystemReadSide.unregister"]},{"name":"abstract void write(CatchUp message)","description":"io.spine.server.delivery.CatchUpStorage.write","location":"server/io.spine.server.delivery/-catch-up-storage/write.html","searchKeys":["write","abstract void write(CatchUp message)","io.spine.server.delivery.CatchUpStorage.write"]},{"name":"abstract void write(InboxMessage message)","description":"io.spine.server.delivery.InboxStorage.write","location":"server/io.spine.server.delivery/-inbox-storage/write.html","searchKeys":["write","abstract void write(InboxMessage message)","io.spine.server.delivery.InboxStorage.write"]},{"name":"abstract void write(I id, M record)","description":"io.spine.server.storage.Storage.write","location":"server/io.spine.server.storage/-storage/write.html","searchKeys":["write","abstract void write(I id, M record)","io.spine.server.storage.Storage.write"]},{"name":"abstract void write(ShardSessionRecord session)","description":"io.spine.server.delivery.AbstractWorkRegistry.write","location":"server/io.spine.server.delivery/-abstract-work-registry/write.html","searchKeys":["write","abstract void write(ShardSessionRecord session)","io.spine.server.delivery.AbstractWorkRegistry.write"]},{"name":"abstract void writeAll(Iterable<InboxMessage> messages)","description":"io.spine.server.delivery.InboxStorage.writeAll","location":"server/io.spine.server.delivery/-inbox-storage/write-all.html","searchKeys":["writeAll","abstract void writeAll(Iterable<InboxMessage> messages)","io.spine.server.delivery.InboxStorage.writeAll"]},{"name":"abstract void writeLifecycleFlags(I id, LifecycleFlags flags)","description":"io.spine.server.storage.StorageWithLifecycleFlags.writeLifecycleFlags","location":"server/io.spine.server.storage/-storage-with-lifecycle-flags/write-lifecycle-flags.html","searchKeys":["writeLifecycleFlags","abstract void writeLifecycleFlags(I id, LifecycleFlags flags)","io.spine.server.storage.StorageWithLifecycleFlags.writeLifecycleFlags"]},{"name":"abstract void writeRecord(I id, AggregateEventRecord record)","description":"io.spine.server.aggregate.AggregateStorage.writeRecord","location":"server/io.spine.server.aggregate/-aggregate-storage/write-record.html","searchKeys":["writeRecord","abstract void writeRecord(I id, AggregateEventRecord record)","io.spine.server.aggregate.AggregateStorage.writeRecord"]},{"name":"abstract void writeRecord(I id, EntityRecordWithColumns record)","description":"io.spine.server.storage.RecordStorage.writeRecord","location":"server/io.spine.server.storage/-record-storage/write-record.html","searchKeys":["writeRecord","abstract void writeRecord(I id, EntityRecordWithColumns record)","io.spine.server.storage.RecordStorage.writeRecord"]},{"name":"abstract void writeRecords(Map<I, EntityRecordWithColumns> records)","description":"io.spine.server.storage.RecordStorage.writeRecords","location":"server/io.spine.server.storage/-record-storage/write-records.html","searchKeys":["writeRecords","abstract void writeRecords(Map<I, EntityRecordWithColumns> records)","io.spine.server.storage.RecordStorage.writeRecords"]},{"name":"aggregate_id","description":"io.spine.server.aggregate.AggregateField.aggregate_id","location":"server/io.spine.server.aggregate/-aggregate-field/aggregate_id/index.html","searchKeys":["aggregate_id","aggregate_id","io.spine.server.aggregate.AggregateField.aggregate_id"]},{"name":"archived","description":"io.spine.server.storage.LifecycleFlagField.archived","location":"server/io.spine.server.storage/-lifecycle-flag-field/archived/index.html","searchKeys":["archived","archived","io.spine.server.storage.LifecycleFlagField.archived"]},{"name":"boolean acceptsAll()","description":"io.spine.server.model.ArgumentFilter.acceptsAll","location":"server/io.spine.server.model/-argument-filter/accepts-all.html","searchKeys":["acceptsAll","boolean acceptsAll()","io.spine.server.model.ArgumentFilter.acceptsAll"]},{"name":"boolean are(Array<Class<? extends Object>> types)","description":"io.spine.server.model.MethodParams.are","location":"server/io.spine.server.model/-method-params/are.html","searchKeys":["are","boolean are(Array<Class<? extends Object>> types)","io.spine.server.model.MethodParams.are"]},{"name":"boolean canDispatch(EventEnvelope envelope)","description":"io.spine.server.delivery.CatchUpProcess.canDispatch","location":"server/io.spine.server.delivery/-catch-up-process/can-dispatch.html","searchKeys":["canDispatch","boolean canDispatch(EventEnvelope envelope)","io.spine.server.delivery.CatchUpProcess.canDispatch"]},{"name":"boolean canDispatch(EventEnvelope event)","description":"io.spine.server.event.AbstractEventSubscriber.canDispatch","location":"server/io.spine.server.event/-abstract-event-subscriber/can-dispatch.html","searchKeys":["canDispatch","boolean canDispatch(EventEnvelope event)","io.spine.server.event.AbstractEventSubscriber.canDispatch"]},{"name":"boolean canDispatch(E envelope)","description":"io.spine.server.bus.MessageDispatcher.canDispatch","location":"server/io.spine.server.bus/-message-dispatcher/can-dispatch.html","searchKeys":["canDispatch","boolean canDispatch(E envelope)","io.spine.server.bus.MessageDispatcher.canDispatch"]},{"name":"boolean canQuery()","description":"io.spine.server.entity.EntityVisibility.canQuery","location":"server/io.spine.server.entity/-entity-visibility/can-query.html","searchKeys":["canQuery","boolean canQuery()","io.spine.server.entity.EntityVisibility.canQuery"]},{"name":"boolean canSubscribe()","description":"io.spine.server.entity.EntityVisibility.canSubscribe","location":"server/io.spine.server.entity/-entity-visibility/can-subscribe.html","searchKeys":["canSubscribe","boolean canSubscribe()","io.spine.server.entity.EntityVisibility.canSubscribe"]},{"name":"boolean contains(BoundedContext context)","description":"io.spine.server.CommandService.Builder.contains","location":"server/io.spine.server/-command-service/-builder/contains.html","searchKeys":["contains","boolean contains(BoundedContext context)","io.spine.server.CommandService.Builder.contains"]},{"name":"boolean contains(BoundedContext context)","description":"io.spine.server.QueryService.Builder.contains","location":"server/io.spine.server/-query-service/-builder/contains.html","searchKeys":["contains","boolean contains(BoundedContext context)","io.spine.server.QueryService.Builder.contains"]},{"name":"boolean contains(EventClass eventClass)","description":"io.spine.server.event.model.EventReceivingClassDelegate.contains","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/contains.html","searchKeys":["contains","boolean contains(EventClass eventClass)","io.spine.server.event.model.EventReceivingClassDelegate.contains"]},{"name":"boolean containsClass(M messageClass)","description":"io.spine.server.model.HandlerMap.containsClass","location":"server/io.spine.server.model/-handler-map/contains-class.html","searchKeys":["containsClass","boolean containsClass(M messageClass)","io.spine.server.model.HandlerMap.containsClass"]},{"name":"boolean delete(I id)","description":"io.spine.server.storage.memory.InMemoryProjectionStorage.delete","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/delete.html","searchKeys":["delete","boolean delete(I id)","io.spine.server.storage.memory.InMemoryProjectionStorage.delete"]},{"name":"boolean delete(I id)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.delete","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/delete.html","searchKeys":["delete","boolean delete(I id)","io.spine.server.storage.memory.InMemoryRecordStorage.delete"]},{"name":"boolean dispatchesCommands()","description":"io.spine.server.commandbus.CommandDispatcher.dispatchesCommands","location":"server/io.spine.server.commandbus/-command-dispatcher/dispatches-commands.html","searchKeys":["dispatchesCommands","boolean dispatchesCommands()","io.spine.server.commandbus.CommandDispatcher.dispatchesCommands"]},{"name":"boolean dispatchesCommands()","description":"io.spine.server.commandbus.CommandDispatcherDelegate.dispatchesCommands","location":"server/io.spine.server.commandbus/-command-dispatcher-delegate/dispatches-commands.html","searchKeys":["dispatchesCommands","boolean dispatchesCommands()","io.spine.server.commandbus.CommandDispatcherDelegate.dispatchesCommands"]},{"name":"boolean dispatchesEvents()","description":"io.spine.server.event.EventDispatcher.dispatchesEvents","location":"server/io.spine.server.event/-event-dispatcher/dispatches-events.html","searchKeys":["dispatchesEvents","boolean dispatchesEvents()","io.spine.server.event.EventDispatcher.dispatchesEvents"]},{"name":"boolean dispatchesEvents()","description":"io.spine.server.event.EventDispatcherDelegate.dispatchesEvents","location":"server/io.spine.server.event/-event-dispatcher-delegate/dispatches-events.html","searchKeys":["dispatchesEvents","boolean dispatchesEvents()","io.spine.server.event.EventDispatcherDelegate.dispatchesEvents"]},{"name":"boolean dispatchesExternalEvents()","description":"io.spine.server.event.EventDispatcher.dispatchesExternalEvents","location":"server/io.spine.server.event/-event-dispatcher/dispatches-external-events.html","searchKeys":["dispatchesExternalEvents","boolean dispatchesExternalEvents()","io.spine.server.event.EventDispatcher.dispatchesExternalEvents"]},{"name":"boolean dispatchesExternalEvents()","description":"io.spine.server.event.EventDispatcherDelegate.dispatchesExternalEvents","location":"server/io.spine.server.event/-event-dispatcher-delegate/dispatches-external-events.html","searchKeys":["dispatchesExternalEvents","boolean dispatchesExternalEvents()","io.spine.server.event.EventDispatcherDelegate.dispatchesExternalEvents"]},{"name":"boolean equals(Object o)","description":"io.spine.server.ContextSpec.equals","location":"server/io.spine.server/-context-spec/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.ContextSpec.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.aggregate.AggregateReadRequest.equals","location":"server/io.spine.server.aggregate/-aggregate-read-request/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.aggregate.AggregateReadRequest.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.command.AbstractCommandDispatcher.equals","location":"server/io.spine.server.command/-abstract-command-dispatcher/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.command.AbstractCommandDispatcher.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.entity.AbstractEntity.equals","location":"server/io.spine.server.entity/-abstract-entity/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.entity.AbstractEntity.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.entity.model.EntityClass.equals","location":"server/io.spine.server.entity.model/-entity-class/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.entity.model.EntityClass.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.entity.storage.CompositeQueryParameter.equals","location":"server/io.spine.server.entity.storage/-composite-query-parameter/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.entity.storage.CompositeQueryParameter.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.entity.storage.EntityQuery.equals","location":"server/io.spine.server.entity.storage/-entity-query/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.entity.storage.EntityQuery.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.equals","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.entity.storage.EntityRecordWithColumns.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.entity.storage.QueryParameters.equals","location":"server/io.spine.server.entity.storage/-query-parameters/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.entity.storage.QueryParameters.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.integration.AbstractChannelObserver.equals","location":"server/io.spine.server.integration/-abstract-channel-observer/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.integration.AbstractChannelObserver.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.model.AllowedParams.equals","location":"server/io.spine.server.model/-allowed-params/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.model.AllowedParams.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.model.ArgumentFilter.equals","location":"server/io.spine.server.model/-argument-filter/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.model.ArgumentFilter.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.model.MethodParams.equals","location":"server/io.spine.server.model/-method-params/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.model.MethodParams.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.model.ReturnTypes.equals","location":"server/io.spine.server.model/-return-types/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.model.ReturnTypes.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.storage.RecordReadRequest.equals","location":"server/io.spine.server.storage/-record-read-request/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.storage.RecordReadRequest.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.server.tenant.IdInTenant.equals","location":"server/io.spine.server.tenant/-id-in-tenant/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.server.tenant.IdInTenant.equals"]},{"name":"boolean equals(Object o)","description":"io.spine.system.server.SystemSettings.equals","location":"server/io.spine.system.server/-system-settings/equals.html","searchKeys":["equals","boolean equals(Object o)","io.spine.system.server.SystemSettings.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.entity.RecentHistory.equals","location":"server/io.spine.server.entity/-recent-history/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.entity.RecentHistory.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.entity.StorageConverter.equals","location":"server/io.spine.server.entity/-storage-converter/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.entity.StorageConverter.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.entity.model.AbstractEntityFactory.equals","location":"server/io.spine.server.entity.model/-abstract-entity-factory/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.entity.model.AbstractEntityFactory.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.model.AbstractHandlerMethod.equals","location":"server/io.spine.server.model/-abstract-handler-method/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.model.AbstractHandlerMethod.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.model.DispatchKey.equals","location":"server/io.spine.server.model/-dispatch-key/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.model.DispatchKey.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.storage.memory.StorageSpec.equals","location":"server/io.spine.server.storage.memory/-storage-spec/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.storage.memory.StorageSpec.equals"]},{"name":"boolean equals(Object obj)","description":"io.spine.server.type.AbstractMessageEnvelope.equals","location":"server/io.spine.server.type/-abstract-message-envelope/equals.html","searchKeys":["equals","boolean equals(Object obj)","io.spine.server.type.AbstractMessageEnvelope.equals"]},{"name":"boolean getArchived()","description":"io.spine.server.entity.HasLifecycleColumns.getArchived","location":"server/io.spine.server.entity/-has-lifecycle-columns/get-archived.html","searchKeys":["getArchived","boolean getArchived()","io.spine.server.entity.HasLifecycleColumns.getArchived"]},{"name":"boolean getDeleted()","description":"io.spine.server.entity.HasLifecycleColumns.getDeleted","location":"server/io.spine.server.entity/-has-lifecycle-columns/get-deleted.html","searchKeys":["getDeleted","boolean getDeleted()","io.spine.server.entity.HasLifecycleColumns.getDeleted"]},{"name":"boolean handlesCommand(CommandClass commandClass)","description":"io.spine.server.entity.model.CommandHandlingEntityClass.handlesCommand","location":"server/io.spine.server.entity.model/-command-handling-entity-class/handles-command.html","searchKeys":["handlesCommand","boolean handlesCommand(CommandClass commandClass)","io.spine.server.entity.model.CommandHandlingEntityClass.handlesCommand"]},{"name":"boolean hasChannel(ChannelId id)","description":"io.spine.server.transport.ChannelHub.hasChannel","location":"server/io.spine.server.transport/-channel-hub/has-channel.html","searchKeys":["hasChannel","boolean hasChannel(ChannelId id)","io.spine.server.transport.ChannelHub.hasChannel"]},{"name":"boolean hasColumn(ColumnName name)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.hasColumn","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/has-column.html","searchKeys":["hasColumn","boolean hasColumn(ColumnName name)","io.spine.server.entity.storage.EntityRecordWithColumns.hasColumn"]},{"name":"boolean hasColumns()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.hasColumns","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/has-columns.html","searchKeys":["hasColumns","boolean hasColumns()","io.spine.server.entity.storage.EntityRecordWithColumns.hasColumns"]},{"name":"boolean hasEntitiesOfType(Class<? extends Entity<? extends Object, ? extends Object>> entityClass)","description":"io.spine.server.BoundedContext.hasEntitiesOfType","location":"server/io.spine.server/-bounded-context/has-entities-of-type.html","searchKeys":["hasEntitiesOfType","boolean hasEntitiesOfType(Class<? extends Entity<? extends Object, ? extends Object>> entityClass)","io.spine.server.BoundedContext.hasEntitiesOfType"]},{"name":"boolean hasEntitiesWithState(Class<? extends EntityState> stateClass)","description":"io.spine.server.BoundedContext.hasEntitiesWithState","location":"server/io.spine.server/-bounded-context/has-entities-with-state.html","searchKeys":["hasEntitiesWithState","boolean hasEntitiesWithState(Class<? extends EntityState> stateClass)","io.spine.server.BoundedContext.hasEntitiesWithState"]},{"name":"boolean hasFilter(BusFilter<E> filter)","description":"io.spine.server.bus.Bus.hasFilter","location":"server/io.spine.server.bus/-bus/has-filter.html","searchKeys":["hasFilter","boolean hasFilter(BusFilter<E> filter)","io.spine.server.bus.Bus.hasFilter"]},{"name":"boolean hasLifecycle()","description":"io.spine.server.entity.storage.CompositeQueryParameter.hasLifecycle","location":"server/io.spine.server.entity.storage/-composite-query-parameter/has-lifecycle.html","searchKeys":["hasLifecycle","boolean hasLifecycle()","io.spine.server.entity.storage.CompositeQueryParameter.hasLifecycle"]},{"name":"boolean hasListener(Listener<E> listener)","description":"io.spine.server.bus.Bus.hasListener","location":"server/io.spine.server.bus/-bus/has-listener.html","searchKeys":["hasListener","boolean hasListener(Listener<E> listener)","io.spine.server.bus.Bus.hasListener"]},{"name":"boolean includeAggregateMirroring()","description":"io.spine.system.server.SystemSettings.includeAggregateMirroring","location":"server/io.spine.system.server/-system-settings/include-aggregate-mirroring.html","searchKeys":["includeAggregateMirroring","boolean includeAggregateMirroring()","io.spine.system.server.SystemSettings.includeAggregateMirroring"]},{"name":"boolean includeCommandLog()","description":"io.spine.system.server.SystemSettings.includeCommandLog","location":"server/io.spine.system.server/-system-settings/include-command-log.html","searchKeys":["includeCommandLog","boolean includeCommandLog()","io.spine.system.server.SystemSettings.includeCommandLog"]},{"name":"boolean includePersistentEvents()","description":"io.spine.system.server.SystemSettings.includePersistentEvents","location":"server/io.spine.system.server/-system-settings/include-persistent-events.html","searchKeys":["includePersistentEvents","boolean includePersistentEvents()","io.spine.system.server.SystemSettings.includePersistentEvents"]},{"name":"boolean is(TypeMatcher type)","description":"io.spine.server.model.MethodParams.is","location":"server/io.spine.server.model/-method-params/is.html","searchKeys":["is","boolean is(TypeMatcher type)","io.spine.server.model.MethodParams.is"]},{"name":"boolean is(Visibility visibility)","description":"io.spine.server.entity.EntityVisibility.is","location":"server/io.spine.server.entity/-entity-visibility/is.html","searchKeys":["is","boolean is(Visibility visibility)","io.spine.server.entity.EntityVisibility.is"]},{"name":"boolean isActive()","description":"io.spine.server.entity.WithLifecycle.isActive","location":"server/io.spine.server.entity/-with-lifecycle/is-active.html","searchKeys":["isActive","boolean isActive()","io.spine.server.entity.WithLifecycle.isActive"]},{"name":"boolean isActive()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.isActive","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/is-active.html","searchKeys":["isActive","boolean isActive()","io.spine.server.entity.storage.EntityRecordWithColumns.isActive"]},{"name":"boolean isArchived()","description":"io.spine.server.entity.WithLifecycle.isArchived","location":"server/io.spine.server.entity/-with-lifecycle/is-archived.html","searchKeys":["isArchived","boolean isArchived()","io.spine.server.entity.WithLifecycle.isArchived"]},{"name":"boolean isArchived()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.isArchived","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/is-archived.html","searchKeys":["isArchived","boolean isArchived()","io.spine.server.entity.storage.EntityRecordWithColumns.isArchived"]},{"name":"boolean isAsLeast(Visibility visibility)","description":"io.spine.server.entity.EntityVisibility.isAsLeast","location":"server/io.spine.server.entity/-entity-visibility/is-as-least.html","searchKeys":["isAsLeast","boolean isAsLeast(Visibility visibility)","io.spine.server.entity.EntityVisibility.isAsLeast"]},{"name":"boolean isCatchUpEnabled()","description":"io.spine.server.projection.ProjectionRepository.isCatchUpEnabled","location":"server/io.spine.server.projection/-projection-repository/is-catch-up-enabled.html","searchKeys":["isCatchUpEnabled","boolean isCatchUpEnabled()","io.spine.server.projection.ProjectionRepository.isCatchUpEnabled"]},{"name":"boolean isCatchUpEnabled()","description":"io.spine.system.server.MirrorRepository.isCatchUpEnabled","location":"server/io.spine.system.server/-mirror-repository/is-catch-up-enabled.html","searchKeys":["isCatchUpEnabled","boolean isCatchUpEnabled()","io.spine.system.server.MirrorRepository.isCatchUpEnabled"]},{"name":"boolean isClosed()","description":"io.spine.server.storage.AbstractStorage.isClosed","location":"server/io.spine.server.storage/-abstract-storage/is-closed.html","searchKeys":["isClosed","boolean isClosed()","io.spine.server.storage.AbstractStorage.isClosed"]},{"name":"boolean isDeleted()","description":"io.spine.server.entity.WithLifecycle.isDeleted","location":"server/io.spine.server.entity/-with-lifecycle/is-deleted.html","searchKeys":["isDeleted","boolean isDeleted()","io.spine.server.entity.WithLifecycle.isDeleted"]},{"name":"boolean isDeleted()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.isDeleted","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/is-deleted.html","searchKeys":["isDeleted","boolean isDeleted()","io.spine.server.entity.storage.EntityRecordWithColumns.isDeleted"]},{"name":"boolean isDomestic()","description":"io.spine.server.model.HandlerMethod.isDomestic","location":"server/io.spine.server.model/-handler-method/is-domestic.html","searchKeys":["isDomestic","boolean isDomestic()","io.spine.server.model.HandlerMethod.isDomestic"]},{"name":"boolean isEmpty()","description":"io.spine.server.entity.RecentHistory.isEmpty","location":"server/io.spine.server.entity/-recent-history/is-empty.html","searchKeys":["isEmpty","boolean isEmpty()","io.spine.server.entity.RecentHistory.isEmpty"]},{"name":"boolean isExternal()","description":"io.spine.server.model.HandlerMethod.isExternal","location":"server/io.spine.server.model/-handler-method/is-external.html","searchKeys":["isExternal","boolean isExternal()","io.spine.server.model.HandlerMethod.isExternal"]},{"name":"boolean isExternal()","description":"io.spine.server.type.EventEnvelope.isExternal","location":"server/io.spine.server.type/-event-envelope/is-external.html","searchKeys":["isExternal","boolean isExternal()","io.spine.server.type.EventEnvelope.isExternal"]},{"name":"boolean isLifecycleAttributesSet()","description":"io.spine.server.entity.storage.EntityQuery.isLifecycleAttributesSet","location":"server/io.spine.server.entity.storage/-entity-query/is-lifecycle-attributes-set.html","searchKeys":["isLifecycleAttributesSet","boolean isLifecycleAttributesSet()","io.spine.server.entity.storage.EntityQuery.isLifecycleAttributesSet"]},{"name":"boolean isLifecycleAttributesSet()","description":"io.spine.server.entity.storage.QueryParameters.isLifecycleAttributesSet","location":"server/io.spine.server.entity.storage/-query-parameters/is-lifecycle-attributes-set.html","searchKeys":["isLifecycleAttributesSet","boolean isLifecycleAttributesSet()","io.spine.server.entity.storage.QueryParameters.isLifecycleAttributesSet"]},{"name":"boolean isLive(BindableService service)","description":"io.spine.server.GrpcContainer.isLive","location":"server/io.spine.server/-grpc-container/is-live.html","searchKeys":["isLive","boolean isLive(BindableService service)","io.spine.server.GrpcContainer.isLive"]},{"name":"boolean isMirroring(TypeUrl type)","description":"io.spine.system.server.MirrorRepository.isMirroring","location":"server/io.spine.system.server/-mirror-repository/is-mirroring.html","searchKeys":["isMirroring","boolean isMirroring(TypeUrl type)","io.spine.system.server.MirrorRepository.isMirroring"]},{"name":"boolean isModified(P projection)","description":"io.spine.server.projection.ProjectionEndpoint.isModified","location":"server/io.spine.server.projection/-projection-endpoint/is-modified.html","searchKeys":["isModified","boolean isModified(P projection)","io.spine.server.projection.ProjectionEndpoint.isModified"]},{"name":"boolean isMultitenant()","description":"io.spine.server.BoundedContext.isMultitenant","location":"server/io.spine.server/-bounded-context/is-multitenant.html","searchKeys":["isMultitenant","boolean isMultitenant()","io.spine.server.BoundedContext.isMultitenant"]},{"name":"boolean isMultitenant()","description":"io.spine.server.BoundedContextBuilder.isMultitenant","location":"server/io.spine.server/-bounded-context-builder/is-multitenant.html","searchKeys":["isMultitenant","boolean isMultitenant()","io.spine.server.BoundedContextBuilder.isMultitenant"]},{"name":"boolean isMultitenant()","description":"io.spine.server.ContextSpec.isMultitenant","location":"server/io.spine.server/-context-spec/is-multitenant.html","searchKeys":["isMultitenant","boolean isMultitenant()","io.spine.server.ContextSpec.isMultitenant"]},{"name":"boolean isMultitenant()","description":"io.spine.server.stand.Stand.isMultitenant","location":"server/io.spine.server.stand/-stand/is-multitenant.html","searchKeys":["isMultitenant","boolean isMultitenant()","io.spine.server.stand.Stand.isMultitenant"]},{"name":"boolean isMultitenant()","description":"io.spine.server.storage.AbstractStorage.isMultitenant","location":"server/io.spine.server.storage/-abstract-storage/is-multitenant.html","searchKeys":["isMultitenant","boolean isMultitenant()","io.spine.server.storage.AbstractStorage.isMultitenant"]},{"name":"boolean isNotNone()","description":"io.spine.server.entity.EntityVisibility.isNotNone","location":"server/io.spine.server.entity/-entity-visibility/is-not-none.html","searchKeys":["isNotNone","boolean isNotNone()","io.spine.server.entity.EntityVisibility.isNotNone"]},{"name":"boolean isOpen()","description":"io.spine.server.BoundedContext.isOpen","location":"server/io.spine.server/-bounded-context/is-open.html","searchKeys":["isOpen","boolean isOpen()","io.spine.server.BoundedContext.isOpen"]},{"name":"boolean isOpen()","description":"io.spine.server.commandbus.CommandScheduler.isOpen","location":"server/io.spine.server.commandbus/-command-scheduler/is-open.html","searchKeys":["isOpen","boolean isOpen()","io.spine.server.commandbus.CommandScheduler.isOpen"]},{"name":"boolean isOpen()","description":"io.spine.server.event.store.EmptyEventStore.isOpen","location":"server/io.spine.server.event.store/-empty-event-store/is-open.html","searchKeys":["isOpen","boolean isOpen()","io.spine.server.event.store.EmptyEventStore.isOpen"]},{"name":"boolean isOpen()","description":"io.spine.server.integration.ThirdPartyContext.isOpen","location":"server/io.spine.server.integration/-third-party-context/is-open.html","searchKeys":["isOpen","boolean isOpen()","io.spine.server.integration.ThirdPartyContext.isOpen"]},{"name":"boolean isOpen()","description":"io.spine.server.storage.AbstractStorage.isOpen","location":"server/io.spine.server.storage/-abstract-storage/is-open.html","searchKeys":["isOpen","boolean isOpen()","io.spine.server.storage.AbstractStorage.isOpen"]},{"name":"boolean isRegistered()","description":"io.spine.server.command.AbstractCommandDispatcher.isRegistered","location":"server/io.spine.server.command/-abstract-command-dispatcher/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.command.AbstractCommandDispatcher.isRegistered"]},{"name":"boolean isRegistered()","description":"io.spine.server.entity.Repository.isRegistered","location":"server/io.spine.server.entity/-repository/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.entity.Repository.isRegistered"]},{"name":"boolean isRegistered()","description":"io.spine.server.event.AbstractEventReactor.isRegistered","location":"server/io.spine.server.event/-abstract-event-reactor/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.event.AbstractEventReactor.isRegistered"]},{"name":"boolean isRegistered()","description":"io.spine.server.event.AbstractEventSubscriber.isRegistered","location":"server/io.spine.server.event/-abstract-event-subscriber/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.event.AbstractEventSubscriber.isRegistered"]},{"name":"boolean isRegistered()","description":"io.spine.server.event.EventBus.isRegistered","location":"server/io.spine.server.event/-event-bus/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.event.EventBus.isRegistered"]},{"name":"boolean isRegistered()","description":"io.spine.server.event.store.EmptyEventStore.isRegistered","location":"server/io.spine.server.event.store/-empty-event-store/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.event.store.EmptyEventStore.isRegistered"]},{"name":"boolean isRegistered()","description":"io.spine.server.integration.IntegrationBroker.isRegistered","location":"server/io.spine.server.integration/-integration-broker/is-registered.html","searchKeys":["isRegistered","boolean isRegistered()","io.spine.server.integration.IntegrationBroker.isRegistered"]},{"name":"boolean isRejection()","description":"io.spine.server.type.EventEnvelope.isRejection","location":"server/io.spine.server.type/-event-envelope/is-rejection.html","searchKeys":["isRejection","boolean isRejection()","io.spine.server.type.EventEnvelope.isRejection"]},{"name":"boolean isScheduledForDeployment(BindableService service)","description":"io.spine.server.GrpcContainer.isScheduledForDeployment","location":"server/io.spine.server/-grpc-container/is-scheduled-for-deployment.html","searchKeys":["isScheduledForDeployment","boolean isScheduledForDeployment(BindableService service)","io.spine.server.GrpcContainer.isScheduledForDeployment"]},{"name":"boolean isShutdown()","description":"io.spine.server.GrpcContainer.isShutdown","location":"server/io.spine.server/-grpc-container/is-shutdown.html","searchKeys":["isShutdown","boolean isShutdown()","io.spine.server.GrpcContainer.isShutdown"]},{"name":"boolean isStale()","description":"io.spine.server.transport.Subscriber.isStale","location":"server/io.spine.server.transport/-subscriber/is-stale.html","searchKeys":["isStale","boolean isStale()","io.spine.server.transport.Subscriber.isStale"]},{"name":"boolean isStale()","description":"io.spine.server.transport.memory.InMemoryPublisher.isStale","location":"server/io.spine.server.transport.memory/-in-memory-publisher/is-stale.html","searchKeys":["isStale","boolean isStale()","io.spine.server.transport.memory.InMemoryPublisher.isStale"]},{"name":"boolean isTypeSupplier()","description":"io.spine.server.entity.Repository.isTypeSupplier","location":"server/io.spine.server.entity/-repository/is-type-supplier.html","searchKeys":["isTypeSupplier","boolean isTypeSupplier()","io.spine.server.entity.Repository.isTypeSupplier"]},{"name":"boolean isTypeSupplier()","description":"io.spine.server.event.store.DefaultEventStore.isTypeSupplier","location":"server/io.spine.server.event.store/-default-event-store/is-type-supplier.html","searchKeys":["isTypeSupplier","boolean isTypeSupplier()","io.spine.server.event.store.DefaultEventStore.isTypeSupplier"]},{"name":"boolean lifecycleFlagsChanged()","description":"io.spine.server.entity.AbstractEntity.lifecycleFlagsChanged","location":"server/io.spine.server.entity/-abstract-entity/lifecycle-flags-changed.html","searchKeys":["lifecycleFlagsChanged","boolean lifecycleFlagsChanged()","io.spine.server.entity.AbstractEntity.lifecycleFlagsChanged"]},{"name":"boolean match(Array<TypeMatcher> criteria)","description":"io.spine.server.model.MethodParams.match","location":"server/io.spine.server.model/-method-params/match.html","searchKeys":["match","boolean match(Array<TypeMatcher> criteria)","io.spine.server.model.MethodParams.match"]},{"name":"boolean match(List<TypeMatcher> criteria)","description":"io.spine.server.model.MethodParams.match","location":"server/io.spine.server.model/-method-params/match.html","searchKeys":["match","boolean match(List<TypeMatcher> criteria)","io.spine.server.model.MethodParams.match"]},{"name":"boolean mayReturnIgnored()","description":"io.spine.server.command.model.CommandReactionSignature.mayReturnIgnored","location":"server/io.spine.server.command.model/-command-reaction-signature/may-return-ignored.html","searchKeys":["mayReturnIgnored","boolean mayReturnIgnored()","io.spine.server.command.model.CommandReactionSignature.mayReturnIgnored"]},{"name":"boolean mayReturnIgnored()","description":"io.spine.server.event.model.SubscriberSignature.mayReturnIgnored","location":"server/io.spine.server.event.model/-subscriber-signature/may-return-ignored.html","searchKeys":["mayReturnIgnored","boolean mayReturnIgnored()","io.spine.server.event.model.SubscriberSignature.mayReturnIgnored"]},{"name":"boolean postEventsInParallel()","description":"io.spine.system.server.SystemSettings.postEventsInParallel","location":"server/io.spine.system.server/-system-settings/post-events-in-parallel.html","searchKeys":["postEventsInParallel","boolean postEventsInParallel()","io.spine.system.server.SystemSettings.postEventsInParallel"]},{"name":"boolean producesCommandsOn(EventClass eventClass)","description":"io.spine.server.command.model.CommanderClass.producesCommandsOn","location":"server/io.spine.server.command.model/-commander-class/produces-commands-on.html","searchKeys":["producesCommandsOn","boolean producesCommandsOn(EventClass eventClass)","io.spine.server.command.model.CommanderClass.producesCommandsOn"]},{"name":"boolean producesCommandsOn(EventClass eventClass)","description":"io.spine.server.procman.model.ProcessManagerClass.producesCommandsOn","location":"server/io.spine.server.procman.model/-process-manager-class/produces-commands-on.html","searchKeys":["producesCommandsOn","boolean producesCommandsOn(EventClass eventClass)","io.spine.server.procman.model.ProcessManagerClass.producesCommandsOn"]},{"name":"boolean reactsOnEvent(EventClass eventClass)","description":"io.spine.server.procman.model.ProcessManagerClass.reactsOnEvent","location":"server/io.spine.server.procman.model/-process-manager-class/reacts-on-event.html","searchKeys":["reactsOnEvent","boolean reactsOnEvent(EventClass eventClass)","io.spine.server.procman.model.ProcessManagerClass.reactsOnEvent"]},{"name":"boolean shouldContinueAfter(DeliveryStage stage)","description":"io.spine.server.delivery.DeliveryMonitor.shouldContinueAfter","location":"server/io.spine.server.delivery/-delivery-monitor/should-continue-after.html","searchKeys":["shouldContinueAfter","boolean shouldContinueAfter(DeliveryStage stage)","io.spine.server.delivery.DeliveryMonitor.shouldContinueAfter"]},{"name":"boolean skipMethod(Method method)","description":"io.spine.server.command.model.CommandReactionSignature.skipMethod","location":"server/io.spine.server.command.model/-command-reaction-signature/skip-method.html","searchKeys":["skipMethod","boolean skipMethod(Method method)","io.spine.server.command.model.CommandReactionSignature.skipMethod"]},{"name":"boolean skipMethod(Method method)","description":"io.spine.server.command.model.CommandSubstituteSignature.skipMethod","location":"server/io.spine.server.command.model/-command-substitute-signature/skip-method.html","searchKeys":["skipMethod","boolean skipMethod(Method method)","io.spine.server.command.model.CommandSubstituteSignature.skipMethod"]},{"name":"boolean skipMethod(Method method)","description":"io.spine.server.model.MethodSignature.skipMethod","location":"server/io.spine.server.model/-method-signature/skip-method.html","searchKeys":["skipMethod","boolean skipMethod(Method method)","io.spine.server.model.MethodSignature.skipMethod"]},{"name":"boolean storesEvents()","description":"io.spine.server.ContextSpec.storesEvents","location":"server/io.spine.server/-context-spec/stores-events.html","searchKeys":["storesEvents","boolean storesEvents()","io.spine.server.ContextSpec.storesEvents"]},{"name":"boolean subscribesToStates()","description":"io.spine.server.entity.model.StateSubscribingClass.subscribesToStates","location":"server/io.spine.server.entity.model/-state-subscribing-class/subscribes-to-states.html","searchKeys":["subscribesToStates","boolean subscribesToStates()","io.spine.server.entity.model.StateSubscribingClass.subscribesToStates"]},{"name":"boolean substitutesCommand(CommandClass commandClass)","description":"io.spine.server.command.model.CommanderClass.substitutesCommand","location":"server/io.spine.server.command.model/-commander-class/substitutes-command.html","searchKeys":["substitutesCommand","boolean substitutesCommand(CommandClass commandClass)","io.spine.server.command.model.CommanderClass.substitutesCommand"]},{"name":"boolean substitutesCommand(CommandClass commandClass)","description":"io.spine.server.procman.model.ProcessManagerClass.substitutesCommand","location":"server/io.spine.server.procman.model/-process-manager-class/substitutes-command.html","searchKeys":["substitutesCommand","boolean substitutesCommand(CommandClass commandClass)","io.spine.server.procman.model.ProcessManagerClass.substitutesCommand"]},{"name":"boolean supports(Class<? extends EntityState> stateType)","description":"io.spine.server.route.StateUpdateRouting.supports","location":"server/io.spine.server.route/-state-update-routing/supports.html","searchKeys":["supports","boolean supports(Class<? extends EntityState> stateType)","io.spine.server.route.StateUpdateRouting.supports"]},{"name":"boolean test(EventMessage event)","description":"io.spine.server.model.ArgumentFilter.test","location":"server/io.spine.server.model/-argument-filter/test.html","searchKeys":["test","boolean test(EventMessage event)","io.spine.server.model.ArgumentFilter.test"]},{"name":"boolean test(Method method)","description":"io.spine.server.model.AccessModifier.test","location":"server/io.spine.server.model/-access-modifier/test.html","searchKeys":["test","boolean test(Method method)","io.spine.server.model.AccessModifier.test"]},{"name":"bytes","description":"io.spine.server.storage.StateField.bytes","location":"server/io.spine.server.storage/-state-field/bytes/index.html","searchKeys":["bytes","bytes","io.spine.server.storage.StateField.bytes"]},{"name":"context_of_command","description":"io.spine.server.event.storage.EventContextField.context_of_command","location":"server/io.spine.server.event.storage/-event-context-field/context_of_command/index.html","searchKeys":["context_of_command","context_of_command","io.spine.server.event.storage.EventContextField.context_of_command"]},{"name":"context_timestamp","description":"io.spine.server.event.storage.EventContextField.context_timestamp","location":"server/io.spine.server.event.storage/-event-context-field/context_timestamp/index.html","searchKeys":["context_timestamp","context_timestamp","io.spine.server.event.storage.EventContextField.context_timestamp"]},{"name":"context_version","description":"io.spine.server.event.storage.EventContextField.context_version","location":"server/io.spine.server.event.storage/-event-context-field/context_version/index.html","searchKeys":["context_version","context_version","io.spine.server.event.storage.EventContextField.context_version"]},{"name":"deleted","description":"io.spine.server.storage.LifecycleFlagField.deleted","location":"server/io.spine.server.storage/-lifecycle-flag-field/deleted/index.html","searchKeys":["deleted","deleted","io.spine.server.storage.LifecycleFlagField.deleted"]},{"name":"event_id","description":"io.spine.server.event.storage.EventField.event_id","location":"server/io.spine.server.event.storage/-event-field/event_id/index.html","searchKeys":["event_id","event_id","io.spine.server.event.storage.EventField.event_id"]},{"name":"event_type","description":"io.spine.server.event.storage.EventField.event_type","location":"server/io.spine.server.event.storage/-event-field/event_type/index.html","searchKeys":["event_type","event_type","io.spine.server.event.storage.EventField.event_type"]},{"name":"final AggregateClass<A> aggregateClass()","description":"io.spine.server.aggregate.AggregateRepository.aggregateClass","location":"server/io.spine.server.aggregate/-aggregate-repository/aggregate-class.html","searchKeys":["aggregateClass","final AggregateClass<A> aggregateClass()","io.spine.server.aggregate.AggregateRepository.aggregateClass"]},{"name":"final AggregatePartClass<? extends Object> modelClass()","description":"io.spine.server.aggregate.AggregatePart.modelClass","location":"server/io.spine.server.aggregate/-aggregate-part/model-class.html","searchKeys":["modelClass","final AggregatePartClass<? extends Object> modelClass()","io.spine.server.aggregate.AggregatePart.modelClass"]},{"name":"final AggregatePartClass<A> toModelClass(Class<A> cls)","description":"io.spine.server.aggregate.AggregatePartRepository.toModelClass","location":"server/io.spine.server.aggregate/-aggregate-part-repository/to-model-class.html","searchKeys":["toModelClass","final AggregatePartClass<A> toModelClass(Class<A> cls)","io.spine.server.aggregate.AggregatePartRepository.toModelClass"]},{"name":"final Api at(Level logLevel)","description":"io.spine.server.entity.AbstractEntity.at","location":"server/io.spine.server.entity/-abstract-entity/at.html","searchKeys":["at","final Api at(Level logLevel)","io.spine.server.entity.AbstractEntity.at"]},{"name":"final Applier applierOf(EventClass eventClass)","description":"io.spine.server.aggregate.model.AggregateClass.applierOf","location":"server/io.spine.server.aggregate.model/-aggregate-class/applier-of.html","searchKeys":["applierOf","final Applier applierOf(EventClass eventClass)","io.spine.server.aggregate.model.AggregateClass.applierOf"]},{"name":"final ArgumentFilter filter()","description":"io.spine.server.event.model.SubscriberMethod.filter","location":"server/io.spine.server.event.model/-subscriber-method/filter.html","searchKeys":["filter","final ArgumentFilter filter()","io.spine.server.event.model.SubscriberMethod.filter"]},{"name":"final BatchDispatchOutcome play(Iterable<Event> events)","description":"io.spine.server.aggregate.Aggregate.play","location":"server/io.spine.server.aggregate/-aggregate/play.html","searchKeys":["play","final BatchDispatchOutcome play(Iterable<Event> events)","io.spine.server.aggregate.Aggregate.play"]},{"name":"final BoundedContext.InternalAccess internalAccess()","description":"io.spine.server.BoundedContext.internalAccess","location":"server/io.spine.server/-bounded-context/internal-access.html","searchKeys":["internalAccess","final BoundedContext.InternalAccess internalAccess()","io.spine.server.BoundedContext.internalAccess"]},{"name":"final BoundedContext context()","description":"io.spine.server.bus.BusBuilder.context","location":"server/io.spine.server.bus/-bus-builder/context.html","searchKeys":["context","final BoundedContext context()","io.spine.server.bus.BusBuilder.context"]},{"name":"final BoundedContext context()","description":"io.spine.server.entity.Repository.context","location":"server/io.spine.server.entity/-repository/context.html","searchKeys":["context","final BoundedContext context()","io.spine.server.entity.Repository.context"]},{"name":"final B addListener(Listener<E> listener)","description":"io.spine.server.bus.BusBuilder.addListener","location":"server/io.spine.server.bus/-bus-builder/add-listener.html","searchKeys":["addListener","final B addListener(Listener<E> listener)","io.spine.server.bus.BusBuilder.addListener"]},{"name":"final B appendFilter(BusFilter<E> filter)","description":"io.spine.server.bus.BusBuilder.appendFilter","location":"server/io.spine.server.bus/-bus-builder/append-filter.html","searchKeys":["appendFilter","final B appendFilter(BusFilter<E> filter)","io.spine.server.bus.BusBuilder.appendFilter"]},{"name":"final B builder()","description":"io.spine.server.aggregate.Aggregate.builder","location":"server/io.spine.server.aggregate/-aggregate/builder.html","searchKeys":["builder","final B builder()","io.spine.server.aggregate.Aggregate.builder"]},{"name":"final B builder()","description":"io.spine.server.procman.ProcessManager.builder","location":"server/io.spine.server.procman/-process-manager/builder.html","searchKeys":["builder","final B builder()","io.spine.server.procman.ProcessManager.builder"]},{"name":"final B builder()","description":"io.spine.server.projection.Projection.builder","location":"server/io.spine.server.projection/-projection/builder.html","searchKeys":["builder","final B builder()","io.spine.server.projection.Projection.builder"]},{"name":"final B doAdd<S extends M, T extends Message>(Class<S> messageClassOrInterface, Class<T> enrichmentClass, EnrichmentFn<S, C, T> func)","description":"io.spine.server.enrich.EnricherBuilder.doAdd","location":"server/io.spine.server.enrich/-enricher-builder/do-add.html","searchKeys":["doAdd","final B doAdd<S extends M, T extends Message>(Class<S> messageClassOrInterface, Class<T> enrichmentClass, EnrichmentFn<S, C, T> func)","io.spine.server.enrich.EnricherBuilder.doAdd"]},{"name":"final B removeListener(Listener<E> listener)","description":"io.spine.server.bus.BusBuilder.removeListener","location":"server/io.spine.server.bus/-bus-builder/remove-listener.html","searchKeys":["removeListener","final B removeListener(Listener<E> listener)","io.spine.server.bus.BusBuilder.removeListener"]},{"name":"final Class<? extends Annotation> annotation()","description":"io.spine.server.model.MethodSignature.annotation","location":"server/io.spine.server.model/-method-signature/annotation.html","searchKeys":["annotation","final Class<? extends Annotation> annotation()","io.spine.server.model.MethodSignature.annotation"]},{"name":"final Class<? extends EntityState> stateClass()","description":"io.spine.server.entity.model.EntityClass.stateClass","location":"server/io.spine.server.entity.model/-entity-class/state-class.html","searchKeys":["stateClass","final Class<? extends EntityState> stateClass()","io.spine.server.entity.model.EntityClass.stateClass"]},{"name":"final Class<? extends Object> idClass()","description":"io.spine.server.entity.model.AbstractEntityFactory.idClass","location":"server/io.spine.server.entity.model/-abstract-entity-factory/id-class.html","searchKeys":["idClass","final Class<? extends Object> idClass()","io.spine.server.entity.model.AbstractEntityFactory.idClass"]},{"name":"final Class<? extends Object> idClass()","description":"io.spine.server.entity.model.EntityClass.idClass","location":"server/io.spine.server.entity.model/-entity-class/id-class.html","searchKeys":["idClass","final Class<? extends Object> idClass()","io.spine.server.entity.model.EntityClass.idClass"]},{"name":"final Class<E> entityClass()","description":"io.spine.server.entity.Repository.entityClass","location":"server/io.spine.server.entity/-repository/entity-class.html","searchKeys":["entityClass","final Class<E> entityClass()","io.spine.server.entity.Repository.entityClass"]},{"name":"final Class<E> entityClass()","description":"io.spine.server.entity.model.AbstractEntityFactory.entityClass","location":"server/io.spine.server.entity.model/-abstract-entity-factory/entity-class.html","searchKeys":["entityClass","final Class<E> entityClass()","io.spine.server.entity.model.AbstractEntityFactory.entityClass"]},{"name":"final Class<I> idClass()","description":"io.spine.server.entity.Repository.idClass","location":"server/io.spine.server.entity/-repository/id-class.html","searchKeys":["idClass","final Class<I> idClass()","io.spine.server.entity.Repository.idClass"]},{"name":"final Collection<SignatureMismatch> match(Method method)","description":"io.spine.server.model.MethodSignature.match","location":"server/io.spine.server.model/-method-signature/match.html","searchKeys":["match","final Collection<SignatureMismatch> match(Method method)","io.spine.server.model.MethodSignature.match"]},{"name":"final Columns columns()","description":"io.spine.server.entity.model.EntityClass.columns","location":"server/io.spine.server.entity.model/-entity-class/columns.html","searchKeys":["columns","final Columns columns()","io.spine.server.entity.model.EntityClass.columns"]},{"name":"final CommandClass messageClass()","description":"io.spine.server.command.model.CommandAcceptingMethod.messageClass","location":"server/io.spine.server.command.model/-command-accepting-method/message-class.html","searchKeys":["messageClass","final CommandClass messageClass()","io.spine.server.command.model.CommandAcceptingMethod.messageClass"]},{"name":"final CommandRoute<I, CommandMessage> defaultRoute()","description":"io.spine.server.route.CommandRouting.defaultRoute","location":"server/io.spine.server.route/-command-routing/default-route.html","searchKeys":["defaultRoute","final CommandRoute<I, CommandMessage> defaultRoute()","io.spine.server.route.CommandRouting.defaultRoute"]},{"name":"final Constructor<E> constructor()","description":"io.spine.server.entity.model.AbstractEntityFactory.constructor","location":"server/io.spine.server.entity.model/-abstract-entity-factory/constructor.html","searchKeys":["constructor","final Constructor<E> constructor()","io.spine.server.entity.model.AbstractEntityFactory.constructor"]},{"name":"final Constructor<E> constructor()","description":"io.spine.server.entity.model.EntityClass.constructor","location":"server/io.spine.server.entity.model/-entity-class/constructor.html","searchKeys":["constructor","final Constructor<E> constructor()","io.spine.server.entity.model.EntityClass.constructor"]},{"name":"final DispatchOutcome dispatch(Aggregate<I, S, B> aggregate, EventEnvelope event)","description":"io.spine.server.aggregate.AggregateTransaction.dispatch","location":"server/io.spine.server.aggregate/-aggregate-transaction/dispatch.html","searchKeys":["dispatch","final DispatchOutcome dispatch(Aggregate<I, S, B> aggregate, EventEnvelope event)","io.spine.server.aggregate.AggregateTransaction.dispatch"]},{"name":"final DispatchOutcome propagate(Phase<I> phase)","description":"io.spine.server.entity.Transaction.propagate","location":"server/io.spine.server.entity/-transaction/propagate.html","searchKeys":["propagate","final DispatchOutcome propagate(Phase<I> phase)","io.spine.server.entity.Transaction.propagate"]},{"name":"final EntityFactory<E> factory()","description":"io.spine.server.entity.model.EntityClass.factory","location":"server/io.spine.server.entity.model/-entity-class/factory.html","searchKeys":["factory","final EntityFactory<E> factory()","io.spine.server.entity.model.EntityClass.factory"]},{"name":"final EntityState defaultState()","description":"io.spine.server.entity.model.EntityClass.defaultState","location":"server/io.spine.server.entity.model/-entity-class/default-state.html","searchKeys":["defaultState","final EntityState defaultState()","io.spine.server.entity.model.EntityClass.defaultState"]},{"name":"final EntityTypeName typeName()","description":"io.spine.server.entity.model.EntityClass.typeName","location":"server/io.spine.server.entity.model/-entity-class/type-name.html","searchKeys":["typeName","final EntityTypeName typeName()","io.spine.server.entity.model.EntityClass.typeName"]},{"name":"final EntityVisibility visibility()","description":"io.spine.server.entity.model.EntityClass.visibility","location":"server/io.spine.server.entity.model/-entity-class/visibility.html","searchKeys":["visibility","final EntityVisibility visibility()","io.spine.server.entity.model.EntityClass.visibility"]},{"name":"final EventBus eventBus()","description":"io.spine.server.aggregate.AggregateRepository.eventBus","location":"server/io.spine.server.aggregate/-aggregate-repository/event-bus.html","searchKeys":["eventBus","final EventBus eventBus()","io.spine.server.aggregate.AggregateRepository.eventBus"]},{"name":"final EventBus eventBus()","description":"io.spine.server.procman.ProcessManagerRepository.eventBus","location":"server/io.spine.server.procman/-process-manager-repository/event-bus.html","searchKeys":["eventBus","final EventBus eventBus()","io.spine.server.procman.ProcessManagerRepository.eventBus"]},{"name":"final EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.aggregate.model.AggregateClass.reactorOf","location":"server/io.spine.server.aggregate.model/-aggregate-class/reactor-of.html","searchKeys":["reactorOf","final EventReactorMethod reactorOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.aggregate.model.AggregateClass.reactorOf"]},{"name":"final EventRoute<I, EventMessage> defaultRoute()","description":"io.spine.server.route.EventRouting.defaultRoute","location":"server/io.spine.server.route/-event-routing/default-route.html","searchKeys":["defaultRoute","final EventRoute<I, EventMessage> defaultRoute()","io.spine.server.route.EventRouting.defaultRoute"]},{"name":"final E entity()","description":"io.spine.server.entity.Transaction.entity","location":"server/io.spine.server.entity/-transaction/entity.html","searchKeys":["entity","final E entity()","io.spine.server.entity.Transaction.entity"]},{"name":"final ImmutableList<Column> columnList()","description":"io.spine.server.storage.RecordStorage.columnList","location":"server/io.spine.server.storage/-record-storage/column-list.html","searchKeys":["columnList","final ImmutableList<Column> columnList()","io.spine.server.storage.RecordStorage.columnList"]},{"name":"final ImmutableMap<ColumnName, Column> lifecycleColumns()","description":"io.spine.server.storage.RecordStorage.lifecycleColumns","location":"server/io.spine.server.storage/-record-storage/lifecycle-columns.html","searchKeys":["lifecycleColumns","final ImmutableMap<ColumnName, Column> lifecycleColumns()","io.spine.server.storage.RecordStorage.lifecycleColumns"]},{"name":"final ImmutableSet<CommandClass> commandClasses()","description":"io.spine.server.procman.ProcessManagerRepository.commandClasses","location":"server/io.spine.server.procman/-process-manager-repository/command-classes.html","searchKeys":["commandClasses","final ImmutableSet<CommandClass> commandClasses()","io.spine.server.procman.ProcessManagerRepository.commandClasses"]},{"name":"final ImmutableSet<CommandClass> messageClasses()","description":"io.spine.server.aggregate.AggregateRepository.messageClasses","location":"server/io.spine.server.aggregate/-aggregate-repository/message-classes.html","searchKeys":["messageClasses","final ImmutableSet<CommandClass> messageClasses()","io.spine.server.aggregate.AggregateRepository.messageClasses"]},{"name":"final ImmutableSet<CommandClass> messageClasses()","description":"io.spine.server.commandbus.DelegatingCommandDispatcher.messageClasses","location":"server/io.spine.server.commandbus/-delegating-command-dispatcher/message-classes.html","searchKeys":["messageClasses","final ImmutableSet<CommandClass> messageClasses()","io.spine.server.commandbus.DelegatingCommandDispatcher.messageClasses"]},{"name":"final ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.procman.ProcessManagerRepository.domesticEventClasses","location":"server/io.spine.server.procman/-process-manager-repository/domestic-event-classes.html","searchKeys":["domesticEventClasses","final ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.procman.ProcessManagerRepository.domesticEventClasses"]},{"name":"final ImmutableSet<EventClass> domesticEventClasses()","description":"io.spine.server.projection.ProjectionRepository.domesticEventClasses","location":"server/io.spine.server.projection/-projection-repository/domestic-event-classes.html","searchKeys":["domesticEventClasses","final ImmutableSet<EventClass> domesticEventClasses()","io.spine.server.projection.ProjectionRepository.domesticEventClasses"]},{"name":"final ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.aggregate.model.AggregateClass.domesticEvents","location":"server/io.spine.server.aggregate.model/-aggregate-class/domestic-events.html","searchKeys":["domesticEvents","final ImmutableSet<EventClass> domesticEvents()","io.spine.server.aggregate.model.AggregateClass.domesticEvents"]},{"name":"final ImmutableSet<EventClass> domesticEvents()","description":"io.spine.server.projection.model.ProjectionClass.domesticEvents","location":"server/io.spine.server.projection.model/-projection-class/domestic-events.html","searchKeys":["domesticEvents","final ImmutableSet<EventClass> domesticEvents()","io.spine.server.projection.model.ProjectionClass.domesticEvents"]},{"name":"final ImmutableSet<EventClass> events()","description":"io.spine.server.aggregate.model.AggregateClass.events","location":"server/io.spine.server.aggregate.model/-aggregate-class/events.html","searchKeys":["events","final ImmutableSet<EventClass> events()","io.spine.server.aggregate.model.AggregateClass.events"]},{"name":"final ImmutableSet<EventClass> events()","description":"io.spine.server.projection.model.ProjectionClass.events","location":"server/io.spine.server.projection.model/-projection-class/events.html","searchKeys":["events","final ImmutableSet<EventClass> events()","io.spine.server.projection.model.ProjectionClass.events"]},{"name":"final ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.procman.ProcessManagerRepository.externalEventClasses","location":"server/io.spine.server.procman/-process-manager-repository/external-event-classes.html","searchKeys":["externalEventClasses","final ImmutableSet<EventClass> externalEventClasses()","io.spine.server.procman.ProcessManagerRepository.externalEventClasses"]},{"name":"final ImmutableSet<EventClass> externalEventClasses()","description":"io.spine.server.projection.ProjectionRepository.externalEventClasses","location":"server/io.spine.server.projection/-projection-repository/external-event-classes.html","searchKeys":["externalEventClasses","final ImmutableSet<EventClass> externalEventClasses()","io.spine.server.projection.ProjectionRepository.externalEventClasses"]},{"name":"final ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.aggregate.model.AggregateClass.externalEvents","location":"server/io.spine.server.aggregate.model/-aggregate-class/external-events.html","searchKeys":["externalEvents","final ImmutableSet<EventClass> externalEvents()","io.spine.server.aggregate.model.AggregateClass.externalEvents"]},{"name":"final ImmutableSet<EventClass> externalEvents()","description":"io.spine.server.projection.model.ProjectionClass.externalEvents","location":"server/io.spine.server.projection.model/-projection-class/external-events.html","searchKeys":["externalEvents","final ImmutableSet<EventClass> externalEvents()","io.spine.server.projection.model.ProjectionClass.externalEvents"]},{"name":"final ImmutableSet<EventClass> importableEvents()","description":"io.spine.server.aggregate.model.AggregateClass.importableEvents","location":"server/io.spine.server.aggregate.model/-aggregate-class/importable-events.html","searchKeys":["importableEvents","final ImmutableSet<EventClass> importableEvents()","io.spine.server.aggregate.model.AggregateClass.importableEvents"]},{"name":"final ImmutableSet<EventClass> messageClasses()","description":"io.spine.server.procman.ProcessManagerRepository.messageClasses","location":"server/io.spine.server.procman/-process-manager-repository/message-classes.html","searchKeys":["messageClasses","final ImmutableSet<EventClass> messageClasses()","io.spine.server.procman.ProcessManagerRepository.messageClasses"]},{"name":"final ImmutableSet<EventClass> messageClasses()","description":"io.spine.server.projection.ProjectionRepository.messageClasses","location":"server/io.spine.server.projection/-projection-repository/message-classes.html","searchKeys":["messageClasses","final ImmutableSet<EventClass> messageClasses()","io.spine.server.projection.ProjectionRepository.messageClasses"]},{"name":"final ImmutableSet<EventClass> stateEvents()","description":"io.spine.server.aggregate.model.AggregateClass.stateEvents","location":"server/io.spine.server.aggregate.model/-aggregate-class/state-events.html","searchKeys":["stateEvents","final ImmutableSet<EventClass> stateEvents()","io.spine.server.aggregate.model.AggregateClass.stateEvents"]},{"name":"final ImmutableSet<StateClass> domesticStates()","description":"io.spine.server.projection.model.ProjectionClass.domesticStates","location":"server/io.spine.server.projection.model/-projection-class/domestic-states.html","searchKeys":["domesticStates","final ImmutableSet<StateClass> domesticStates()","io.spine.server.projection.model.ProjectionClass.domesticStates"]},{"name":"final ImmutableSet<StateClass> externalStates()","description":"io.spine.server.projection.model.ProjectionClass.externalStates","location":"server/io.spine.server.projection.model/-projection-class/external-states.html","searchKeys":["externalStates","final ImmutableSet<StateClass> externalStates()","io.spine.server.projection.model.ProjectionClass.externalStates"]},{"name":"final ImmutableSet<SubscriberMethod> subscribersOf(EventClass eventClass, MessageClass<?> originClass)","description":"io.spine.server.projection.model.ProjectionClass.subscribersOf","location":"server/io.spine.server.projection.model/-projection-class/subscribers-of.html","searchKeys":["subscribersOf","final ImmutableSet<SubscriberMethod> subscribersOf(EventClass eventClass, MessageClass<?> originClass)","io.spine.server.projection.model.ProjectionClass.subscribersOf"]},{"name":"final Iterable<BusFilter<E>> filters()","description":"io.spine.server.bus.BusBuilder.filters","location":"server/io.spine.server.bus/-bus-builder/filters.html","searchKeys":["filters","final Iterable<BusFilter<E>> filters()","io.spine.server.bus.BusBuilder.filters"]},{"name":"final Iterator<Event> historyBackward()","description":"io.spine.server.aggregate.Aggregate.historyBackward","location":"server/io.spine.server.aggregate/-aggregate/history-backward.html","searchKeys":["historyBackward","final Iterator<Event> historyBackward()","io.spine.server.aggregate.Aggregate.historyBackward"]},{"name":"final Iterator<Message> iterator()","description":"io.spine.server.tuple.Either.iterator","location":"server/io.spine.server.tuple/-either/iterator.html","searchKeys":["iterator","final Iterator<Message> iterator()","io.spine.server.tuple.Either.iterator"]},{"name":"final Iterator<Message> iterator()","description":"io.spine.server.tuple.Tuple.iterator","location":"server/io.spine.server.tuple/-tuple/iterator.html","searchKeys":["iterator","final Iterator<Message> iterator()","io.spine.server.tuple.Tuple.iterator"]},{"name":"final I id()","description":"io.spine.server.entity.Migration.id","location":"server/io.spine.server.entity/-migration/id.html","searchKeys":["id","final I id()","io.spine.server.entity.Migration.id"]},{"name":"final LifecycleFlags getLifecycleFlags()","description":"io.spine.server.entity.TransactionalEntity.getLifecycleFlags","location":"server/io.spine.server.entity/-transactional-entity/get-lifecycle-flags.html","searchKeys":["getLifecycleFlags","final LifecycleFlags getLifecycleFlags()","io.spine.server.entity.TransactionalEntity.getLifecycleFlags"]},{"name":"final List<ConstraintViolation> checkEntityState(S newState)","description":"io.spine.server.entity.AbstractEntity.checkEntityState","location":"server/io.spine.server.entity/-abstract-entity/check-entity-state.html","searchKeys":["checkEntityState","final List<ConstraintViolation> checkEntityState(S newState)","io.spine.server.entity.AbstractEntity.checkEntityState"]},{"name":"final MessageType stateType()","description":"io.spine.server.entity.model.EntityClass.stateType","location":"server/io.spine.server.entity.model/-entity-class/state-type.html","searchKeys":["stateType","final MessageType stateType()","io.spine.server.entity.model.EntityClass.stateType"]},{"name":"final Message value()","description":"io.spine.server.tuple.Either.value","location":"server/io.spine.server.tuple/-either/value.html","searchKeys":["value","final Message value()","io.spine.server.tuple.Either.value"]},{"name":"final Method rawMethod()","description":"io.spine.server.model.AbstractHandlerMethod.rawMethod","location":"server/io.spine.server.model/-abstract-handler-method/raw-method.html","searchKeys":["rawMethod","final Method rawMethod()","io.spine.server.model.AbstractHandlerMethod.rawMethod"]},{"name":"final M envelope()","description":"io.spine.server.entity.EntityMessageEndpoint.envelope","location":"server/io.spine.server.entity/-entity-message-endpoint/envelope.html","searchKeys":["envelope","final M envelope()","io.spine.server.entity.EntityMessageEndpoint.envelope"]},{"name":"final Object get(int index)","description":"io.spine.server.tuple.Tuple.get","location":"server/io.spine.server.tuple/-tuple/get.html","searchKeys":["get","final Object get(int index)","io.spine.server.tuple.Tuple.get"]},{"name":"final Optional<Enricher> enricher()","description":"io.spine.server.event.EventBus.enricher","location":"server/io.spine.server.event/-event-bus/enricher.html","searchKeys":["enricher","final Optional<Enricher> enricher()","io.spine.server.event.EventBus.enricher"]},{"name":"final Optional<Event> onMigrationApplied()","description":"io.spine.server.entity.EntityLifecycle.onMigrationApplied","location":"server/io.spine.server.entity/-entity-lifecycle/on-migration-applied.html","searchKeys":["onMigrationApplied","final Optional<Event> onMigrationApplied()","io.spine.server.entity.EntityLifecycle.onMigrationApplied"]},{"name":"final Optional<H> classify(Method method)","description":"io.spine.server.model.MethodSignature.classify","location":"server/io.spine.server.model/-method-signature/classify.html","searchKeys":["classify","final Optional<H> classify(Method method)","io.spine.server.model.MethodSignature.classify"]},{"name":"final Optional<Integer> port()","description":"io.spine.server.ConnectionBuilder.port","location":"server/io.spine.server/-connection-builder/port.html","searchKeys":["port","final Optional<Integer> port()","io.spine.server.ConnectionBuilder.port"]},{"name":"final Optional<R> route<M extends Message, C extends MessageContext, R>(Route<M, C, R> routing, SignalEnvelope<? extends Object, ? extends Object, C> envelope)","description":"io.spine.server.entity.Repository.route","location":"server/io.spine.server.entity/-repository/route.html","searchKeys":["route","final Optional<R> route<M extends Message, C extends MessageContext, R>(Route<M, C, R> routing, SignalEnvelope<? extends Object, ? extends Object, C> envelope)","io.spine.server.entity.Repository.route"]},{"name":"final Optional<SignatureMismatch> createMismatch(Method method, Class<? extends Annotation> annotation)","description":"io.spine.server.model.MatchCriterion.createMismatch","location":"server/io.spine.server.model/-match-criterion/create-mismatch.html","searchKeys":["createMismatch","final Optional<SignatureMismatch> createMismatch(Method method, Class<? extends Annotation> annotation)","io.spine.server.model.MatchCriterion.createMismatch"]},{"name":"final Optional<String> serverName()","description":"io.spine.server.ConnectionBuilder.serverName","location":"server/io.spine.server/-connection-builder/server-name.html","searchKeys":["serverName","final Optional<String> serverName()","io.spine.server.ConnectionBuilder.serverName"]},{"name":"final Optional<Success> handleRejection(ThrowableMessage throwableMessage, T target, CommandEnvelope origin)","description":"io.spine.server.command.model.CommandAcceptingMethod.handleRejection","location":"server/io.spine.server.command.model/-command-accepting-method/handle-rejection.html","searchKeys":["handleRejection","final Optional<Success> handleRejection(ThrowableMessage throwableMessage, T target, CommandEnvelope origin)","io.spine.server.command.model.CommandAcceptingMethod.handleRejection"]},{"name":"final ProcessManagerClass<P> toModelClass(Class<P> cls)","description":"io.spine.server.procman.ProcessManagerRepository.toModelClass","location":"server/io.spine.server.procman/-process-manager-repository/to-model-class.html","searchKeys":["toModelClass","final ProcessManagerClass<P> toModelClass(Class<P> cls)","io.spine.server.procman.ProcessManagerRepository.toModelClass"]},{"name":"final ProjectionClass<P> toModelClass(Class<P> cls)","description":"io.spine.server.projection.ProjectionRepository.toModelClass","location":"server/io.spine.server.projection/-projection-repository/to-model-class.html","searchKeys":["toModelClass","final ProjectionClass<P> toModelClass(Class<P> cls)","io.spine.server.projection.ProjectionRepository.toModelClass"]},{"name":"final ProjectionStorage<I> createStorage()","description":"io.spine.server.projection.ProjectionRepository.createStorage","location":"server/io.spine.server.projection/-projection-repository/create-storage.html","searchKeys":["createStorage","final ProjectionStorage<I> createStorage()","io.spine.server.projection.ProjectionRepository.createStorage"]},{"name":"final P findOrCreate(I id)","description":"io.spine.server.procman.ProcessManagerRepository.findOrCreate","location":"server/io.spine.server.procman/-process-manager-repository/find-or-create.html","searchKeys":["findOrCreate","final P findOrCreate(I id)","io.spine.server.procman.ProcessManagerRepository.findOrCreate"]},{"name":"final P findOrCreate(I id)","description":"io.spine.server.projection.ProjectionRepository.findOrCreate","location":"server/io.spine.server.projection/-projection-repository/find-or-create.html","searchKeys":["findOrCreate","final P findOrCreate(I id)","io.spine.server.projection.ProjectionRepository.findOrCreate"]},{"name":"final P toEntity(EntityRecord record)","description":"io.spine.server.procman.ProcessManagerRepository.toEntity","location":"server/io.spine.server.procman/-process-manager-repository/to-entity.html","searchKeys":["toEntity","final P toEntity(EntityRecord record)","io.spine.server.procman.ProcessManagerRepository.toEntity"]},{"name":"final RecentHistory recentHistory()","description":"io.spine.server.aggregate.Aggregate.recentHistory","location":"server/io.spine.server.aggregate/-aggregate/recent-history.html","searchKeys":["recentHistory","final RecentHistory recentHistory()","io.spine.server.aggregate.Aggregate.recentHistory"]},{"name":"final RecordStorage<I> recordStorage()","description":"io.spine.server.projection.ProjectionRepository.recordStorage","location":"server/io.spine.server.projection/-projection-repository/record-storage.html","searchKeys":["recordStorage","final RecordStorage<I> recordStorage()","io.spine.server.projection.ProjectionRepository.recordStorage"]},{"name":"final RecordStorage<TenantId> createStorage()","description":"io.spine.server.tenant.TenantRepository.createStorage","location":"server/io.spine.server.tenant/-tenant-repository/create-storage.html","searchKeys":["createStorage","final RecordStorage<TenantId> createStorage()","io.spine.server.tenant.TenantRepository.createStorage"]},{"name":"final Set<Attribute<? extends Object>> attributes()","description":"io.spine.server.model.AbstractHandlerMethod.attributes","location":"server/io.spine.server.model/-abstract-handler-method/attributes.html","searchKeys":["attributes","final Set<Attribute<? extends Object>> attributes()","io.spine.server.model.AbstractHandlerMethod.attributes"]},{"name":"final Set<CommandClass> registeredCommandClasses()","description":"io.spine.server.commandbus.CommandBus.registeredCommandClasses","location":"server/io.spine.server.commandbus/-command-bus/registered-command-classes.html","searchKeys":["registeredCommandClasses","final Set<CommandClass> registeredCommandClasses()","io.spine.server.commandbus.CommandBus.registeredCommandClasses"]},{"name":"final Set<EventClass> registeredEventClasses()","description":"io.spine.server.event.EventBus.registeredEventClasses","location":"server/io.spine.server.event/-event-bus/registered-event-classes.html","searchKeys":["registeredEventClasses","final Set<EventClass> registeredEventClasses()","io.spine.server.event.EventBus.registeredEventClasses"]},{"name":"final Set<Listener<E>> listeners()","description":"io.spine.server.bus.BusBuilder.listeners","location":"server/io.spine.server.bus/-bus-builder/listeners.html","searchKeys":["listeners","final Set<Listener<E>> listeners()","io.spine.server.bus.BusBuilder.listeners"]},{"name":"final Set<R> producedMessages()","description":"io.spine.server.model.AbstractHandlerMethod.producedMessages","location":"server/io.spine.server.model/-abstract-handler-method/produced-messages.html","searchKeys":["producedMessages","final Set<R> producedMessages()","io.spine.server.model.AbstractHandlerMethod.producedMessages"]},{"name":"final Set<TenantId> all()","description":"io.spine.server.tenant.TenantRepository.all","location":"server/io.spine.server.tenant/-tenant-repository/all.html","searchKeys":["all","final Set<TenantId> all()","io.spine.server.tenant.TenantRepository.all"]},{"name":"final ShardIndex determineIndex(Object entityId, TypeUrl entityStateType)","description":"io.spine.server.delivery.DeliveryStrategy.determineIndex","location":"server/io.spine.server.delivery/-delivery-strategy/determine-index.html","searchKeys":["determineIndex","final ShardIndex determineIndex(Object entityId, TypeUrl entityStateType)","io.spine.server.delivery.DeliveryStrategy.determineIndex"]},{"name":"final SignatureMismatch.Severity severity()","description":"io.spine.server.model.MatchCriterion.severity","location":"server/io.spine.server.model/-match-criterion/severity.html","searchKeys":["severity","final SignatureMismatch.Severity severity()","io.spine.server.model.MatchCriterion.severity"]},{"name":"final Stand stand()","description":"io.spine.server.projection.ProjectionRepository.stand","location":"server/io.spine.server.projection/-projection-repository/stand.html","searchKeys":["stand","final Stand stand()","io.spine.server.projection.ProjectionRepository.stand"]},{"name":"final Storage<I, ? extends Object, ? extends Object> storage()","description":"io.spine.server.entity.Repository.storage","location":"server/io.spine.server.entity/-repository/storage.html","searchKeys":["storage","final Storage<I, ? extends Object, ? extends Object> storage()","io.spine.server.entity.Repository.storage"]},{"name":"final StorageConverter<I, E, S> storageConverter()","description":"io.spine.server.entity.DefaultRecordBasedRepository.storageConverter","location":"server/io.spine.server.entity/-default-record-based-repository/storage-converter.html","searchKeys":["storageConverter","final StorageConverter<I, E, S> storageConverter()","io.spine.server.entity.DefaultRecordBasedRepository.storageConverter"]},{"name":"final String formatMsg(Array<Object> args)","description":"io.spine.server.model.MatchCriterion.formatMsg","location":"server/io.spine.server.model/-match-criterion/format-msg.html","searchKeys":["formatMsg","final String formatMsg(Array<Object> args)","io.spine.server.model.MatchCriterion.formatMsg"]},{"name":"final String missingTxMessage()","description":"io.spine.server.aggregate.Aggregate.missingTxMessage","location":"server/io.spine.server.aggregate/-aggregate/missing-tx-message.html","searchKeys":["missingTxMessage","final String missingTxMessage()","io.spine.server.aggregate.Aggregate.missingTxMessage"]},{"name":"final S defaultState()","description":"io.spine.server.entity.AbstractEntity.defaultState","location":"server/io.spine.server.entity/-abstract-entity/default-state.html","searchKeys":["defaultState","final S defaultState()","io.spine.server.entity.AbstractEntity.defaultState"]},{"name":"final S state()","description":"io.spine.server.entity.AbstractEntity.state","location":"server/io.spine.server.entity/-abstract-entity/state.html","searchKeys":["state","final S state()","io.spine.server.entity.AbstractEntity.state"]},{"name":"final TypeUrl entityStateType()","description":"io.spine.server.entity.Repository.entityStateType","location":"server/io.spine.server.entity/-repository/entity-state-type.html","searchKeys":["entityStateType","final TypeUrl entityStateType()","io.spine.server.entity.Repository.entityStateType"]},{"name":"final TypeUrl stateTypeUrl()","description":"io.spine.server.entity.model.EntityClass.stateTypeUrl","location":"server/io.spine.server.entity.model/-entity-class/state-type-url.html","searchKeys":["stateTypeUrl","final TypeUrl stateTypeUrl()","io.spine.server.entity.model.EntityClass.stateTypeUrl"]},{"name":"final Version version()","description":"io.spine.server.entity.Migration.version","location":"server/io.spine.server.entity/-migration/version.html","searchKeys":["version","final Version version()","io.spine.server.entity.Migration.version"]},{"name":"final boolean canDispatch(EventEnvelope event)","description":"io.spine.server.projection.ProjectionRepository.canDispatch","location":"server/io.spine.server.projection/-projection-repository/can-dispatch.html","searchKeys":["canDispatch","final boolean canDispatch(EventEnvelope event)","io.spine.server.projection.ProjectionRepository.canDispatch"]},{"name":"final boolean changed()","description":"io.spine.server.entity.TransactionalEntity.changed","location":"server/io.spine.server.entity/-transactional-entity/changed.html","searchKeys":["changed","final boolean changed()","io.spine.server.entity.TransactionalEntity.changed"]},{"name":"final boolean equals(Object obj)","description":"io.spine.server.tuple.Either.equals","location":"server/io.spine.server.tuple/-either/equals.html","searchKeys":["equals","final boolean equals(Object obj)","io.spine.server.tuple.Either.equals"]},{"name":"final boolean equals(Object obj)","description":"io.spine.server.tuple.Tuple.equals","location":"server/io.spine.server.tuple/-tuple/equals.html","searchKeys":["equals","final boolean equals(Object obj)","io.spine.server.tuple.Tuple.equals"]},{"name":"final boolean hasContext()","description":"io.spine.server.entity.Repository.hasContext","location":"server/io.spine.server.entity/-repository/has-context.html","searchKeys":["hasContext","final boolean hasContext()","io.spine.server.entity.Repository.hasContext"]},{"name":"final boolean historyContains(Predicate<Event> predicate)","description":"io.spine.server.aggregate.Aggregate.historyContains","location":"server/io.spine.server.aggregate/-aggregate/history-contains.html","searchKeys":["historyContains","final boolean historyContains(Predicate<Event> predicate)","io.spine.server.aggregate.Aggregate.historyContains"]},{"name":"final boolean importsEvents()","description":"io.spine.server.aggregate.model.AggregateClass.importsEvents","location":"server/io.spine.server.aggregate.model/-aggregate-class/imports-events.html","searchKeys":["importsEvents","final boolean importsEvents()","io.spine.server.aggregate.model.AggregateClass.importsEvents"]},{"name":"final boolean isArchived()","description":"io.spine.server.entity.AbstractEntity.isArchived","location":"server/io.spine.server.entity/-abstract-entity/is-archived.html","searchKeys":["isArchived","final boolean isArchived()","io.spine.server.entity.AbstractEntity.isArchived"]},{"name":"final boolean isArchived()","description":"io.spine.server.entity.Migration.isArchived","location":"server/io.spine.server.entity/-migration/is-archived.html","searchKeys":["isArchived","final boolean isArchived()","io.spine.server.entity.Migration.isArchived"]},{"name":"final boolean isDeleted()","description":"io.spine.server.entity.AbstractEntity.isDeleted","location":"server/io.spine.server.entity/-abstract-entity/is-deleted.html","searchKeys":["isDeleted","final boolean isDeleted()","io.spine.server.entity.AbstractEntity.isDeleted"]},{"name":"final boolean isDeleted()","description":"io.spine.server.entity.Migration.isDeleted","location":"server/io.spine.server.entity/-migration/is-deleted.html","searchKeys":["isDeleted","final boolean isDeleted()","io.spine.server.entity.Migration.isDeleted"]},{"name":"final boolean isEnrichmentEnabled()","description":"io.spine.server.type.EventEnvelope.isEnrichmentEnabled","location":"server/io.spine.server.type/-event-envelope/is-enrichment-enabled.html","searchKeys":["isEnrichmentEnabled","final boolean isEnrichmentEnabled()","io.spine.server.type.EventEnvelope.isEnrichmentEnabled"]},{"name":"final boolean isMultitenant()","description":"io.spine.server.commandbus.CommandBus.isMultitenant","location":"server/io.spine.server.commandbus/-command-bus/is-multitenant.html","searchKeys":["isMultitenant","final boolean isMultitenant()","io.spine.server.commandbus.CommandBus.isMultitenant"]},{"name":"final boolean isOpen()","description":"io.spine.server.bus.Bus.isOpen","location":"server/io.spine.server.bus/-bus/is-open.html","searchKeys":["isOpen","final boolean isOpen()","io.spine.server.bus.Bus.isOpen"]},{"name":"final boolean isOpen()","description":"io.spine.server.entity.Repository.isOpen","location":"server/io.spine.server.entity/-repository/is-open.html","searchKeys":["isOpen","final boolean isOpen()","io.spine.server.entity.Repository.isOpen"]},{"name":"final boolean isPrivate()","description":"io.spine.server.model.AbstractHandlerMethod.isPrivate","location":"server/io.spine.server.model/-abstract-handler-method/is-private.html","searchKeys":["isPrivate","final boolean isPrivate()","io.spine.server.model.AbstractHandlerMethod.isPrivate"]},{"name":"final boolean isPublic()","description":"io.spine.server.model.AbstractHandlerMethod.isPublic","location":"server/io.spine.server.model/-abstract-handler-method/is-public.html","searchKeys":["isPublic","final boolean isPublic()","io.spine.server.model.AbstractHandlerMethod.isPublic"]},{"name":"final boolean isTypeSupplier()","description":"io.spine.server.tenant.TenantRepository.isTypeSupplier","location":"server/io.spine.server.tenant/-tenant-repository/is-type-supplier.html","searchKeys":["isTypeSupplier","final boolean isTypeSupplier()","io.spine.server.tenant.TenantRepository.isTypeSupplier"]},{"name":"final boolean matches(Method method)","description":"io.spine.server.model.MethodSignature.matches","location":"server/io.spine.server.model/-method-signature/matches.html","searchKeys":["matches","final boolean matches(Method method)","io.spine.server.model.MethodSignature.matches"]},{"name":"final boolean storageAssigned()","description":"io.spine.server.entity.Repository.storageAssigned","location":"server/io.spine.server.entity/-repository/storage-assigned.html","searchKeys":["storageAssigned","final boolean storageAssigned()","io.spine.server.entity.Repository.storageAssigned"]},{"name":"final boolean unCache(TenantId id)","description":"io.spine.server.tenant.TenantRepository.unCache","location":"server/io.spine.server.tenant/-tenant-repository/un-cache.html","searchKeys":["unCache","final boolean unCache(TenantId id)","io.spine.server.tenant.TenantRepository.unCache"]},{"name":"final int hashCode()","description":"io.spine.server.tuple.Either.hashCode","location":"server/io.spine.server.tuple/-either/hash-code.html","searchKeys":["hashCode","final int hashCode()","io.spine.server.tuple.Either.hashCode"]},{"name":"final int hashCode()","description":"io.spine.server.tuple.Tuple.hashCode","location":"server/io.spine.server.tuple/-tuple/hash-code.html","searchKeys":["hashCode","final int hashCode()","io.spine.server.tuple.Tuple.hashCode"]},{"name":"final int index()","description":"io.spine.server.tuple.Either.index","location":"server/io.spine.server.tuple/-either/--index--.html","searchKeys":["index","final int index()","io.spine.server.tuple.Either.index"]},{"name":"final int versionNumber()","description":"io.spine.server.aggregate.Aggregate.versionNumber","location":"server/io.spine.server.aggregate/-aggregate/version-number.html","searchKeys":["versionNumber","final int versionNumber()","io.spine.server.aggregate.Aggregate.versionNumber"]},{"name":"final synchronized Publisher createPublisher(ChannelId id)","description":"io.spine.server.transport.memory.InMemoryTransportFactory.createPublisher","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/create-publisher.html","searchKeys":["createPublisher","final synchronized Publisher createPublisher(ChannelId id)","io.spine.server.transport.memory.InMemoryTransportFactory.createPublisher"]},{"name":"final synchronized Subscriber createSubscriber(ChannelId id)","description":"io.spine.server.transport.memory.InMemoryTransportFactory.createSubscriber","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/create-subscriber.html","searchKeys":["createSubscriber","final synchronized Subscriber createSubscriber(ChannelId id)","io.spine.server.transport.memory.InMemoryTransportFactory.createSubscriber"]},{"name":"final void applyMigration<T extends TransactionalEntity<I, S, ? extends Object>>(I id, Migration<I, T, S> migration)","description":"io.spine.server.entity.RecordBasedRepository.applyMigration","location":"server/io.spine.server.entity/-record-based-repository/apply-migration.html","searchKeys":["applyMigration","final void applyMigration<T extends TransactionalEntity<I, S, ? extends Object>>(I id, Migration<I, T, S> migration)","io.spine.server.entity.RecordBasedRepository.applyMigration"]},{"name":"final void applyMigration<T extends TransactionalEntity<I, S, ? extends Object>>(Set<I> ids, Migration<I, T, S> migration)","description":"io.spine.server.entity.RecordBasedRepository.applyMigration","location":"server/io.spine.server.entity/-record-based-repository/apply-migration.html","searchKeys":["applyMigration","final void applyMigration<T extends TransactionalEntity<I, S, ? extends Object>>(Set<I> ids, Migration<I, T, S> migration)","io.spine.server.entity.RecordBasedRepository.applyMigration"]},{"name":"final void callObservers(ExternalMessage message)","description":"io.spine.server.transport.Subscriber.callObservers","location":"server/io.spine.server.transport/-subscriber/call-observers.html","searchKeys":["callObservers","final void callObservers(ExternalMessage message)","io.spine.server.transport.Subscriber.callObservers"]},{"name":"final void clearCache()","description":"io.spine.server.tenant.TenantRepository.clearCache","location":"server/io.spine.server.tenant/-tenant-repository/clear-cache.html","searchKeys":["clearCache","final void clearCache()","io.spine.server.tenant.TenantRepository.clearCache"]},{"name":"final void clearRecentHistory()","description":"io.spine.server.aggregate.Aggregate.clearRecentHistory","location":"server/io.spine.server.aggregate/-aggregate/clear-recent-history.html","searchKeys":["clearRecentHistory","final void clearRecentHistory()","io.spine.server.aggregate.Aggregate.clearRecentHistory"]},{"name":"final void commit()","description":"io.spine.server.entity.Transaction.commit","location":"server/io.spine.server.entity/-transaction/commit.html","searchKeys":["commit","final void commit()","io.spine.server.entity.Transaction.commit"]},{"name":"final void commitAttributeChanges()","description":"io.spine.server.entity.Transaction.commitAttributeChanges","location":"server/io.spine.server.entity/-transaction/commit-attribute-changes.html","searchKeys":["commitAttributeChanges","final void commitAttributeChanges()","io.spine.server.entity.Transaction.commitAttributeChanges"]},{"name":"final void commitIfActive()","description":"io.spine.server.entity.Transaction.commitIfActive","location":"server/io.spine.server.entity/-transaction/commit-if-active.html","searchKeys":["commitIfActive","final void commitIfActive()","io.spine.server.entity.Transaction.commitIfActive"]},{"name":"final void discoverAttributes()","description":"io.spine.server.model.AbstractHandlerMethod.discoverAttributes","location":"server/io.spine.server.model/-abstract-handler-method/discover-attributes.html","searchKeys":["discoverAttributes","final void discoverAttributes()","io.spine.server.model.AbstractHandlerMethod.discoverAttributes"]},{"name":"final void dispatch(CommandEnvelope cmd)","description":"io.spine.server.aggregate.AggregateRepository.dispatch","location":"server/io.spine.server.aggregate/-aggregate-repository/dispatch.html","searchKeys":["dispatch","final void dispatch(CommandEnvelope cmd)","io.spine.server.aggregate.AggregateRepository.dispatch"]},{"name":"final void dispatch(CommandEnvelope envelope)","description":"io.spine.server.commandbus.DelegatingCommandDispatcher.dispatch","location":"server/io.spine.server.commandbus/-delegating-command-dispatcher/dispatch.html","searchKeys":["dispatch","final void dispatch(CommandEnvelope envelope)","io.spine.server.commandbus.DelegatingCommandDispatcher.dispatch"]},{"name":"final void dispatch(EventEnvelope event)","description":"io.spine.server.entity.EventDispatchingRepository.dispatch","location":"server/io.spine.server.entity/-event-dispatching-repository/dispatch.html","searchKeys":["dispatch","final void dispatch(EventEnvelope event)","io.spine.server.entity.EventDispatchingRepository.dispatch"]},{"name":"final void dispatch(EventEnvelope event)","description":"io.spine.server.event.AbstractEventSubscriber.dispatch","location":"server/io.spine.server.event/-abstract-event-subscriber/dispatch.html","searchKeys":["dispatch","final void dispatch(EventEnvelope event)","io.spine.server.event.AbstractEventSubscriber.dispatch"]},{"name":"final void dispatchCommand(CommandEnvelope command)","description":"io.spine.server.procman.ProcessManagerRepository.dispatchCommand","location":"server/io.spine.server.procman/-process-manager-repository/dispatch-command.html","searchKeys":["dispatchCommand","final void dispatchCommand(CommandEnvelope command)","io.spine.server.procman.ProcessManagerRepository.dispatchCommand"]},{"name":"final void dispatchTo(I id, Event event)","description":"io.spine.server.procman.ProcessManagerRepository.dispatchTo","location":"server/io.spine.server.procman/-process-manager-repository/dispatch-to.html","searchKeys":["dispatchTo","final void dispatchTo(I id, Event event)","io.spine.server.procman.ProcessManagerRepository.dispatchTo"]},{"name":"final void dispatchTo(I id, Event event)","description":"io.spine.server.projection.ProjectionRepository.dispatchTo","location":"server/io.spine.server.projection/-projection-repository/dispatch-to.html","searchKeys":["dispatchTo","final void dispatchTo(I id, Event event)","io.spine.server.projection.ProjectionRepository.dispatchTo"]},{"name":"final void flushState()","description":"io.spine.server.event.AbstractStatefulReactor.flushState","location":"server/io.spine.server.event/-abstract-stateful-reactor/flush-state.html","searchKeys":["flushState","final void flushState()","io.spine.server.event.AbstractStatefulReactor.flushState"]},{"name":"final void init()","description":"io.spine.server.BoundedContext.init","location":"server/io.spine.server/-bounded-context/init.html","searchKeys":["init","final void init()","io.spine.server.BoundedContext.init"]},{"name":"final void keep(TenantId id)","description":"io.spine.server.tenant.TenantRepository.keep","location":"server/io.spine.server.tenant/-tenant-repository/keep.html","searchKeys":["keep","final void keep(TenantId id)","io.spine.server.tenant.TenantRepository.keep"]},{"name":"final void markArchived()","description":"io.spine.server.entity.Migration.markArchived","location":"server/io.spine.server.entity/-migration/mark-archived.html","searchKeys":["markArchived","final void markArchived()","io.spine.server.entity.Migration.markArchived"]},{"name":"final void markDeleted()","description":"io.spine.server.entity.Migration.markDeleted","location":"server/io.spine.server.entity/-migration/mark-deleted.html","searchKeys":["markDeleted","final void markDeleted()","io.spine.server.entity.Migration.markDeleted"]},{"name":"final void onCommandHandled(Command command)","description":"io.spine.server.entity.EntityLifecycle.onCommandHandled","location":"server/io.spine.server.entity/-entity-lifecycle/on-command-handled.html","searchKeys":["onCommandHandled","final void onCommandHandled(Command command)","io.spine.server.entity.EntityLifecycle.onCommandHandled"]},{"name":"final void onCommandRejected(CommandId commandId, Event rejection)","description":"io.spine.server.entity.EntityLifecycle.onCommandRejected","location":"server/io.spine.server.entity/-entity-lifecycle/on-command-rejected.html","searchKeys":["onCommandRejected","final void onCommandRejected(CommandId commandId, Event rejection)","io.spine.server.entity.EntityLifecycle.onCommandRejected"]},{"name":"final void onDispatchCommand(Command command)","description":"io.spine.server.entity.EntityLifecycle.onDispatchCommand","location":"server/io.spine.server.entity/-entity-lifecycle/on-dispatch-command.html","searchKeys":["onDispatchCommand","final void onDispatchCommand(Command command)","io.spine.server.entity.EntityLifecycle.onDispatchCommand"]},{"name":"final void onDispatchEventToReactor(Event event)","description":"io.spine.server.entity.EntityLifecycle.onDispatchEventToReactor","location":"server/io.spine.server.entity/-entity-lifecycle/on-dispatch-event-to-reactor.html","searchKeys":["onDispatchEventToReactor","final void onDispatchEventToReactor(Event event)","io.spine.server.entity.EntityLifecycle.onDispatchEventToReactor"]},{"name":"final void onDispatchEventToSubscriber(Event event)","description":"io.spine.server.entity.EntityLifecycle.onDispatchEventToSubscriber","location":"server/io.spine.server.entity/-entity-lifecycle/on-dispatch-event-to-subscriber.html","searchKeys":["onDispatchEventToSubscriber","final void onDispatchEventToSubscriber(Event event)","io.spine.server.entity.EntityLifecycle.onDispatchEventToSubscriber"]},{"name":"final void onDispatched(SignalId signal)","description":"io.spine.server.bus.MulticastBus.onDispatched","location":"server/io.spine.server.bus/-multicast-bus/on-dispatched.html","searchKeys":["onDispatched","final void onDispatched(SignalId signal)","io.spine.server.bus.MulticastBus.onDispatched"]},{"name":"final void onDispatchingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Error error)","description":"io.spine.server.entity.EntityLifecycle.onDispatchingFailed","location":"server/io.spine.server.entity/-entity-lifecycle/on-dispatching-failed.html","searchKeys":["onDispatchingFailed","final void onDispatchingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Error error)","io.spine.server.entity.EntityLifecycle.onDispatchingFailed"]},{"name":"final void onDispatchingStarted(SignalId signal)","description":"io.spine.server.bus.MulticastBus.onDispatchingStarted","location":"server/io.spine.server.bus/-multicast-bus/on-dispatching-started.html","searchKeys":["onDispatchingStarted","final void onDispatchingStarted(SignalId signal)","io.spine.server.bus.MulticastBus.onDispatchingStarted"]},{"name":"final void onEntityCreated(Kind entityKind)","description":"io.spine.server.entity.EntityLifecycle.onEntityCreated","location":"server/io.spine.server.entity/-entity-lifecycle/on-entity-created.html","searchKeys":["onEntityCreated","final void onEntityCreated(Kind entityKind)","io.spine.server.entity.EntityLifecycle.onEntityCreated"]},{"name":"final void onEventImported(Event event)","description":"io.spine.server.entity.EntityLifecycle.onEventImported","location":"server/io.spine.server.entity/-entity-lifecycle/on-event-imported.html","searchKeys":["onEventImported","final void onEventImported(Event event)","io.spine.server.entity.EntityLifecycle.onEventImported"]},{"name":"final void onInvalidEntity(MessageId lastMessage, MessageId root, ValidationError error, Version version)","description":"io.spine.server.entity.EntityLifecycle.onInvalidEntity","location":"server/io.spine.server.entity/-entity-lifecycle/on-invalid-entity.html","searchKeys":["onInvalidEntity","final void onInvalidEntity(MessageId lastMessage, MessageId root, ValidationError error, Version version)","io.spine.server.entity.EntityLifecycle.onInvalidEntity"]},{"name":"final void onNext(ExternalMessage message)","description":"io.spine.server.integration.AbstractChannelObserver.onNext","location":"server/io.spine.server.integration/-abstract-channel-observer/on-next.html","searchKeys":["onNext","final void onNext(ExternalMessage message)","io.spine.server.integration.AbstractChannelObserver.onNext"]},{"name":"final void onRemovedFromStorage(Iterable<MessageId> signalIds)","description":"io.spine.server.entity.EntityLifecycle.onRemovedFromStorage","location":"server/io.spine.server.entity/-entity-lifecycle/on-removed-from-storage.html","searchKeys":["onRemovedFromStorage","final void onRemovedFromStorage(Iterable<MessageId> signalIds)","io.spine.server.entity.EntityLifecycle.onRemovedFromStorage"]},{"name":"final void onRoutingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> envelope, Throwable cause)","description":"io.spine.server.aggregate.AggregateRepository.onRoutingFailed","location":"server/io.spine.server.aggregate/-aggregate-repository/on-routing-failed.html","searchKeys":["onRoutingFailed","final void onRoutingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> envelope, Throwable cause)","io.spine.server.aggregate.AggregateRepository.onRoutingFailed"]},{"name":"final void onRoutingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> envelope, Throwable cause)","description":"io.spine.server.procman.ProcessManagerRepository.onRoutingFailed","location":"server/io.spine.server.procman/-process-manager-repository/on-routing-failed.html","searchKeys":["onRoutingFailed","final void onRoutingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> envelope, Throwable cause)","io.spine.server.procman.ProcessManagerRepository.onRoutingFailed"]},{"name":"final void onStateChanged(EntityRecordChange change, Set<? extends MessageId> messageIds, Origin origin)","description":"io.spine.server.entity.EntityLifecycle.onStateChanged","location":"server/io.spine.server.entity/-entity-lifecycle/on-state-changed.html","searchKeys":["onStateChanged","final void onStateChanged(EntityRecordChange change, Set<? extends MessageId> messageIds, Origin origin)","io.spine.server.entity.EntityLifecycle.onStateChanged"]},{"name":"final void onTargetAssignedToCommand(CommandId commandId)","description":"io.spine.server.entity.EntityLifecycle.onTargetAssignedToCommand","location":"server/io.spine.server.entity/-entity-lifecycle/on-target-assigned-to-command.html","searchKeys":["onTargetAssignedToCommand","final void onTargetAssignedToCommand(CommandId commandId)","io.spine.server.entity.EntityLifecycle.onTargetAssignedToCommand"]},{"name":"final void open()","description":"io.spine.server.entity.Repository.open","location":"server/io.spine.server.entity/-repository/open.html","searchKeys":["open","final void open()","io.spine.server.entity.Repository.open"]},{"name":"final void post(Event event)","description":"io.spine.server.event.EventBus.post","location":"server/io.spine.server.event/-event-bus/post.html","searchKeys":["post","final void post(Event event)","io.spine.server.event.EventBus.post"]},{"name":"final void post(Iterable<Event> events)","description":"io.spine.server.event.EventBus.post","location":"server/io.spine.server.event/-event-bus/post.html","searchKeys":["post","final void post(Iterable<Event> events)","io.spine.server.event.EventBus.post"]},{"name":"final void post(Iterable<T> messages, StreamObserver<Ack> observer)","description":"io.spine.server.bus.Bus.post","location":"server/io.spine.server.bus/-bus/post.html","searchKeys":["post","final void post(Iterable<T> messages, StreamObserver<Ack> observer)","io.spine.server.bus.Bus.post"]},{"name":"final void post(T message, StreamObserver<Ack> observer)","description":"io.spine.server.bus.Bus.post","location":"server/io.spine.server.bus/-bus/post.html","searchKeys":["post","final void post(T message, StreamObserver<Ack> observer)","io.spine.server.bus.Bus.post"]},{"name":"final void register(Repository<? extends Object, ? extends Object> repository)","description":"io.spine.server.BoundedContext.register","location":"server/io.spine.server/-bounded-context/register.html","searchKeys":["register","final void register(Repository<? extends Object, ? extends Object> repository)","io.spine.server.BoundedContext.register"]},{"name":"final void registerWith(BoundedContext context)","description":"io.spine.server.tenant.TenantRepository.registerWith","location":"server/io.spine.server.tenant/-tenant-repository/register-with.html","searchKeys":["registerWith","final void registerWith(BoundedContext context)","io.spine.server.tenant.TenantRepository.registerWith"]},{"name":"final void removeFromStorage()","description":"io.spine.server.entity.Migration.removeFromStorage","location":"server/io.spine.server.entity/-migration/remove-from-storage.html","searchKeys":["removeFromStorage","final void removeFromStorage()","io.spine.server.entity.Migration.removeFromStorage"]},{"name":"final void setArchived(boolean archived)","description":"io.spine.server.entity.Transaction.setArchived","location":"server/io.spine.server.entity/-transaction/set-archived.html","searchKeys":["setArchived","final void setArchived(boolean archived)","io.spine.server.entity.Transaction.setArchived"]},{"name":"final void setArchived(boolean archived)","description":"io.spine.server.entity.TransactionalEntity.setArchived","location":"server/io.spine.server.entity/-transactional-entity/set-archived.html","searchKeys":["setArchived","final void setArchived(boolean archived)","io.spine.server.entity.TransactionalEntity.setArchived"]},{"name":"final void setDeleted(boolean deleted)","description":"io.spine.server.entity.Transaction.setDeleted","location":"server/io.spine.server.entity/-transaction/set-deleted.html","searchKeys":["setDeleted","final void setDeleted(boolean deleted)","io.spine.server.entity.Transaction.setDeleted"]},{"name":"final void setDeleted(boolean deleted)","description":"io.spine.server.entity.TransactionalEntity.setDeleted","location":"server/io.spine.server.entity/-transactional-entity/set-deleted.html","searchKeys":["setDeleted","final void setDeleted(boolean deleted)","io.spine.server.entity.TransactionalEntity.setDeleted"]},{"name":"final void setInitialState(S initialState, Version version)","description":"io.spine.server.entity.TransactionalEntity.setInitialState","location":"server/io.spine.server.entity/-transactional-entity/set-initial-state.html","searchKeys":["setInitialState","final void setInitialState(S initialState, Version version)","io.spine.server.entity.TransactionalEntity.setInitialState"]},{"name":"final void setListener(TransactionListener<I> listener)","description":"io.spine.server.entity.Transaction.setListener","location":"server/io.spine.server.entity/-transaction/set-listener.html","searchKeys":["setListener","final void setListener(TransactionListener<I> listener)","io.spine.server.entity.Transaction.setListener"]},{"name":"final void store(A aggregate)","description":"io.spine.server.aggregate.AggregateRepository.store","location":"server/io.spine.server.aggregate/-aggregate-repository/store.html","searchKeys":["store","final void store(A aggregate)","io.spine.server.aggregate.AggregateRepository.store"]},{"name":"final void store(E entity)","description":"io.spine.server.entity.EntityMessageEndpoint.store","location":"server/io.spine.server.entity/-entity-message-endpoint/store.html","searchKeys":["store","final void store(E entity)","io.spine.server.entity.EntityMessageEndpoint.store"]},{"name":"final void store(P entity)","description":"io.spine.server.procman.ProcessManagerRepository.store","location":"server/io.spine.server.procman/-process-manager-repository/store.html","searchKeys":["store","final void store(P entity)","io.spine.server.procman.ProcessManagerRepository.store"]},{"name":"final void store(P entity)","description":"io.spine.server.projection.ProjectionRepository.store","location":"server/io.spine.server.projection/-projection-repository/store.html","searchKeys":["store","final void store(P entity)","io.spine.server.projection.ProjectionRepository.store"]},{"name":"int batchSize()","description":"io.spine.server.aggregate.AggregateReadRequest.batchSize","location":"server/io.spine.server.aggregate/-aggregate-read-request/batch-size.html","searchKeys":["batchSize","int batchSize()","io.spine.server.aggregate.AggregateReadRequest.batchSize"]},{"name":"int callDispatchers(E messageEnvelope)","description":"io.spine.server.bus.MulticastBus.callDispatchers","location":"server/io.spine.server.bus/-multicast-bus/call-dispatchers.html","searchKeys":["callDispatchers","int callDispatchers(E messageEnvelope)","io.spine.server.bus.MulticastBus.callDispatchers"]},{"name":"int compare(InboxMessage m1, InboxMessage m2)","description":"io.spine.server.delivery.InboxMessageComparator.compare","location":"server/io.spine.server.delivery/-inbox-message-comparator/compare.html","searchKeys":["compare","int compare(InboxMessage m1, InboxMessage m2)","io.spine.server.delivery.InboxMessageComparator.compare"]},{"name":"int deliveredCount()","description":"io.spine.server.delivery.DeliveryStats.deliveredCount","location":"server/io.spine.server.delivery/-delivery-stats/delivered-count.html","searchKeys":["deliveredCount","int deliveredCount()","io.spine.server.delivery.DeliveryStats.deliveredCount"]},{"name":"int getPort()","description":"io.spine.server.GrpcContainer.Builder.getPort","location":"server/io.spine.server/-grpc-container/-builder/get-port.html","searchKeys":["getPort","int getPort()","io.spine.server.GrpcContainer.Builder.getPort"]},{"name":"int hashCode()","description":"io.spine.server.ContextSpec.hashCode","location":"server/io.spine.server/-context-spec/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.ContextSpec.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.aggregate.AggregateReadRequest.hashCode","location":"server/io.spine.server.aggregate/-aggregate-read-request/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.aggregate.AggregateReadRequest.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.command.AbstractCommandDispatcher.hashCode","location":"server/io.spine.server.command/-abstract-command-dispatcher/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.command.AbstractCommandDispatcher.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.AbstractEntity.hashCode","location":"server/io.spine.server.entity/-abstract-entity/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.AbstractEntity.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.RecentHistory.hashCode","location":"server/io.spine.server.entity/-recent-history/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.RecentHistory.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.StorageConverter.hashCode","location":"server/io.spine.server.entity/-storage-converter/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.StorageConverter.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.model.AbstractEntityFactory.hashCode","location":"server/io.spine.server.entity.model/-abstract-entity-factory/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.model.AbstractEntityFactory.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.model.EntityClass.hashCode","location":"server/io.spine.server.entity.model/-entity-class/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.model.EntityClass.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.storage.CompositeQueryParameter.hashCode","location":"server/io.spine.server.entity.storage/-composite-query-parameter/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.storage.CompositeQueryParameter.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.storage.EntityQuery.hashCode","location":"server/io.spine.server.entity.storage/-entity-query/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.storage.EntityQuery.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.storage.EntityRecordWithColumns.hashCode","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.storage.EntityRecordWithColumns.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.entity.storage.QueryParameters.hashCode","location":"server/io.spine.server.entity.storage/-query-parameters/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.entity.storage.QueryParameters.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.integration.AbstractChannelObserver.hashCode","location":"server/io.spine.server.integration/-abstract-channel-observer/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.integration.AbstractChannelObserver.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.model.AbstractHandlerMethod.hashCode","location":"server/io.spine.server.model/-abstract-handler-method/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.model.AbstractHandlerMethod.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.model.AllowedParams.hashCode","location":"server/io.spine.server.model/-allowed-params/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.model.AllowedParams.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.model.ArgumentFilter.hashCode","location":"server/io.spine.server.model/-argument-filter/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.model.ArgumentFilter.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.model.DispatchKey.hashCode","location":"server/io.spine.server.model/-dispatch-key/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.model.DispatchKey.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.model.MethodParams.hashCode","location":"server/io.spine.server.model/-method-params/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.model.MethodParams.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.model.ReturnTypes.hashCode","location":"server/io.spine.server.model/-return-types/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.model.ReturnTypes.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.storage.RecordReadRequest.hashCode","location":"server/io.spine.server.storage/-record-read-request/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.storage.RecordReadRequest.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.storage.memory.StorageSpec.hashCode","location":"server/io.spine.server.storage.memory/-storage-spec/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.storage.memory.StorageSpec.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.tenant.IdInTenant.hashCode","location":"server/io.spine.server.tenant/-id-in-tenant/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.tenant.IdInTenant.hashCode"]},{"name":"int hashCode()","description":"io.spine.server.type.AbstractMessageEnvelope.hashCode","location":"server/io.spine.server.type/-abstract-message-envelope/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.server.type.AbstractMessageEnvelope.hashCode"]},{"name":"int hashCode()","description":"io.spine.system.server.SystemSettings.hashCode","location":"server/io.spine.system.server/-system-settings/hash-code.html","searchKeys":["hashCode","int hashCode()","io.spine.system.server.SystemSettings.hashCode"]},{"name":"int index()","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.index","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/--index--.html","searchKeys":["index","int index()","io.spine.server.aggregate.AggregatePart.GenericParameter.index"]},{"name":"int index()","description":"io.spine.server.entity.Entity.GenericParameter.index","location":"server/io.spine.server.entity/-entity/-generic-parameter/--index--.html","searchKeys":["index","int index()","io.spine.server.entity.Entity.GenericParameter.index"]},{"name":"int pathLength()","description":"io.spine.server.model.ArgumentFilter.pathLength","location":"server/io.spine.server.model/-argument-filter/path-length.html","searchKeys":["pathLength","int pathLength()","io.spine.server.model.ArgumentFilter.pathLength"]},{"name":"int port()","description":"io.spine.server.Server.port","location":"server/io.spine.server/-server/port.html","searchKeys":["port","int port()","io.spine.server.Server.port"]},{"name":"int shardCount()","description":"io.spine.server.delivery.UniformAcrossAllShards.shardCount","location":"server/io.spine.server.delivery/-uniform-across-all-shards/shard-count.html","searchKeys":["shardCount","int shardCount()","io.spine.server.delivery.UniformAcrossAllShards.shardCount"]},{"name":"int size()","description":"io.spine.server.model.MethodParams.size","location":"server/io.spine.server.model/-method-params/size.html","searchKeys":["size","int size()","io.spine.server.model.MethodParams.size"]},{"name":"int snapshotTrigger()","description":"io.spine.server.aggregate.AggregateRepository.snapshotTrigger","location":"server/io.spine.server.aggregate/-aggregate-repository/snapshot-trigger.html","searchKeys":["snapshotTrigger","int snapshotTrigger()","io.spine.server.aggregate.AggregateRepository.snapshotTrigger"]},{"name":"int versionNumber()","description":"io.spine.server.entity.AbstractEntity.versionNumber","location":"server/io.spine.server.entity/-abstract-entity/version-number.html","searchKeys":["versionNumber","int versionNumber()","io.spine.server.entity.AbstractEntity.versionNumber"]},{"name":"producer_id","description":"io.spine.server.event.storage.EventField.producer_id","location":"server/io.spine.server.event.storage/-event-field/producer_id/index.html","searchKeys":["producer_id","producer_id","io.spine.server.event.storage.EventField.producer_id"]},{"name":"public @interface Apply","description":"io.spine.server.aggregate.Apply","location":"server/io.spine.server.aggregate/-apply/index.html","searchKeys":["Apply","public @interface Apply","io.spine.server.aggregate.Apply"]},{"name":"public @interface Assign","description":"io.spine.server.command.Assign","location":"server/io.spine.server.command/-assign/index.html","searchKeys":["Assign","public @interface Assign","io.spine.server.command.Assign"]},{"name":"public @interface Command","description":"io.spine.server.command.Command","location":"server/io.spine.server.command/-command/index.html","searchKeys":["Command","public @interface Command","io.spine.server.command.Command"]},{"name":"public @interface React","description":"io.spine.server.event.React","location":"server/io.spine.server.event/-react/index.html","searchKeys":["React","public @interface React","io.spine.server.event.React"]},{"name":"public @interface SystemColumn","description":"io.spine.server.entity.storage.SystemColumn","location":"server/io.spine.server.entity.storage/-system-column/index.html","searchKeys":["SystemColumn","public @interface SystemColumn","io.spine.server.entity.storage.SystemColumn"]},{"name":"public abstract class AbstractChannel implements MessageChannel","description":"io.spine.server.transport.AbstractChannel","location":"server/io.spine.server.transport/-abstract-channel/index.html","searchKeys":["AbstractChannel","public abstract class AbstractChannel implements MessageChannel","io.spine.server.transport.AbstractChannel"]},{"name":"public abstract class AbstractChannelObserver","description":"io.spine.server.integration.AbstractChannelObserver","location":"server/io.spine.server.integration/-abstract-channel-observer/index.html","searchKeys":["AbstractChannelObserver","public abstract class AbstractChannelObserver","io.spine.server.integration.AbstractChannelObserver"]},{"name":"public abstract class AbstractColumnMapping<R> implements ColumnMapping<R>","description":"io.spine.server.entity.storage.AbstractColumnMapping","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/index.html","searchKeys":["AbstractColumnMapping","public abstract class AbstractColumnMapping<R> implements ColumnMapping<R>","io.spine.server.entity.storage.AbstractColumnMapping"]},{"name":"public abstract class AbstractCommandDispatcher implements CommandDispatcher, ContextAware","description":"io.spine.server.command.AbstractCommandDispatcher","location":"server/io.spine.server.command/-abstract-command-dispatcher/index.html","searchKeys":["AbstractCommandDispatcher","public abstract class AbstractCommandDispatcher implements CommandDispatcher, ContextAware","io.spine.server.command.AbstractCommandDispatcher"]},{"name":"public abstract class AbstractCommandHandler extends AbstractCommandDispatcher implements CommandHandler","description":"io.spine.server.command.AbstractCommandHandler","location":"server/io.spine.server.command/-abstract-command-handler/index.html","searchKeys":["AbstractCommandHandler","public abstract class AbstractCommandHandler extends AbstractCommandDispatcher implements CommandHandler","io.spine.server.command.AbstractCommandHandler"]},{"name":"public abstract class AbstractCommandHandlingClass<C, R extends MessageClass<?>, H extends CommandAcceptingMethod<? extends Object, R>> extends ModelClass<T> implements CommandHandlingClass<R, H>","description":"io.spine.server.command.model.AbstractCommandHandlingClass","location":"server/io.spine.server.command.model/-abstract-command-handling-class/index.html","searchKeys":["AbstractCommandHandlingClass","public abstract class AbstractCommandHandlingClass<C, R extends MessageClass<?>, H extends CommandAcceptingMethod<? extends Object, R>> extends ModelClass<T> implements CommandHandlingClass<R, H>","io.spine.server.command.model.AbstractCommandHandlingClass"]},{"name":"public abstract class AbstractCommander extends AbstractCommandDispatcher implements Commander, EventDispatcherDelegate","description":"io.spine.server.command.AbstractCommander","location":"server/io.spine.server.command/-abstract-commander/index.html","searchKeys":["AbstractCommander","public abstract class AbstractCommander extends AbstractCommandDispatcher implements Commander, EventDispatcherDelegate","io.spine.server.command.AbstractCommander"]},{"name":"public abstract class AbstractEntity<I, S extends EntityState> implements Entity<I, S>, HandlerLifecycle","description":"io.spine.server.entity.AbstractEntity","location":"server/io.spine.server.entity/-abstract-entity/index.html","searchKeys":["AbstractEntity","public abstract class AbstractEntity<I, S extends EntityState> implements Entity<I, S>, HandlerLifecycle","io.spine.server.entity.AbstractEntity"]},{"name":"public abstract class AbstractEntityFactory<E extends Entity> implements EntityFactory<E>","description":"io.spine.server.entity.model.AbstractEntityFactory","location":"server/io.spine.server.entity.model/-abstract-entity-factory/index.html","searchKeys":["AbstractEntityFactory","public abstract class AbstractEntityFactory<E extends Entity> implements EntityFactory<E>","io.spine.server.entity.model.AbstractEntityFactory"]},{"name":"public abstract class AbstractEventReactor implements EventReactor, EventDispatcher, ContextAware","description":"io.spine.server.event.AbstractEventReactor","location":"server/io.spine.server.event/-abstract-event-reactor/index.html","searchKeys":["AbstractEventReactor","public abstract class AbstractEventReactor implements EventReactor, EventDispatcher, ContextAware","io.spine.server.event.AbstractEventReactor"]},{"name":"public abstract class AbstractEventSubscriber implements EventDispatcher, EventSubscriber, ContextAware","description":"io.spine.server.event.AbstractEventSubscriber","location":"server/io.spine.server.event/-abstract-event-subscriber/index.html","searchKeys":["AbstractEventSubscriber","public abstract class AbstractEventSubscriber implements EventDispatcher, EventSubscriber, ContextAware","io.spine.server.event.AbstractEventSubscriber"]},{"name":"public abstract class AbstractHandlerMethod<T, M extends Message, C extends MessageClass<M>, E extends MessageEnvelope<? extends Object, ? extends Signal<?, ?, ?>, ? extends Object>, R extends MessageClass<?>> implements HandlerMethod<T, C, E, R>","description":"io.spine.server.model.AbstractHandlerMethod","location":"server/io.spine.server.model/-abstract-handler-method/index.html","searchKeys":["AbstractHandlerMethod","public abstract class AbstractHandlerMethod<T, M extends Message, C extends MessageClass<M>, E extends MessageEnvelope<? extends Object, ? extends Signal<?, ?, ?>, ? extends Object>, R extends MessageClass<?>> implements HandlerMethod<T, C, E, R>","io.spine.server.model.AbstractHandlerMethod"]},{"name":"public abstract class AbstractMessageEnvelope<I extends Message, T, C extends Message> implements MessageEnvelope<I, T, C>","description":"io.spine.server.type.AbstractMessageEnvelope","location":"server/io.spine.server.type/-abstract-message-envelope/index.html","searchKeys":["AbstractMessageEnvelope","public abstract class AbstractMessageEnvelope<I extends Message, T, C extends Message> implements MessageEnvelope<I, T, C>","io.spine.server.type.AbstractMessageEnvelope"]},{"name":"public abstract class AbstractStatefulReactor<I, S extends Message, B extends ValidatingBuilder<S>> extends AbstractEventReactor","description":"io.spine.server.event.AbstractStatefulReactor","location":"server/io.spine.server.event/-abstract-stateful-reactor/index.html","searchKeys":["AbstractStatefulReactor","public abstract class AbstractStatefulReactor<I, S extends Message, B extends ValidatingBuilder<S>> extends AbstractEventReactor","io.spine.server.event.AbstractStatefulReactor"]},{"name":"public abstract class AbstractStorage<I, M extends Message, R extends ReadRequest<I>> implements Storage<I, M, R>","description":"io.spine.server.storage.AbstractStorage","location":"server/io.spine.server.storage/-abstract-storage/index.html","searchKeys":["AbstractStorage","public abstract class AbstractStorage<I, M extends Message, R extends ReadRequest<I>> implements Storage<I, M, R>","io.spine.server.storage.AbstractStorage"]},{"name":"public abstract class AbstractTracer implements Tracer","description":"io.spine.server.trace.AbstractTracer","location":"server/io.spine.server.trace/-abstract-tracer/index.html","searchKeys":["AbstractTracer","public abstract class AbstractTracer implements Tracer","io.spine.server.trace.AbstractTracer"]},{"name":"public abstract class AbstractWorkRegistry implements ShardedWorkRegistry","description":"io.spine.server.delivery.AbstractWorkRegistry","location":"server/io.spine.server.delivery/-abstract-work-registry/index.html","searchKeys":["AbstractWorkRegistry","public abstract class AbstractWorkRegistry implements ShardedWorkRegistry","io.spine.server.delivery.AbstractWorkRegistry"]},{"name":"public abstract class Aggregate<I, S extends EntityState, B extends ValidatingBuilder<S>> extends CommandHandlingEntity<I, S, B> implements EventPlayer, EventReactor","description":"io.spine.server.aggregate.Aggregate","location":"server/io.spine.server.aggregate/-aggregate/index.html","searchKeys":["Aggregate","public abstract class Aggregate<I, S extends EntityState, B extends ValidatingBuilder<S>> extends CommandHandlingEntity<I, S, B> implements EventPlayer, EventReactor","io.spine.server.aggregate.Aggregate"]},{"name":"public abstract class AggregatePart<I, S extends EntityState, B extends ValidatingBuilder<S>, R extends AggregateRoot<I>> extends Aggregate<I, S, B>","description":"io.spine.server.aggregate.AggregatePart","location":"server/io.spine.server.aggregate/-aggregate-part/index.html","searchKeys":["AggregatePart","public abstract class AggregatePart<I, S extends EntityState, B extends ValidatingBuilder<S>, R extends AggregateRoot<I>> extends Aggregate<I, S, B>","io.spine.server.aggregate.AggregatePart"]},{"name":"public abstract class AggregatePartRepository<I, A extends AggregatePart<I, ? extends Object, ? extends Object, R>, R extends AggregateRoot<I>> extends AggregateRepository<I, A>","description":"io.spine.server.aggregate.AggregatePartRepository","location":"server/io.spine.server.aggregate/-aggregate-part-repository/index.html","searchKeys":["AggregatePartRepository","public abstract class AggregatePartRepository<I, A extends AggregatePart<I, ? extends Object, ? extends Object, R>, R extends AggregateRoot<I>> extends AggregateRepository<I, A>","io.spine.server.aggregate.AggregatePartRepository"]},{"name":"public abstract class AggregateRepository<I, A extends Aggregate<I, ? extends Object, ? extends Object>> extends Repository<I, E> implements CommandDispatcher, EventProducingRepository, EventDispatcherDelegate","description":"io.spine.server.aggregate.AggregateRepository","location":"server/io.spine.server.aggregate/-aggregate-repository/index.html","searchKeys":["AggregateRepository","public abstract class AggregateRepository<I, A extends Aggregate<I, ? extends Object, ? extends Object>> extends Repository<I, E> implements CommandDispatcher, EventProducingRepository, EventDispatcherDelegate","io.spine.server.aggregate.AggregateRepository"]},{"name":"public abstract class AggregateStorage<I> extends AbstractStorage<I, M, R> implements StorageWithLifecycleFlags<I, M, R>","description":"io.spine.server.aggregate.AggregateStorage","location":"server/io.spine.server.aggregate/-aggregate-storage/index.html","searchKeys":["AggregateStorage","public abstract class AggregateStorage<I> extends AbstractStorage<I, M, R> implements StorageWithLifecycleFlags<I, M, R>","io.spine.server.aggregate.AggregateStorage"]},{"name":"public abstract class BoundedContext implements Closeable","description":"io.spine.server.BoundedContext","location":"server/io.spine.server/-bounded-context/index.html","searchKeys":["BoundedContext","public abstract class BoundedContext implements Closeable","io.spine.server.BoundedContext"]},{"name":"public abstract class Bus<T extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, T, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>> implements Closeable","description":"io.spine.server.bus.Bus","location":"server/io.spine.server.bus/-bus/index.html","searchKeys":["Bus","public abstract class Bus<T extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, T, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>> implements Closeable","io.spine.server.bus.Bus"]},{"name":"public abstract class BusBuilder<B extends BusBuilder<B, T, E, C, D>, T extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, T, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>>","description":"io.spine.server.bus.BusBuilder","location":"server/io.spine.server.bus/-bus-builder/index.html","searchKeys":["BusBuilder","public abstract class BusBuilder<B extends BusBuilder<B, T, E, C, D>, T extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, T, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>>","io.spine.server.bus.BusBuilder"]},{"name":"public abstract class ChannelHub<C extends MessageChannel> implements AutoCloseable","description":"io.spine.server.transport.ChannelHub","location":"server/io.spine.server.transport/-channel-hub/index.html","searchKeys":["ChannelHub","public abstract class ChannelHub<C extends MessageChannel> implements AutoCloseable","io.spine.server.transport.ChannelHub"]},{"name":"public abstract class CommandAcceptingMethod<T extends EventProducer, R extends MessageClass<?>> extends AbstractHandlerMethod<T, M, C, E, R>","description":"io.spine.server.command.model.CommandAcceptingMethod","location":"server/io.spine.server.command.model/-command-accepting-method/index.html","searchKeys":["CommandAcceptingMethod","public abstract class CommandAcceptingMethod<T extends EventProducer, R extends MessageClass<?>> extends AbstractHandlerMethod<T, M, C, E, R>","io.spine.server.command.model.CommandAcceptingMethod"]},{"name":"public abstract class CommandException extends RuntimeException implements MessageError","description":"io.spine.server.commandbus.CommandException","location":"server/io.spine.server.commandbus/-command-exception/index.html","searchKeys":["CommandException","public abstract class CommandException extends RuntimeException implements MessageError","io.spine.server.commandbus.CommandException"]},{"name":"public abstract class CommandHandlingEntity<I, S extends EntityState, B extends ValidatingBuilder<S>> extends TransactionalEntity<I, S, B> implements CommandHandler","description":"io.spine.server.command.CommandHandlingEntity","location":"server/io.spine.server.command/-command-handling-entity/index.html","searchKeys":["CommandHandlingEntity","public abstract class CommandHandlingEntity<I, S extends EntityState, B extends ValidatingBuilder<S>> extends TransactionalEntity<I, S, B> implements CommandHandler","io.spine.server.command.CommandHandlingEntity"]},{"name":"public abstract class CommandHandlingEntityClass<E extends Entity> extends EntityClass<E> implements CommandHandlingClass<R, H>","description":"io.spine.server.entity.model.CommandHandlingEntityClass","location":"server/io.spine.server.entity.model/-command-handling-entity-class/index.html","searchKeys":["CommandHandlingEntityClass","public abstract class CommandHandlingEntityClass<E extends Entity> extends EntityClass<E> implements CommandHandlingClass<R, H>","io.spine.server.entity.model.CommandHandlingEntityClass"]},{"name":"public abstract class CommandScheduler implements BusFilter<E>, Closeable","description":"io.spine.server.commandbus.CommandScheduler","location":"server/io.spine.server.commandbus/-command-scheduler/index.html","searchKeys":["CommandScheduler","public abstract class CommandScheduler implements BusFilter<E>, Closeable","io.spine.server.commandbus.CommandScheduler"]},{"name":"public abstract class ConnectionBuilder","description":"io.spine.server.ConnectionBuilder","location":"server/io.spine.server/-connection-builder/index.html","searchKeys":["ConnectionBuilder","public abstract class ConnectionBuilder","io.spine.server.ConnectionBuilder"]},{"name":"public abstract class DefaultRecordBasedRepository<I, E extends AbstractEntity<I, S>, S extends EntityState> extends RecordBasedRepository<I, E, S>","description":"io.spine.server.entity.DefaultRecordBasedRepository","location":"server/io.spine.server.entity/-default-record-based-repository/index.html","searchKeys":["DefaultRecordBasedRepository","public abstract class DefaultRecordBasedRepository<I, E extends AbstractEntity<I, S>, S extends EntityState> extends RecordBasedRepository<I, E, S>","io.spine.server.entity.DefaultRecordBasedRepository"]},{"name":"public abstract class DeliveryStrategy","description":"io.spine.server.delivery.DeliveryStrategy","location":"server/io.spine.server.delivery/-delivery-strategy/index.html","searchKeys":["DeliveryStrategy","public abstract class DeliveryStrategy","io.spine.server.delivery.DeliveryStrategy"]},{"name":"public abstract class DispatcherRegistry<C extends MessageClass<? extends Message>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>, D extends MessageDispatcher<C, E>>","description":"io.spine.server.bus.DispatcherRegistry","location":"server/io.spine.server.bus/-dispatcher-registry/index.html","searchKeys":["DispatcherRegistry","public abstract class DispatcherRegistry<C extends MessageClass<? extends Message>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>, D extends MessageDispatcher<C, E>>","io.spine.server.bus.DispatcherRegistry"]},{"name":"public abstract class Either implements Iterable<T>, Serializable","description":"io.spine.server.tuple.Either","location":"server/io.spine.server.tuple/-either/index.html","searchKeys":["Either","public abstract class Either implements Iterable<T>, Serializable","io.spine.server.tuple.Either"]},{"name":"public abstract class Enricher<M extends Message, C extends EnrichableMessageContext> implements EnrichmentService<M, C>","description":"io.spine.server.enrich.Enricher","location":"server/io.spine.server.enrich/-enricher/index.html","searchKeys":["Enricher","public abstract class Enricher<M extends Message, C extends EnrichableMessageContext> implements EnrichmentService<M, C>","io.spine.server.enrich.Enricher"]},{"name":"public abstract class EnricherBuilder<M extends Message, C extends EnrichableMessageContext, B extends EnricherBuilder<M, C, B>>","description":"io.spine.server.enrich.EnricherBuilder","location":"server/io.spine.server.enrich/-enricher-builder/index.html","searchKeys":["EnricherBuilder","public abstract class EnricherBuilder<M extends Message, C extends EnrichableMessageContext, B extends EnricherBuilder<M, C, B>>","io.spine.server.enrich.EnricherBuilder"]},{"name":"public abstract class EntityMessageEndpoint<I, E extends Entity<I, ? extends Object>, M extends SignalEnvelope<? extends Object, ? extends Object, ? extends Object>> implements MessageEndpoint<I, M>","description":"io.spine.server.entity.EntityMessageEndpoint","location":"server/io.spine.server.entity/-entity-message-endpoint/index.html","searchKeys":["EntityMessageEndpoint","public abstract class EntityMessageEndpoint<I, E extends Entity<I, ? extends Object>, M extends SignalEnvelope<? extends Object, ? extends Object, ? extends Object>> implements MessageEndpoint<I, M>","io.spine.server.entity.EntityMessageEndpoint"]},{"name":"public abstract class EventComparator implements Comparator<T>, Serializable","description":"io.spine.server.event.EventComparator","location":"server/io.spine.server.event/-event-comparator/index.html","searchKeys":["EventComparator","public abstract class EventComparator implements Comparator<T>, Serializable","io.spine.server.event.EventComparator"]},{"name":"public abstract class EventDispatchingRepository<I, E extends AbstractEntity<I, S>, S extends EntityState> extends DefaultRecordBasedRepository<I, E, S> implements EventDispatcher","description":"io.spine.server.entity.EventDispatchingRepository","location":"server/io.spine.server.entity/-event-dispatching-repository/index.html","searchKeys":["EventDispatchingRepository","public abstract class EventDispatchingRepository<I, E extends AbstractEntity<I, S>, S extends EntityState> extends DefaultRecordBasedRepository<I, E, S> implements EventDispatcher","io.spine.server.entity.EventDispatchingRepository"]},{"name":"public abstract class EventException extends RuntimeException implements MessageError","description":"io.spine.server.event.EventException","location":"server/io.spine.server.event/-event-exception/index.html","searchKeys":["EventException","public abstract class EventException extends RuntimeException implements MessageError","io.spine.server.event.EventException"]},{"name":"public abstract class EventHandlerMethod<T, R extends MessageClass<?>> extends AbstractHandlerMethod<T, M, C, E, R> implements RejectionHandler<T, R>","description":"io.spine.server.event.model.EventHandlerMethod","location":"server/io.spine.server.event.model/-event-handler-method/index.html","searchKeys":["EventHandlerMethod","public abstract class EventHandlerMethod<T, R extends MessageClass<?>> extends AbstractHandlerMethod<T, M, C, E, R> implements RejectionHandler<T, R>","io.spine.server.event.model.EventHandlerMethod"]},{"name":"public abstract class EventOperation extends TenantAwareOperation","description":"io.spine.server.tenant.EventOperation","location":"server/io.spine.server.tenant/-event-operation/index.html","searchKeys":["EventOperation","public abstract class EventOperation extends TenantAwareOperation","io.spine.server.tenant.EventOperation"]},{"name":"public abstract class EventPlayingTransaction<I, E extends TransactionalEntity<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends Transaction<I, E, S, B>","description":"io.spine.server.entity.EventPlayingTransaction","location":"server/io.spine.server.entity/-event-playing-transaction/index.html","searchKeys":["EventPlayingTransaction","public abstract class EventPlayingTransaction<I, E extends TransactionalEntity<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends Transaction<I, E, S, B>","io.spine.server.entity.EventPlayingTransaction"]},{"name":"public abstract class MethodSignature<H extends HandlerMethod<? extends Object, ? extends Object, E, ? extends Object>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","description":"io.spine.server.model.MethodSignature","location":"server/io.spine.server.model/-method-signature/index.html","searchKeys":["MethodSignature","public abstract class MethodSignature<H extends HandlerMethod<? extends Object, ? extends Object, E, ? extends Object>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","io.spine.server.model.MethodSignature"]},{"name":"public abstract class Migration<I, E extends TransactionalEntity<I, S, ? extends Object>, S extends EntityState> implements Function<T, R>","description":"io.spine.server.entity.Migration","location":"server/io.spine.server.entity/-migration/index.html","searchKeys":["Migration","public abstract class Migration<I, E extends TransactionalEntity<I, S, ? extends Object>, S extends EntityState> implements Function<T, R>","io.spine.server.entity.Migration"]},{"name":"public abstract class ModelClass<T>","description":"io.spine.server.model.ModelClass","location":"server/io.spine.server.model/-model-class/index.html","searchKeys":["ModelClass","public abstract class ModelClass<T>","io.spine.server.model.ModelClass"]},{"name":"public abstract class MulticastBus<M extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, M, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>> extends Bus<T, E, C, D>","description":"io.spine.server.bus.MulticastBus","location":"server/io.spine.server.bus/-multicast-bus/index.html","searchKeys":["MulticastBus","public abstract class MulticastBus<M extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, M, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>> extends Bus<T, E, C, D>","io.spine.server.bus.MulticastBus"]},{"name":"public abstract class Phase<I>","description":"io.spine.server.entity.Phase","location":"server/io.spine.server.entity/-phase/index.html","searchKeys":["Phase","public abstract class Phase<I>","io.spine.server.entity.Phase"]},{"name":"public abstract class ProcessManager<I, S extends EntityState, B extends ValidatingBuilder<S>> extends CommandHandlingEntity<I, S, B> implements EventReactor, Commander, HasVersionColumn<I, S>, HasLifecycleColumns<I, S>","description":"io.spine.server.procman.ProcessManager","location":"server/io.spine.server.procman/-process-manager/index.html","searchKeys":["ProcessManager","public abstract class ProcessManager<I, S extends EntityState, B extends ValidatingBuilder<S>> extends CommandHandlingEntity<I, S, B> implements EventReactor, Commander, HasVersionColumn<I, S>, HasLifecycleColumns<I, S>","io.spine.server.procman.ProcessManager"]},{"name":"public abstract class ProcessManagerMigration<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends Migration<I, E, S>","description":"io.spine.server.procman.ProcessManagerMigration","location":"server/io.spine.server.procman/-process-manager-migration/index.html","searchKeys":["ProcessManagerMigration","public abstract class ProcessManagerMigration<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends Migration<I, E, S>","io.spine.server.procman.ProcessManagerMigration"]},{"name":"public abstract class ProcessManagerRepository<I, P extends ProcessManager<I, S, ? extends Object>, S extends EntityState> extends EventDispatchingRepository<I, E, S> implements CommandDispatcherDelegate, EventProducingRepository","description":"io.spine.server.procman.ProcessManagerRepository","location":"server/io.spine.server.procman/-process-manager-repository/index.html","searchKeys":["ProcessManagerRepository","public abstract class ProcessManagerRepository<I, P extends ProcessManager<I, S, ? extends Object>, S extends EntityState> extends EventDispatchingRepository<I, E, S> implements CommandDispatcherDelegate, EventProducingRepository","io.spine.server.procman.ProcessManagerRepository"]},{"name":"public abstract class Projection<I, M extends EntityState, B extends ValidatingBuilder<M>> extends TransactionalEntity<I, S, B> implements EventPlayer, EventSubscriber, HasVersionColumn<I, S>, HasLifecycleColumns<I, S>","description":"io.spine.server.projection.Projection","location":"server/io.spine.server.projection/-projection/index.html","searchKeys":["Projection","public abstract class Projection<I, M extends EntityState, B extends ValidatingBuilder<M>> extends TransactionalEntity<I, S, B> implements EventPlayer, EventSubscriber, HasVersionColumn<I, S>, HasLifecycleColumns<I, S>","io.spine.server.projection.Projection"]},{"name":"public abstract class ProjectionMigration<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends Migration<I, E, S>","description":"io.spine.server.projection.ProjectionMigration","location":"server/io.spine.server.projection/-projection-migration/index.html","searchKeys":["ProjectionMigration","public abstract class ProjectionMigration<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends Migration<I, E, S>","io.spine.server.projection.ProjectionMigration"]},{"name":"public abstract class ProjectionRepository<I, P extends Projection<I, S, ? extends Object>, S extends EntityState> extends EventDispatchingRepository<I, E, S>","description":"io.spine.server.projection.ProjectionRepository","location":"server/io.spine.server.projection/-projection-repository/index.html","searchKeys":["ProjectionRepository","public abstract class ProjectionRepository<I, P extends Projection<I, S, ? extends Object>, S extends EntityState> extends EventDispatchingRepository<I, E, S>","io.spine.server.projection.ProjectionRepository"]},{"name":"public abstract class ProjectionStorage<I> extends RecordStorage<I>","description":"io.spine.server.projection.ProjectionStorage","location":"server/io.spine.server.projection/-projection-storage/index.html","searchKeys":["ProjectionStorage","public abstract class ProjectionStorage<I> extends RecordStorage<I>","io.spine.server.projection.ProjectionStorage"]},{"name":"public abstract class QueryOperation extends ActorRequestOperation","description":"io.spine.server.tenant.QueryOperation","location":"server/io.spine.server.tenant/-query-operation/index.html","searchKeys":["QueryOperation","public abstract class QueryOperation extends ActorRequestOperation","io.spine.server.tenant.QueryOperation"]},{"name":"public abstract class RecordBasedRepository<I, E extends Entity<I, S>, S extends EntityState> extends Repository<I, E>","description":"io.spine.server.entity.RecordBasedRepository","location":"server/io.spine.server.entity/-record-based-repository/index.html","searchKeys":["RecordBasedRepository","public abstract class RecordBasedRepository<I, E extends Entity<I, S>, S extends EntityState> extends Repository<I, E>","io.spine.server.entity.RecordBasedRepository"]},{"name":"public abstract class RecordStorage<I> extends AbstractStorage<I, M, R> implements StorageWithLifecycleFlags<I, M, R>, BulkStorageOperationsMixin<I, R>","description":"io.spine.server.storage.RecordStorage","location":"server/io.spine.server.storage/-record-storage/index.html","searchKeys":["RecordStorage","public abstract class RecordStorage<I> extends AbstractStorage<I, M, R> implements StorageWithLifecycleFlags<I, M, R>, BulkStorageOperationsMixin<I, R>","io.spine.server.storage.RecordStorage"]},{"name":"public abstract class Repository<I, E extends Entity<I, ? extends Object>> implements ContextAware, Closeable","description":"io.spine.server.entity.Repository","location":"server/io.spine.server.entity/-repository/index.html","searchKeys":["Repository","public abstract class Repository<I, E extends Entity<I, ? extends Object>> implements ContextAware, Closeable","io.spine.server.entity.Repository"]},{"name":"public abstract class ShardProcessingSession","description":"io.spine.server.delivery.ShardProcessingSession","location":"server/io.spine.server.delivery/-shard-processing-session/index.html","searchKeys":["ShardProcessingSession","public abstract class ShardProcessingSession","io.spine.server.delivery.ShardProcessingSession"]},{"name":"public abstract class StorageConverter<I, E extends Entity<I, S>, S extends EntityState> implements Serializable","description":"io.spine.server.entity.StorageConverter","location":"server/io.spine.server.entity/-storage-converter/index.html","searchKeys":["StorageConverter","public abstract class StorageConverter<I, E extends Entity<I, S>, S extends EntityState> implements Serializable","io.spine.server.entity.StorageConverter"]},{"name":"public abstract class Subscriber extends AbstractChannel","description":"io.spine.server.transport.Subscriber","location":"server/io.spine.server.transport/-subscriber/index.html","searchKeys":["Subscriber","public abstract class Subscriber extends AbstractChannel","io.spine.server.transport.Subscriber"]},{"name":"public abstract class SubscriberMethod extends AbstractHandlerMethod<T, M, C, E, R> implements VoidMethod<T, C, E>, SelectiveHandler<T, C, E, R>","description":"io.spine.server.event.model.SubscriberMethod","location":"server/io.spine.server.event.model/-subscriber-method/index.html","searchKeys":["SubscriberMethod","public abstract class SubscriberMethod extends AbstractHandlerMethod<T, M, C, E, R> implements VoidMethod<T, C, E>, SelectiveHandler<T, C, E, R>","io.spine.server.event.model.SubscriberMethod"]},{"name":"public abstract class SubscriptionOperation extends ActorRequestOperation","description":"io.spine.server.tenant.SubscriptionOperation","location":"server/io.spine.server.tenant/-subscription-operation/index.html","searchKeys":["SubscriptionOperation","public abstract class SubscriptionOperation extends ActorRequestOperation","io.spine.server.tenant.SubscriptionOperation"]},{"name":"public abstract class TenantAwareFunction0<T> extends TenantAwareFunction<F, T>","description":"io.spine.server.tenant.TenantAwareFunction0","location":"server/io.spine.server.tenant/-tenant-aware-function0/index.html","searchKeys":["TenantAwareFunction0","public abstract class TenantAwareFunction0<T> extends TenantAwareFunction<F, T>","io.spine.server.tenant.TenantAwareFunction0"]},{"name":"public abstract class TenantAwareFunction<F, T> extends TenantAware implements Function<T, R>","description":"io.spine.server.tenant.TenantAwareFunction","location":"server/io.spine.server.tenant/-tenant-aware-function/index.html","searchKeys":["TenantAwareFunction","public abstract class TenantAwareFunction<F, T> extends TenantAware implements Function<T, R>","io.spine.server.tenant.TenantAwareFunction"]},{"name":"public abstract class TenantAwareOperation extends TenantAware implements Runnable","description":"io.spine.server.tenant.TenantAwareOperation","location":"server/io.spine.server.tenant/-tenant-aware-operation/index.html","searchKeys":["TenantAwareOperation","public abstract class TenantAwareOperation extends TenantAware implements Runnable","io.spine.server.tenant.TenantAwareOperation"]},{"name":"public abstract class TenantFunction<T> extends TenantAware implements Function<T, R>","description":"io.spine.server.tenant.TenantFunction","location":"server/io.spine.server.tenant/-tenant-function/index.html","searchKeys":["TenantFunction","public abstract class TenantFunction<T> extends TenantAware implements Function<T, R>","io.spine.server.tenant.TenantFunction"]},{"name":"public abstract class TenantRepository<T extends EntityState, E extends TenantRepository.Entity<T>> extends DefaultRecordBasedRepository<I, E, S> implements TenantIndex","description":"io.spine.server.tenant.TenantRepository","location":"server/io.spine.server.tenant/-tenant-repository/index.html","searchKeys":["TenantRepository","public abstract class TenantRepository<T extends EntityState, E extends TenantRepository.Entity<T>> extends DefaultRecordBasedRepository<I, E, S> implements TenantIndex","io.spine.server.tenant.TenantRepository"]},{"name":"public abstract class Transaction<I, E extends TransactionalEntity<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>>","description":"io.spine.server.entity.Transaction","location":"server/io.spine.server.entity/-transaction/index.html","searchKeys":["Transaction","public abstract class Transaction<I, E extends TransactionalEntity<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>>","io.spine.server.entity.Transaction"]},{"name":"public abstract class TransactionalEntity<I, S extends EntityState, B extends ValidatingBuilder<S>> extends AbstractEntity<I, S>","description":"io.spine.server.entity.TransactionalEntity","location":"server/io.spine.server.entity/-transactional-entity/index.html","searchKeys":["TransactionalEntity","public abstract class TransactionalEntity<I, S extends EntityState, B extends ValidatingBuilder<S>> extends AbstractEntity<I, S>","io.spine.server.entity.TransactionalEntity"]},{"name":"public abstract class Tuple implements Iterable<T>, Serializable","description":"io.spine.server.tuple.Tuple","location":"server/io.spine.server.tuple/-tuple/index.html","searchKeys":["Tuple","public abstract class Tuple implements Iterable<T>, Serializable","io.spine.server.tuple.Tuple"]},{"name":"public abstract class UnicastBus<T extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, T, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>> extends Bus<T, E, C, D>","description":"io.spine.server.bus.UnicastBus","location":"server/io.spine.server.bus/-unicast-bus/index.html","searchKeys":["UnicastBus","public abstract class UnicastBus<T extends Signal<?, ?, ?>, E extends SignalEnvelope<? extends Object, T, ? extends Object>, C extends MessageClass<? extends Message>, D extends MessageDispatcher<C, E>> extends Bus<T, E, C, D>","io.spine.server.bus.UnicastBus"]},{"name":"public abstract class VersionIncrement","description":"io.spine.server.entity.VersionIncrement","location":"server/io.spine.server.entity/-version-increment/index.html","searchKeys":["VersionIncrement","public abstract class VersionIncrement","io.spine.server.entity.VersionIncrement"]},{"name":"public class AggregateClass<A extends Aggregate> extends CommandHandlingEntityClass<E> implements ReactingClass","description":"io.spine.server.aggregate.model.AggregateClass","location":"server/io.spine.server.aggregate.model/-aggregate-class/index.html","searchKeys":["AggregateClass","public class AggregateClass<A extends Aggregate> extends CommandHandlingEntityClass<E> implements ReactingClass","io.spine.server.aggregate.model.AggregateClass"]},{"name":"public class AggregateRoot<I>","description":"io.spine.server.aggregate.AggregateRoot","location":"server/io.spine.server.aggregate/-aggregate-root/index.html","searchKeys":["AggregateRoot","public class AggregateRoot<I>","io.spine.server.aggregate.AggregateRoot"]},{"name":"public class AggregateTransaction<I, S extends EntityState, B extends ValidatingBuilder<S>> extends EventPlayingTransaction<I, E, S, B>","description":"io.spine.server.aggregate.AggregateTransaction","location":"server/io.spine.server.aggregate/-aggregate-transaction/index.html","searchKeys":["AggregateTransaction","public class AggregateTransaction<I, S extends EntityState, B extends ValidatingBuilder<S>> extends EventPlayingTransaction<I, E, S, B>","io.spine.server.aggregate.AggregateTransaction"]},{"name":"public class Builder","description":"io.spine.server.CommandService.Builder","location":"server/io.spine.server/-command-service/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.server.CommandService.Builder"]},{"name":"public class Builder","description":"io.spine.server.QueryService.Builder","location":"server/io.spine.server/-query-service/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.server.QueryService.Builder"]},{"name":"public class Builder","description":"io.spine.server.SubscriptionService.Builder","location":"server/io.spine.server/-subscription-service/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.server.SubscriptionService.Builder"]},{"name":"public class Builder","description":"io.spine.server.entity.storage.QueryParameters.Builder","location":"server/io.spine.server.entity.storage/-query-parameters/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.server.entity.storage.QueryParameters.Builder"]},{"name":"public class Builder","description":"io.spine.server.stand.Stand.Builder","location":"server/io.spine.server.stand/-stand/-builder/index.html","searchKeys":["Builder","public class Builder","io.spine.server.stand.Stand.Builder"]},{"name":"public class Builder extends BusBuilder<B, T, E, C, D>","description":"io.spine.server.aggregate.ImportBus.Builder","location":"server/io.spine.server.aggregate/-import-bus/-builder/index.html","searchKeys":["Builder","public class Builder extends BusBuilder<B, T, E, C, D>","io.spine.server.aggregate.ImportBus.Builder"]},{"name":"public class Builder extends BusBuilder<B, T, E, C, D>","description":"io.spine.server.commandbus.CommandBus.Builder","location":"server/io.spine.server.commandbus/-command-bus/-builder/index.html","searchKeys":["Builder","public class Builder extends BusBuilder<B, T, E, C, D>","io.spine.server.commandbus.CommandBus.Builder"]},{"name":"public class Builder extends BusBuilder<B, T, E, C, D>","description":"io.spine.server.event.EventBus.Builder","location":"server/io.spine.server.event/-event-bus/-builder/index.html","searchKeys":["Builder","public class Builder extends BusBuilder<B, T, E, C, D>","io.spine.server.event.EventBus.Builder"]},{"name":"public class CommandReactionSignature extends MethodSignature<H, E>","description":"io.spine.server.command.model.CommandReactionSignature","location":"server/io.spine.server.command.model/-command-reaction-signature/index.html","searchKeys":["CommandReactionSignature","public class CommandReactionSignature extends MethodSignature<H, E>","io.spine.server.command.model.CommandReactionSignature"]},{"name":"public class CommandSubstituteSignature extends CommandAcceptingSignature<H>","description":"io.spine.server.command.model.CommandSubstituteSignature","location":"server/io.spine.server.command.model/-command-substitute-signature/index.html","searchKeys":["CommandSubstituteSignature","public class CommandSubstituteSignature extends CommandAcceptingSignature<H>","io.spine.server.command.model.CommandSubstituteSignature"]},{"name":"public class DefaultProjectionRepository<I, P extends Projection<I, S, ? extends Object>, S extends EntityState> extends ProjectionRepository<I, P, S> implements DefaultRepository","description":"io.spine.server.projection.DefaultProjectionRepository","location":"server/io.spine.server.projection/-default-projection-repository/index.html","searchKeys":["DefaultProjectionRepository","public class DefaultProjectionRepository<I, P extends Projection<I, S, ? extends Object>, S extends EntityState> extends ProjectionRepository<I, P, S> implements DefaultRepository","io.spine.server.projection.DefaultProjectionRepository"]},{"name":"public class DelegatingCommandDispatcher implements CommandDispatcher","description":"io.spine.server.commandbus.DelegatingCommandDispatcher","location":"server/io.spine.server.commandbus/-delegating-command-dispatcher/index.html","searchKeys":["DelegatingCommandDispatcher","public class DelegatingCommandDispatcher implements CommandDispatcher","io.spine.server.commandbus.DelegatingCommandDispatcher"]},{"name":"public class DeliveryMonitor","description":"io.spine.server.delivery.DeliveryMonitor","location":"server/io.spine.server.delivery/-delivery-monitor/index.html","searchKeys":["DeliveryMonitor","public class DeliveryMonitor","io.spine.server.delivery.DeliveryMonitor"]},{"name":"public class EitherOf5<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>, Element.EValue<T>","description":"io.spine.server.tuple.EitherOf5","location":"server/io.spine.server.tuple/-either-of5/index.html","searchKeys":["EitherOf5","public class EitherOf5<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>, Element.EValue<T>","io.spine.server.tuple.EitherOf5"]},{"name":"public class Entity<T extends EntityState> extends AbstractEntity<I, S>","description":"io.spine.server.tenant.TenantRepository.Entity","location":"server/io.spine.server.tenant/-tenant-repository/-entity/index.html","searchKeys":["Entity","public class Entity<T extends EntityState> extends AbstractEntity<I, S>","io.spine.server.tenant.TenantRepository.Entity"]},{"name":"public class EntityClass<E extends Entity> extends ModelClass<T>","description":"io.spine.server.entity.model.EntityClass","location":"server/io.spine.server.entity.model/-entity-class/index.html","searchKeys":["EntityClass","public class EntityClass<E extends Entity> extends ModelClass<T>","io.spine.server.entity.model.EntityClass"]},{"name":"public class EntityLifecycle","description":"io.spine.server.entity.EntityLifecycle","location":"server/io.spine.server.entity/-entity-lifecycle/index.html","searchKeys":["EntityLifecycle","public class EntityLifecycle","io.spine.server.entity.EntityLifecycle"]},{"name":"public class EventFactory","description":"io.spine.server.event.EventFactory","location":"server/io.spine.server.event/-event-factory/index.html","searchKeys":["EventFactory","public class EventFactory","io.spine.server.event.EventFactory"]},{"name":"public class EventReceivingClassDelegate<T extends EventReceiver, P extends MessageClass<?>, M extends HandlerMethod<? extends Object, EventClass, ? extends Object, P>> extends ModelClass<T>","description":"io.spine.server.event.model.EventReceivingClassDelegate","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/index.html","searchKeys":["EventReceivingClassDelegate","public class EventReceivingClassDelegate<T extends EventReceiver, P extends MessageClass<?>, M extends HandlerMethod<? extends Object, EventClass, ? extends Object, P>> extends ModelClass<T>","io.spine.server.event.model.EventReceivingClassDelegate"]},{"name":"public class ExecutorCommandScheduler extends CommandScheduler","description":"io.spine.server.commandbus.ExecutorCommandScheduler","location":"server/io.spine.server.commandbus/-executor-command-scheduler/index.html","searchKeys":["ExecutorCommandScheduler","public class ExecutorCommandScheduler extends CommandScheduler","io.spine.server.commandbus.ExecutorCommandScheduler"]},{"name":"public class InMemoryCatchUpStorage extends AbstractStorage<I, M, R> implements CatchUpStorage","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/index.html","searchKeys":["InMemoryCatchUpStorage","public class InMemoryCatchUpStorage extends AbstractStorage<I, M, R> implements CatchUpStorage","io.spine.server.storage.memory.InMemoryCatchUpStorage"]},{"name":"public class InMemoryShardSession extends ShardProcessingSession","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.InMemoryShardSession","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/-in-memory-shard-session/index.html","searchKeys":["InMemoryShardSession","public class InMemoryShardSession extends ShardProcessingSession","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.InMemoryShardSession"]},{"name":"public class InMemoryTransportFactory implements TransportFactory","description":"io.spine.server.transport.memory.InMemoryTransportFactory","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/index.html","searchKeys":["InMemoryTransportFactory","public class InMemoryTransportFactory implements TransportFactory","io.spine.server.transport.memory.InMemoryTransportFactory"]},{"name":"public class InvalidCommandException extends CommandException implements MessageInvalid","description":"io.spine.server.commandbus.InvalidCommandException","location":"server/io.spine.server.commandbus/-invalid-command-exception/index.html","searchKeys":["InvalidCommandException","public class InvalidCommandException extends CommandException implements MessageInvalid","io.spine.server.commandbus.InvalidCommandException"]},{"name":"public class InvalidEventException extends EventException implements MessageInvalid","description":"io.spine.server.event.InvalidEventException","location":"server/io.spine.server.event/-invalid-event-exception/index.html","searchKeys":["InvalidEventException","public class InvalidEventException extends EventException implements MessageInvalid","io.spine.server.event.InvalidEventException"]},{"name":"public class InvalidRequestException extends RuntimeException implements MessageError","description":"io.spine.server.stand.InvalidRequestException","location":"server/io.spine.server.stand/-invalid-request-exception/index.html","searchKeys":["InvalidRequestException","public class InvalidRequestException extends RuntimeException implements MessageError","io.spine.server.stand.InvalidRequestException"]},{"name":"public class InvalidSubscriptionException extends InvalidRequestException","description":"io.spine.server.stand.InvalidSubscriptionException","location":"server/io.spine.server.stand/-invalid-subscription-exception/index.html","searchKeys":["InvalidSubscriptionException","public class InvalidSubscriptionException extends InvalidRequestException","io.spine.server.stand.InvalidSubscriptionException"]},{"name":"public class InvalidTopicException extends InvalidRequestException","description":"io.spine.server.stand.InvalidTopicException","location":"server/io.spine.server.stand/-invalid-topic-exception/index.html","searchKeys":["InvalidTopicException","public class InvalidTopicException extends InvalidRequestException","io.spine.server.stand.InvalidTopicException"]},{"name":"public class LabelNotFoundException extends RuntimeException","description":"io.spine.server.delivery.LabelNotFoundException","location":"server/io.spine.server.delivery/-label-not-found-exception/index.html","searchKeys":["LabelNotFoundException","public class LabelNotFoundException extends RuntimeException","io.spine.server.delivery.LabelNotFoundException"]},{"name":"public class Model","description":"io.spine.server.model.Model","location":"server/io.spine.server.model/-model/index.html","searchKeys":["Model","public class Model","io.spine.server.model.Model"]},{"name":"public class ModelError extends Error","description":"io.spine.server.model.ModelError","location":"server/io.spine.server.model/-model-error/index.html","searchKeys":["ModelError","public class ModelError extends Error","io.spine.server.model.ModelError"]},{"name":"public class PmCommandEndpoint<I, P extends ProcessManager<I, ? extends Object, ? extends Object>> extends PmEndpoint<I, P, M> implements CommandEndpoint<I>","description":"io.spine.server.procman.PmCommandEndpoint","location":"server/io.spine.server.procman/-pm-command-endpoint/index.html","searchKeys":["PmCommandEndpoint","public class PmCommandEndpoint<I, P extends ProcessManager<I, ? extends Object, ? extends Object>> extends PmEndpoint<I, P, M> implements CommandEndpoint<I>","io.spine.server.procman.PmCommandEndpoint"]},{"name":"public class PmEventEndpoint<I, P extends ProcessManager<I, ? extends Object, ? extends Object>> extends PmEndpoint<I, P, M> implements EventEndpoint<I>","description":"io.spine.server.procman.PmEventEndpoint","location":"server/io.spine.server.procman/-pm-event-endpoint/index.html","searchKeys":["PmEventEndpoint","public class PmEventEndpoint<I, P extends ProcessManager<I, ? extends Object, ? extends Object>> extends PmEndpoint<I, P, M> implements EventEndpoint<I>","io.spine.server.procman.PmEventEndpoint"]},{"name":"public class PmTransaction<I, S extends EntityState, B extends ValidatingBuilder<S>> extends Transaction<I, E, S, B>","description":"io.spine.server.procman.PmTransaction","location":"server/io.spine.server.procman/-pm-transaction/index.html","searchKeys":["PmTransaction","public class PmTransaction<I, S extends EntityState, B extends ValidatingBuilder<S>> extends Transaction<I, E, S, B>","io.spine.server.procman.PmTransaction"]},{"name":"public class ProjectionEndpoint<I, P extends Projection<I, S, ? extends Object>, S extends EntityState> extends EntityMessageEndpoint<I, E, M> implements EventEndpoint<I>","description":"io.spine.server.projection.ProjectionEndpoint","location":"server/io.spine.server.projection/-projection-endpoint/index.html","searchKeys":["ProjectionEndpoint","public class ProjectionEndpoint<I, P extends Projection<I, S, ? extends Object>, S extends EntityState> extends EntityMessageEndpoint<I, E, M> implements EventEndpoint<I>","io.spine.server.projection.ProjectionEndpoint"]},{"name":"public class ProjectionTransaction<I, S extends EntityState, B extends ValidatingBuilder<S>> extends EventPlayingTransaction<I, E, S, B>","description":"io.spine.server.projection.ProjectionTransaction","location":"server/io.spine.server.projection/-projection-transaction/index.html","searchKeys":["ProjectionTransaction","public class ProjectionTransaction<I, S extends EntityState, B extends ValidatingBuilder<S>> extends EventPlayingTransaction<I, E, S, B>","io.spine.server.projection.ProjectionTransaction"]},{"name":"public class PublisherHub extends ChannelHub<C>","description":"io.spine.server.transport.PublisherHub","location":"server/io.spine.server.transport/-publisher-hub/index.html","searchKeys":["PublisherHub","public class PublisherHub extends ChannelHub<C>","io.spine.server.transport.PublisherHub"]},{"name":"public class SignatureMismatchException extends RuntimeException","description":"io.spine.server.model.SignatureMismatchException","location":"server/io.spine.server.model/-signature-mismatch-exception/index.html","searchKeys":["SignatureMismatchException","public class SignatureMismatchException extends RuntimeException","io.spine.server.model.SignatureMismatchException"]},{"name":"public class SingleThreadInMemTransportFactory extends InMemoryTransportFactory","description":"io.spine.server.transport.memory.SingleThreadInMemTransportFactory","location":"server/io.spine.server.transport.memory/-single-thread-in-mem-transport-factory/index.html","searchKeys":["SingleThreadInMemTransportFactory","public class SingleThreadInMemTransportFactory extends InMemoryTransportFactory","io.spine.server.transport.memory.SingleThreadInMemTransportFactory"]},{"name":"public class Stand implements AutoCloseable","description":"io.spine.server.stand.Stand","location":"server/io.spine.server.stand/-stand/index.html","searchKeys":["Stand","public class Stand implements AutoCloseable","io.spine.server.stand.Stand"]},{"name":"public class Statuses","description":"io.spine.server.transport.Statuses","location":"server/io.spine.server.transport/-statuses/index.html","searchKeys":["Statuses","public class Statuses","io.spine.server.transport.Statuses"]},{"name":"public class SubscriberHub extends ChannelHub<C>","description":"io.spine.server.transport.SubscriberHub","location":"server/io.spine.server.transport/-subscriber-hub/index.html","searchKeys":["SubscriberHub","public class SubscriberHub extends ChannelHub<C>","io.spine.server.transport.SubscriberHub"]},{"name":"public class SubscriberSignature extends EventAcceptingSignature<H>","description":"io.spine.server.event.model.SubscriberSignature","location":"server/io.spine.server.event.model/-subscriber-signature/index.html","searchKeys":["SubscriberSignature","public class SubscriberSignature extends EventAcceptingSignature<H>","io.spine.server.event.model.SubscriberSignature"]},{"name":"public class TypeConfigurator","description":"io.spine.server.ServerEnvironment.TypeConfigurator","location":"server/io.spine.server/-server-environment/-type-configurator/index.html","searchKeys":["TypeConfigurator","public class TypeConfigurator","io.spine.server.ServerEnvironment.TypeConfigurator"]},{"name":"public class UnsupportedCommandException extends CommandException implements MessageUnhandled","description":"io.spine.server.commandbus.UnsupportedCommandException","location":"server/io.spine.server.commandbus/-unsupported-command-exception/index.html","searchKeys":["UnsupportedCommandException","public class UnsupportedCommandException extends CommandException implements MessageUnhandled","io.spine.server.commandbus.UnsupportedCommandException"]},{"name":"public class UnsupportedEventException extends EventException implements MessageUnhandled","description":"io.spine.server.event.UnsupportedEventException","location":"server/io.spine.server.event/-unsupported-event-exception/index.html","searchKeys":["UnsupportedEventException","public class UnsupportedEventException extends EventException implements MessageUnhandled","io.spine.server.event.UnsupportedEventException"]},{"name":"public class UnsupportedExternalMessageException extends RuntimeException implements MessageUnhandled","description":"io.spine.server.integration.UnsupportedExternalMessageException","location":"server/io.spine.server.integration/-unsupported-external-message-exception/index.html","searchKeys":["UnsupportedExternalMessageException","public class UnsupportedExternalMessageException extends RuntimeException implements MessageUnhandled","io.spine.server.integration.UnsupportedExternalMessageException"]},{"name":"public enum AggregateField implements StorageField","description":"io.spine.server.aggregate.AggregateField","location":"server/io.spine.server.aggregate/-aggregate-field/index.html","searchKeys":["AggregateField","public enum AggregateField implements StorageField","io.spine.server.aggregate.AggregateField"]},{"name":"public enum AllowImportAttribute implements Attribute<V>","description":"io.spine.server.aggregate.model.AllowImportAttribute","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/index.html","searchKeys":["AllowImportAttribute","public enum AllowImportAttribute implements Attribute<V>","io.spine.server.aggregate.model.AllowImportAttribute"]},{"name":"public enum EventContextField implements StorageField","description":"io.spine.server.event.storage.EventContextField","location":"server/io.spine.server.event.storage/-event-context-field/index.html","searchKeys":["EventContextField","public enum EventContextField implements StorageField","io.spine.server.event.storage.EventContextField"]},{"name":"public enum EventField implements StorageField","description":"io.spine.server.event.storage.EventField","location":"server/io.spine.server.event.storage/-event-field/index.html","searchKeys":["EventField","public enum EventField implements StorageField","io.spine.server.event.storage.EventField"]},{"name":"public enum GenericParameter","description":"io.spine.server.aggregate.AggregatePart.GenericParameter","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/index.html","searchKeys":["GenericParameter","public enum GenericParameter","io.spine.server.aggregate.AggregatePart.GenericParameter"]},{"name":"public enum GenericParameter","description":"io.spine.server.entity.Entity.GenericParameter","location":"server/io.spine.server.entity/-entity/-generic-parameter/index.html","searchKeys":["GenericParameter","public enum GenericParameter","io.spine.server.entity.Entity.GenericParameter"]},{"name":"public enum LifecycleFlagField implements StorageField","description":"io.spine.server.storage.LifecycleFlagField","location":"server/io.spine.server.storage/-lifecycle-flag-field/index.html","searchKeys":["LifecycleFlagField","public enum LifecycleFlagField implements StorageField","io.spine.server.storage.LifecycleFlagField"]},{"name":"public enum MatchCriterion","description":"io.spine.server.model.MatchCriterion","location":"server/io.spine.server.model/-match-criterion/index.html","searchKeys":["MatchCriterion","public enum MatchCriterion","io.spine.server.model.MatchCriterion"]},{"name":"public enum NoOpSystemClient implements SystemClient","description":"io.spine.system.server.NoOpSystemClient","location":"server/io.spine.system.server/-no-op-system-client/index.html","searchKeys":["NoOpSystemClient","public enum NoOpSystemClient implements SystemClient","io.spine.system.server.NoOpSystemClient"]},{"name":"public enum NoOpSystemReadSide implements SystemReadSide","description":"io.spine.system.server.NoOpSystemReadSide","location":"server/io.spine.system.server/-no-op-system-read-side/index.html","searchKeys":["NoOpSystemReadSide","public enum NoOpSystemReadSide implements SystemReadSide","io.spine.system.server.NoOpSystemReadSide"]},{"name":"public enum NoOpSystemWriteSide implements SystemWriteSide","description":"io.spine.system.server.NoOpSystemWriteSide","location":"server/io.spine.system.server/-no-op-system-write-side/index.html","searchKeys":["NoOpSystemWriteSide","public enum NoOpSystemWriteSide implements SystemWriteSide","io.spine.system.server.NoOpSystemWriteSide"]},{"name":"public enum StateField implements StorageField","description":"io.spine.server.storage.StateField","location":"server/io.spine.server.storage/-state-field/index.html","searchKeys":["StateField","public enum StateField implements StorageField","io.spine.server.storage.StateField"]},{"name":"public enum VersionField implements StorageField","description":"io.spine.server.storage.VersionField","location":"server/io.spine.server.storage/-version-field/index.html","searchKeys":["VersionField","public enum VersionField implements StorageField","io.spine.server.storage.VersionField"]},{"name":"public final class AccessModifier implements Predicate<T>","description":"io.spine.server.model.AccessModifier","location":"server/io.spine.server.model/-access-modifier/index.html","searchKeys":["AccessModifier","public final class AccessModifier implements Predicate<T>","io.spine.server.model.AccessModifier"]},{"name":"public final class Acks","description":"io.spine.server.bus.Acks","location":"server/io.spine.server.bus/-acks/index.html","searchKeys":["Acks","public final class Acks","io.spine.server.bus.Acks"]},{"name":"public final class AggregatePartClass<A extends AggregatePart> extends AggregateClass<A>","description":"io.spine.server.aggregate.model.AggregatePartClass","location":"server/io.spine.server.aggregate.model/-aggregate-part-class/index.html","searchKeys":["AggregatePartClass","public final class AggregatePartClass<A extends AggregatePart> extends AggregateClass<A>","io.spine.server.aggregate.model.AggregatePartClass"]},{"name":"public final class AggregateReadRequest<I> implements ReadRequest<I>","description":"io.spine.server.aggregate.AggregateReadRequest","location":"server/io.spine.server.aggregate/-aggregate-read-request/index.html","searchKeys":["AggregateReadRequest","public final class AggregateReadRequest<I> implements ReadRequest<I>","io.spine.server.aggregate.AggregateReadRequest"]},{"name":"public final class AllowedParams<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","description":"io.spine.server.model.AllowedParams","location":"server/io.spine.server.model/-allowed-params/index.html","searchKeys":["AllowedParams","public final class AllowedParams<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","io.spine.server.model.AllowedParams"]},{"name":"public final class Applier extends AbstractHandlerMethod<T, M, C, E, R> implements VoidMethod<T, C, E>","description":"io.spine.server.aggregate.model.Applier","location":"server/io.spine.server.aggregate.model/-applier/index.html","searchKeys":["Applier","public final class Applier extends AbstractHandlerMethod<T, M, C, E, R> implements VoidMethod<T, C, E>","io.spine.server.aggregate.model.Applier"]},{"name":"public final class ArgumentFilter implements Predicate<T>","description":"io.spine.server.model.ArgumentFilter","location":"server/io.spine.server.model/-argument-filter/index.html","searchKeys":["ArgumentFilter","public final class ArgumentFilter implements Predicate<T>","io.spine.server.model.ArgumentFilter"]},{"name":"public final class BoundedContextBuilder","description":"io.spine.server.BoundedContextBuilder","location":"server/io.spine.server/-bounded-context-builder/index.html","searchKeys":["BoundedContextBuilder","public final class BoundedContextBuilder","io.spine.server.BoundedContextBuilder"]},{"name":"public final class Builder","description":"io.spine.server.entity.CompositeEventFilter.Builder","location":"server/io.spine.server.entity/-composite-event-filter/-builder/index.html","searchKeys":["Builder","public final class Builder","io.spine.server.entity.CompositeEventFilter.Builder"]},{"name":"public final class Builder","description":"io.spine.server.entity.EventFieldFilter.Builder","location":"server/io.spine.server.entity/-event-field-filter/-builder/index.html","searchKeys":["Builder","public final class Builder","io.spine.server.entity.EventFieldFilter.Builder"]},{"name":"public final class Builder extends ConnectionBuilder","description":"io.spine.server.GrpcContainer.Builder","location":"server/io.spine.server/-grpc-container/-builder/index.html","searchKeys":["Builder","public final class Builder extends ConnectionBuilder","io.spine.server.GrpcContainer.Builder"]},{"name":"public final class Builder extends ConnectionBuilder","description":"io.spine.server.Server.Builder","location":"server/io.spine.server/-server/-builder/index.html","searchKeys":["Builder","public final class Builder extends ConnectionBuilder","io.spine.server.Server.Builder"]},{"name":"public final class Builder extends EnricherBuilder<M, C, B>","description":"io.spine.server.event.EventEnricher.Builder","location":"server/io.spine.server.event/-event-enricher/-builder/index.html","searchKeys":["Builder","public final class Builder extends EnricherBuilder<M, C, B>","io.spine.server.event.EventEnricher.Builder"]},{"name":"public final class Builder<I>","description":"io.spine.server.delivery.Inbox.Builder","location":"server/io.spine.server.delivery/-inbox/-builder/index.html","searchKeys":["Builder","public final class Builder<I>","io.spine.server.delivery.Inbox.Builder"]},{"name":"public final class CatchUpAlreadyStartedException extends IllegalStateException","description":"io.spine.server.delivery.CatchUpAlreadyStartedException","location":"server/io.spine.server.delivery/-catch-up-already-started-exception/index.html","searchKeys":["CatchUpAlreadyStartedException","public final class CatchUpAlreadyStartedException extends IllegalStateException","io.spine.server.delivery.CatchUpAlreadyStartedException"]},{"name":"public final class CatchUpProcess<I> extends AbstractStatefulReactor<I, S, B>","description":"io.spine.server.delivery.CatchUpProcess","location":"server/io.spine.server.delivery/-catch-up-process/index.html","searchKeys":["CatchUpProcess","public final class CatchUpProcess<I> extends AbstractStatefulReactor<I, S, B>","io.spine.server.delivery.CatchUpProcess"]},{"name":"public final class CatchUpProcessBuilder<I>","description":"io.spine.server.delivery.CatchUpProcessBuilder","location":"server/io.spine.server.delivery/-catch-up-process-builder/index.html","searchKeys":["CatchUpProcessBuilder","public final class CatchUpProcessBuilder<I>","io.spine.server.delivery.CatchUpProcessBuilder"]},{"name":"public final class CatchUpReadRequest implements ReadRequest<I>","description":"io.spine.server.delivery.CatchUpReadRequest","location":"server/io.spine.server.delivery/-catch-up-read-request/index.html","searchKeys":["CatchUpReadRequest","public final class CatchUpReadRequest implements ReadRequest<I>","io.spine.server.delivery.CatchUpReadRequest"]},{"name":"public final class ColumnName","description":"io.spine.server.entity.storage.ColumnName","location":"server/io.spine.server.entity.storage/-column-name/index.html","searchKeys":["ColumnName","public final class ColumnName","io.spine.server.entity.storage.ColumnName"]},{"name":"public final class Columns","description":"io.spine.server.entity.storage.Columns","location":"server/io.spine.server.entity.storage/-columns/index.html","searchKeys":["Columns","public final class Columns","io.spine.server.entity.storage.Columns"]},{"name":"public final class CommandBus extends UnicastBus<T, E, C, D>","description":"io.spine.server.commandbus.CommandBus","location":"server/io.spine.server.commandbus/-command-bus/index.html","searchKeys":["CommandBus","public final class CommandBus extends UnicastBus<T, E, C, D>","io.spine.server.commandbus.CommandBus"]},{"name":"public final class CommandClass","description":"io.spine.server.type.CommandClass","location":"server/io.spine.server.type/-command-class/index.html","searchKeys":["CommandClass","public final class CommandClass","io.spine.server.type.CommandClass"]},{"name":"public final class CommandDestinations","description":"io.spine.server.delivery.Inbox.CommandDestinations","location":"server/io.spine.server.delivery/-inbox/-command-destinations/index.html","searchKeys":["CommandDestinations","public final class CommandDestinations","io.spine.server.delivery.Inbox.CommandDestinations"]},{"name":"public final class CommandDispatchingPhase<I> extends Phase<I>","description":"io.spine.server.entity.CommandDispatchingPhase","location":"server/io.spine.server.entity/-command-dispatching-phase/index.html","searchKeys":["CommandDispatchingPhase","public final class CommandDispatchingPhase<I> extends Phase<I>","io.spine.server.entity.CommandDispatchingPhase"]},{"name":"public final class CommandEnvelope extends AbstractMessageEnvelope<I, T, C> implements SignalEnvelope<I, T, C>","description":"io.spine.server.type.CommandEnvelope","location":"server/io.spine.server.type/-command-envelope/index.html","searchKeys":["CommandEnvelope","public final class CommandEnvelope extends AbstractMessageEnvelope<I, T, C> implements SignalEnvelope<I, T, C>","io.spine.server.type.CommandEnvelope"]},{"name":"public final class CommandHandlerClass<C extends AbstractCommandHandler> extends AbstractCommandHandlingClass<C, R, H>","description":"io.spine.server.command.model.CommandHandlerClass","location":"server/io.spine.server.command.model/-command-handler-class/index.html","searchKeys":["CommandHandlerClass","public final class CommandHandlerClass<C extends AbstractCommandHandler> extends AbstractCommandHandlingClass<C, R, H>","io.spine.server.command.model.CommandHandlerClass"]},{"name":"public final class CommandHandlerMethod extends CommandAcceptingMethod<T, R> implements EventProducingMethod<T, C, E>","description":"io.spine.server.command.model.CommandHandlerMethod","location":"server/io.spine.server.command.model/-command-handler-method/index.html","searchKeys":["CommandHandlerMethod","public final class CommandHandlerMethod extends CommandAcceptingMethod<T, R> implements EventProducingMethod<T, C, E>","io.spine.server.command.model.CommandHandlerMethod"]},{"name":"public final class CommandHandlerSignature extends CommandAcceptingSignature<H>","description":"io.spine.server.command.model.CommandHandlerSignature","location":"server/io.spine.server.command.model/-command-handler-signature/index.html","searchKeys":["CommandHandlerSignature","public final class CommandHandlerSignature extends CommandAcceptingSignature<H>","io.spine.server.command.model.CommandHandlerSignature"]},{"name":"public final class CommandPostingException extends RuntimeException","description":"io.spine.server.commandbus.CommandPostingException","location":"server/io.spine.server.commandbus/-command-posting-exception/index.html","searchKeys":["CommandPostingException","public final class CommandPostingException extends RuntimeException","io.spine.server.commandbus.CommandPostingException"]},{"name":"public final class CommandReactionMethod extends AbstractHandlerMethod<T, M, C, E, R> implements CommandingMethod<T, M, E>","description":"io.spine.server.command.model.CommandReactionMethod","location":"server/io.spine.server.command.model/-command-reaction-method/index.html","searchKeys":["CommandReactionMethod","public final class CommandReactionMethod extends AbstractHandlerMethod<T, M, C, E, R> implements CommandingMethod<T, M, E>","io.spine.server.command.model.CommandReactionMethod"]},{"name":"public final class CommandRouting<I> extends MessageRouting<M, C, R>","description":"io.spine.server.route.CommandRouting","location":"server/io.spine.server.route/-command-routing/index.html","searchKeys":["CommandRouting","public final class CommandRouting<I> extends MessageRouting<M, C, R>","io.spine.server.route.CommandRouting"]},{"name":"public final class CommandService","description":"io.spine.server.CommandService","location":"server/io.spine.server/-command-service/index.html","searchKeys":["CommandService","public final class CommandService","io.spine.server.CommandService"]},{"name":"public final class CommandSubstituteMethod extends CommandAcceptingMethod<T, R> implements CommandingMethod<T, M, E>","description":"io.spine.server.command.model.CommandSubstituteMethod","location":"server/io.spine.server.command.model/-command-substitute-method/index.html","searchKeys":["CommandSubstituteMethod","public final class CommandSubstituteMethod extends CommandAcceptingMethod<T, R> implements CommandingMethod<T, M, E>","io.spine.server.command.model.CommandSubstituteMethod"]},{"name":"public final class CommanderClass<C extends Commander> extends AbstractCommandHandlingClass<C, R, H> implements EventReceiverClass, CommandingClass","description":"io.spine.server.command.model.CommanderClass","location":"server/io.spine.server.command.model/-commander-class/index.html","searchKeys":["CommanderClass","public final class CommanderClass<C extends Commander> extends AbstractCommandHandlingClass<C, R, H> implements EventReceiverClass, CommandingClass","io.spine.server.command.model.CommanderClass"]},{"name":"public final class CompositeEventFilter implements EventFilter","description":"io.spine.server.entity.CompositeEventFilter","location":"server/io.spine.server.entity/-composite-event-filter/index.html","searchKeys":["CompositeEventFilter","public final class CompositeEventFilter implements EventFilter","io.spine.server.entity.CompositeEventFilter"]},{"name":"public final class CompositeQueryParameter","description":"io.spine.server.entity.storage.CompositeQueryParameter","location":"server/io.spine.server.entity.storage/-composite-query-parameter/index.html","searchKeys":["CompositeQueryParameter","public final class CompositeQueryParameter","io.spine.server.entity.storage.CompositeQueryParameter"]},{"name":"public final class ContextSpec","description":"io.spine.server.ContextSpec","location":"server/io.spine.server/-context-spec/index.html","searchKeys":["ContextSpec","public final class ContextSpec","io.spine.server.ContextSpec"]},{"name":"public final class DefaultAggregatePartRepository<I, A extends AggregatePart<I, ? extends Object, ? extends Object, R>, R extends AggregateRoot<I>> extends AggregatePartRepository<I, A, R> implements DefaultRepository","description":"io.spine.server.aggregate.DefaultAggregatePartRepository","location":"server/io.spine.server.aggregate/-default-aggregate-part-repository/index.html","searchKeys":["DefaultAggregatePartRepository","public final class DefaultAggregatePartRepository<I, A extends AggregatePart<I, ? extends Object, ? extends Object, R>, R extends AggregateRoot<I>> extends AggregatePartRepository<I, A, R> implements DefaultRepository","io.spine.server.aggregate.DefaultAggregatePartRepository"]},{"name":"public final class DefaultAggregateRepository<I, A extends Aggregate<I, ? extends Object, ? extends Object>> extends AggregateRepository<I, A> implements DefaultRepository","description":"io.spine.server.aggregate.DefaultAggregateRepository","location":"server/io.spine.server.aggregate/-default-aggregate-repository/index.html","searchKeys":["DefaultAggregateRepository","public final class DefaultAggregateRepository<I, A extends Aggregate<I, ? extends Object, ? extends Object>> extends AggregateRepository<I, A> implements DefaultRepository","io.spine.server.aggregate.DefaultAggregateRepository"]},{"name":"public final class DefaultColumnMapping extends AbstractColumnMapping<R>","description":"io.spine.server.entity.storage.DefaultColumnMapping","location":"server/io.spine.server.entity.storage/-default-column-mapping/index.html","searchKeys":["DefaultColumnMapping","public final class DefaultColumnMapping extends AbstractColumnMapping<R>","io.spine.server.entity.storage.DefaultColumnMapping"]},{"name":"public final class DefaultCommandRoute<I> implements CommandRoute<I, M>","description":"io.spine.server.route.DefaultCommandRoute","location":"server/io.spine.server.route/-default-command-route/index.html","searchKeys":["DefaultCommandRoute","public final class DefaultCommandRoute<I> implements CommandRoute<I, M>","io.spine.server.route.DefaultCommandRoute"]},{"name":"public final class DefaultEntityFactory<E extends Entity> extends AbstractEntityFactory<E>","description":"io.spine.server.entity.DefaultEntityFactory","location":"server/io.spine.server.entity/-default-entity-factory/index.html","searchKeys":["DefaultEntityFactory","public final class DefaultEntityFactory<E extends Entity> extends AbstractEntityFactory<E>","io.spine.server.entity.DefaultEntityFactory"]},{"name":"public final class DefaultEventStore extends DefaultRecordBasedRepository<I, E, S> implements EventStore","description":"io.spine.server.event.store.DefaultEventStore","location":"server/io.spine.server.event.store/-default-event-store/index.html","searchKeys":["DefaultEventStore","public final class DefaultEventStore extends DefaultRecordBasedRepository<I, E, S> implements EventStore","io.spine.server.event.store.DefaultEventStore"]},{"name":"public final class DefaultProcessManagerRepository<I, P extends ProcessManager<I, S, ? extends Object>, S extends EntityState> extends ProcessManagerRepository<I, P, S> implements DefaultRepository","description":"io.spine.server.procman.DefaultProcessManagerRepository","location":"server/io.spine.server.procman/-default-process-manager-repository/index.html","searchKeys":["DefaultProcessManagerRepository","public final class DefaultProcessManagerRepository<I, P extends ProcessManager<I, S, ? extends Object>, S extends EntityState> extends ProcessManagerRepository<I, P, S> implements DefaultRepository","io.spine.server.procman.DefaultProcessManagerRepository"]},{"name":"public final class DelegatingEventDispatcher implements EventDispatcher","description":"io.spine.server.event.DelegatingEventDispatcher","location":"server/io.spine.server.event/-delegating-event-dispatcher/index.html","searchKeys":["DelegatingEventDispatcher","public final class DelegatingEventDispatcher implements EventDispatcher","io.spine.server.event.DelegatingEventDispatcher"]},{"name":"public final class Delivery","description":"io.spine.server.delivery.Delivery","location":"server/io.spine.server.delivery/-delivery/index.html","searchKeys":["Delivery","public final class Delivery","io.spine.server.delivery.Delivery"]},{"name":"public final class DeliveryBuilder","description":"io.spine.server.delivery.DeliveryBuilder","location":"server/io.spine.server.delivery/-delivery-builder/index.html","searchKeys":["DeliveryBuilder","public final class DeliveryBuilder","io.spine.server.delivery.DeliveryBuilder"]},{"name":"public final class DeliveryStats","description":"io.spine.server.delivery.DeliveryStats","location":"server/io.spine.server.delivery/-delivery-stats/index.html","searchKeys":["DeliveryStats","public final class DeliveryStats","io.spine.server.delivery.DeliveryStats"]},{"name":"public final class DispatchCommand<I>","description":"io.spine.server.command.DispatchCommand","location":"server/io.spine.server.command/-dispatch-command/index.html","searchKeys":["DispatchCommand","public final class DispatchCommand<I>","io.spine.server.command.DispatchCommand"]},{"name":"public final class DispatchKey","description":"io.spine.server.model.DispatchKey","location":"server/io.spine.server.model/-dispatch-key/index.html","searchKeys":["DispatchKey","public final class DispatchKey","io.spine.server.model.DispatchKey"]},{"name":"public final class DispatchOutcomeHandler","description":"io.spine.server.dispatch.DispatchOutcomeHandler","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/index.html","searchKeys":["DispatchOutcomeHandler","public final class DispatchOutcomeHandler","io.spine.server.dispatch.DispatchOutcomeHandler"]},{"name":"public final class DuplicateCommandHandlerError extends ModelError","description":"io.spine.server.model.DuplicateCommandHandlerError","location":"server/io.spine.server.model/-duplicate-command-handler-error/index.html","searchKeys":["DuplicateCommandHandlerError","public final class DuplicateCommandHandlerError extends ModelError","io.spine.server.model.DuplicateCommandHandlerError"]},{"name":"public final class DuplicateHandlerCheck","description":"io.spine.server.command.model.DuplicateHandlerCheck","location":"server/io.spine.server.command.model/-duplicate-handler-check/index.html","searchKeys":["DuplicateHandlerCheck","public final class DuplicateHandlerCheck","io.spine.server.command.model.DuplicateHandlerCheck"]},{"name":"public final class DuplicateHandlerMethodError extends ModelError","description":"io.spine.server.model.DuplicateHandlerMethodError","location":"server/io.spine.server.model/-duplicate-handler-method-error/index.html","searchKeys":["DuplicateHandlerMethodError","public final class DuplicateHandlerMethodError extends ModelError","io.spine.server.model.DuplicateHandlerMethodError"]},{"name":"public final class EitherOf2<A extends Message, B extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>","description":"io.spine.server.tuple.EitherOf2","location":"server/io.spine.server.tuple/-either-of2/index.html","searchKeys":["EitherOf2","public final class EitherOf2<A extends Message, B extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>","io.spine.server.tuple.EitherOf2"]},{"name":"public final class EitherOf3<A extends Message, B extends Message, C extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>","description":"io.spine.server.tuple.EitherOf3","location":"server/io.spine.server.tuple/-either-of3/index.html","searchKeys":["EitherOf3","public final class EitherOf3<A extends Message, B extends Message, C extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>","io.spine.server.tuple.EitherOf3"]},{"name":"public final class EitherOf4<A extends Message, B extends Message, C extends Message, D extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>","description":"io.spine.server.tuple.EitherOf4","location":"server/io.spine.server.tuple/-either-of4/index.html","searchKeys":["EitherOf4","public final class EitherOf4<A extends Message, B extends Message, C extends Message, D extends Message> extends Either implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>","io.spine.server.tuple.EitherOf4"]},{"name":"public final class EmptyClass","description":"io.spine.server.type.EmptyClass","location":"server/io.spine.server.type/-empty-class/index.html","searchKeys":["EmptyClass","public final class EmptyClass","io.spine.server.type.EmptyClass"]},{"name":"public final class EmptyEventStore implements EventStore","description":"io.spine.server.event.store.EmptyEventStore","location":"server/io.spine.server.event.store/-empty-event-store/index.html","searchKeys":["EmptyEventStore","public final class EmptyEventStore implements EventStore","io.spine.server.event.store.EmptyEventStore"]},{"name":"public final class EntityLifecycleMonitor<I> implements TransactionListener<I>","description":"io.spine.server.entity.EntityLifecycleMonitor","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/index.html","searchKeys":["EntityLifecycleMonitor","public final class EntityLifecycleMonitor<I> implements TransactionListener<I>","io.spine.server.entity.EntityLifecycleMonitor"]},{"name":"public final class EntityQueries","description":"io.spine.server.entity.storage.EntityQueries","location":"server/io.spine.server.entity.storage/-entity-queries/index.html","searchKeys":["EntityQueries","public final class EntityQueries","io.spine.server.entity.storage.EntityQueries"]},{"name":"public final class EntityQuery<I>","description":"io.spine.server.entity.storage.EntityQuery","location":"server/io.spine.server.entity.storage/-entity-query/index.html","searchKeys":["EntityQuery","public final class EntityQuery<I>","io.spine.server.entity.storage.EntityQuery"]},{"name":"public final class EntityRecordWithColumns implements WithLifecycle","description":"io.spine.server.entity.storage.EntityRecordWithColumns","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/index.html","searchKeys":["EntityRecordWithColumns","public final class EntityRecordWithColumns implements WithLifecycle","io.spine.server.entity.storage.EntityRecordWithColumns"]},{"name":"public final class EntityVisibility implements Serializable","description":"io.spine.server.entity.EntityVisibility","location":"server/io.spine.server.entity/-entity-visibility/index.html","searchKeys":["EntityVisibility","public final class EntityVisibility implements Serializable","io.spine.server.entity.EntityVisibility"]},{"name":"public final class EventBlackList implements EventFilter","description":"io.spine.server.entity.EventBlackList","location":"server/io.spine.server.entity/-event-black-list/index.html","searchKeys":["EventBlackList","public final class EventBlackList implements EventFilter","io.spine.server.entity.EventBlackList"]},{"name":"public final class EventBus extends MulticastBus<M, E, C, D> implements ContextAware","description":"io.spine.server.event.EventBus","location":"server/io.spine.server.event/-event-bus/index.html","searchKeys":["EventBus","public final class EventBus extends MulticastBus<M, E, C, D> implements ContextAware","io.spine.server.event.EventBus"]},{"name":"public final class EventClass","description":"io.spine.server.type.EventClass","location":"server/io.spine.server.type/-event-class/index.html","searchKeys":["EventClass","public final class EventClass","io.spine.server.type.EventClass"]},{"name":"public final class EventDestinations","description":"io.spine.server.delivery.Inbox.EventDestinations","location":"server/io.spine.server.delivery/-inbox/-event-destinations/index.html","searchKeys":["EventDestinations","public final class EventDestinations","io.spine.server.delivery.Inbox.EventDestinations"]},{"name":"public final class EventDispatch<I, E extends TransactionalEntity<I, ? extends Object, ? extends Object>>","description":"io.spine.server.event.EventDispatch","location":"server/io.spine.server.event/-event-dispatch/index.html","searchKeys":["EventDispatch","public final class EventDispatch<I, E extends TransactionalEntity<I, ? extends Object, ? extends Object>>","io.spine.server.event.EventDispatch"]},{"name":"public final class EventDispatchingPhase<I, E extends TransactionalEntity<I, ? extends Object, ? extends Object>> extends Phase<I>","description":"io.spine.server.entity.EventDispatchingPhase","location":"server/io.spine.server.entity/-event-dispatching-phase/index.html","searchKeys":["EventDispatchingPhase","public final class EventDispatchingPhase<I, E extends TransactionalEntity<I, ? extends Object, ? extends Object>> extends Phase<I>","io.spine.server.entity.EventDispatchingPhase"]},{"name":"public final class EventEnricher extends Enricher<M, C>","description":"io.spine.server.event.EventEnricher","location":"server/io.spine.server.event/-event-enricher/index.html","searchKeys":["EventEnricher","public final class EventEnricher extends Enricher<M, C>","io.spine.server.event.EventEnricher"]},{"name":"public final class EventEnvelope extends AbstractMessageEnvelope<I, T, C> implements SignalEnvelope<I, T, C>, EnrichableMessageEnvelope<I, T, M, C, E>","description":"io.spine.server.type.EventEnvelope","location":"server/io.spine.server.type/-event-envelope/index.html","searchKeys":["EventEnvelope","public final class EventEnvelope extends AbstractMessageEnvelope<I, T, C> implements SignalEnvelope<I, T, C>, EnrichableMessageEnvelope<I, T, M, C, E>","io.spine.server.type.EventEnvelope"]},{"name":"public final class EventFieldFilter implements EventFilter","description":"io.spine.server.entity.EventFieldFilter","location":"server/io.spine.server.entity/-event-field-filter/index.html","searchKeys":["EventFieldFilter","public final class EventFieldFilter implements EventFilter","io.spine.server.entity.EventFieldFilter"]},{"name":"public final class EventImportDispatcher<I> implements EventDispatcher","description":"io.spine.server.aggregate.EventImportDispatcher","location":"server/io.spine.server.aggregate/-event-import-dispatcher/index.html","searchKeys":["EventImportDispatcher","public final class EventImportDispatcher<I> implements EventDispatcher","io.spine.server.aggregate.EventImportDispatcher"]},{"name":"public final class EventOrigin","description":"io.spine.server.event.EventOrigin","location":"server/io.spine.server.event/-event-origin/index.html","searchKeys":["EventOrigin","public final class EventOrigin","io.spine.server.event.EventOrigin"]},{"name":"public final class EventReactorClass<S extends EventReactor> extends ModelClass<T> implements ReactingClass","description":"io.spine.server.event.model.EventReactorClass","location":"server/io.spine.server.event.model/-event-reactor-class/index.html","searchKeys":["EventReactorClass","public final class EventReactorClass<S extends EventReactor> extends ModelClass<T> implements ReactingClass","io.spine.server.event.model.EventReactorClass"]},{"name":"public final class EventReactorMethod extends EventHandlerMethod<T, R> implements EventProducingMethod<T, C, E>","description":"io.spine.server.event.model.EventReactorMethod","location":"server/io.spine.server.event.model/-event-reactor-method/index.html","searchKeys":["EventReactorMethod","public final class EventReactorMethod extends EventHandlerMethod<T, R> implements EventProducingMethod<T, C, E>","io.spine.server.event.model.EventReactorMethod"]},{"name":"public final class EventRouting<I> extends MessageRouting<M, C, R> implements EventRoute<I, M>","description":"io.spine.server.route.EventRouting","location":"server/io.spine.server.route/-event-routing/index.html","searchKeys":["EventRouting","public final class EventRouting<I> extends MessageRouting<M, C, R> implements EventRoute<I, M>","io.spine.server.route.EventRouting"]},{"name":"public final class EventSubscriberClass<S extends EventSubscriber> extends ModelClass<T> implements EventReceiverClass, SubscribingClass","description":"io.spine.server.event.model.EventSubscriberClass","location":"server/io.spine.server.event.model/-event-subscriber-class/index.html","searchKeys":["EventSubscriberClass","public final class EventSubscriberClass<S extends EventSubscriber> extends ModelClass<T> implements EventReceiverClass, SubscribingClass","io.spine.server.event.model.EventSubscriberClass"]},{"name":"public final class EventSubscriberMethod extends SubscriberMethod implements RejectionHandler<T, R>","description":"io.spine.server.event.model.EventSubscriberMethod","location":"server/io.spine.server.event.model/-event-subscriber-method/index.html","searchKeys":["EventSubscriberMethod","public final class EventSubscriberMethod extends SubscriberMethod implements RejectionHandler<T, R>","io.spine.server.event.model.EventSubscriberMethod"]},{"name":"public final class EventWhiteList implements EventFilter","description":"io.spine.server.entity.EventWhiteList","location":"server/io.spine.server.entity/-event-white-list/index.html","searchKeys":["EventWhiteList","public final class EventWhiteList implements EventFilter","io.spine.server.entity.EventWhiteList"]},{"name":"public final class ExternalCommandReceiverMethodError extends ModelError","description":"io.spine.server.model.ExternalCommandReceiverMethodError","location":"server/io.spine.server.model/-external-command-receiver-method-error/index.html","searchKeys":["ExternalCommandReceiverMethodError","public final class ExternalCommandReceiverMethodError extends ModelError","io.spine.server.model.ExternalCommandReceiverMethodError"]},{"name":"public final class ExternalMessageClass","description":"io.spine.server.integration.ExternalMessageClass","location":"server/io.spine.server.integration/-external-message-class/index.html","searchKeys":["ExternalMessageClass","public final class ExternalMessageClass","io.spine.server.integration.ExternalMessageClass"]},{"name":"public final class ExternalMessageEnvelope extends AbstractMessageEnvelope<I, T, C>","description":"io.spine.server.integration.ExternalMessageEnvelope","location":"server/io.spine.server.integration/-external-message-envelope/index.html","searchKeys":["ExternalMessageEnvelope","public final class ExternalMessageEnvelope extends AbstractMessageEnvelope<I, T, C>","io.spine.server.integration.ExternalMessageEnvelope"]},{"name":"public final class ExternalMessages","description":"io.spine.server.integration.ExternalMessages","location":"server/io.spine.server.integration/-external-messages/index.html","searchKeys":["ExternalMessages","public final class ExternalMessages","io.spine.server.integration.ExternalMessages"]},{"name":"public final class FieldCheck","description":"io.spine.server.bus.BusBuilder.FieldCheck","location":"server/io.spine.server.bus/-bus-builder/-field-check/index.html","searchKeys":["FieldCheck","public final class FieldCheck","io.spine.server.bus.BusBuilder.FieldCheck"]},{"name":"public final class FieldMasks","description":"io.spine.server.entity.FieldMasks","location":"server/io.spine.server.entity/-field-masks/index.html","searchKeys":["FieldMasks","public final class FieldMasks","io.spine.server.entity.FieldMasks"]},{"name":"public final class GrpcContainer","description":"io.spine.server.GrpcContainer","location":"server/io.spine.server/-grpc-container/index.html","searchKeys":["GrpcContainer","public final class GrpcContainer","io.spine.server.GrpcContainer"]},{"name":"public final class HandlerFieldFilterClashError extends ModelError","description":"io.spine.server.model.HandlerFieldFilterClashError","location":"server/io.spine.server.model/-handler-field-filter-clash-error/index.html","searchKeys":["HandlerFieldFilterClashError","public final class HandlerFieldFilterClashError extends ModelError","io.spine.server.model.HandlerFieldFilterClashError"]},{"name":"public final class HandlerLog","description":"io.spine.server.log.HandlerLog","location":"server/io.spine.server.log/-handler-log/index.html","searchKeys":["HandlerLog","public final class HandlerLog","io.spine.server.log.HandlerLog"]},{"name":"public final class HandlerMap<M extends MessageClass<?>, R extends MessageClass<?>, H extends HandlerMethod<? extends Object, M, ? extends Object, R>> implements Serializable","description":"io.spine.server.model.HandlerMap","location":"server/io.spine.server.model/-handler-map/index.html","searchKeys":["HandlerMap","public final class HandlerMap<M extends MessageClass<?>, R extends MessageClass<?>, H extends HandlerMethod<? extends Object, M, ? extends Object, R>> implements Serializable","io.spine.server.model.HandlerMap"]},{"name":"public final class IdInTenant<I>","description":"io.spine.server.tenant.IdInTenant","location":"server/io.spine.server.tenant/-id-in-tenant/index.html","searchKeys":["IdInTenant","public final class IdInTenant<I>","io.spine.server.tenant.IdInTenant"]},{"name":"public final class Identity","description":"io.spine.server.Identity","location":"server/io.spine.server/-identity/index.html","searchKeys":["Identity","public final class Identity","io.spine.server.Identity"]},{"name":"public final class IllegalOutcomeException extends RuntimeException","description":"io.spine.server.model.IllegalOutcomeException","location":"server/io.spine.server.model/-illegal-outcome-exception/index.html","searchKeys":["IllegalOutcomeException","public final class IllegalOutcomeException extends RuntimeException","io.spine.server.model.IllegalOutcomeException"]},{"name":"public final class ImportBus extends UnicastBus<T, E, C, D>","description":"io.spine.server.aggregate.ImportBus","location":"server/io.spine.server.aggregate/-import-bus/index.html","searchKeys":["ImportBus","public final class ImportBus extends UnicastBus<T, E, C, D>","io.spine.server.aggregate.ImportBus"]},{"name":"public final class InMemoryInboxStorage extends AbstractStorage<I, M, R> implements InboxStorage","description":"io.spine.server.storage.memory.InMemoryInboxStorage","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/index.html","searchKeys":["InMemoryInboxStorage","public final class InMemoryInboxStorage extends AbstractStorage<I, M, R> implements InboxStorage","io.spine.server.storage.memory.InMemoryInboxStorage"]},{"name":"public final class InMemoryProjectionStorage<I> extends ProjectionStorage<I>","description":"io.spine.server.storage.memory.InMemoryProjectionStorage","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/index.html","searchKeys":["InMemoryProjectionStorage","public final class InMemoryProjectionStorage<I> extends ProjectionStorage<I>","io.spine.server.storage.memory.InMemoryProjectionStorage"]},{"name":"public final class InMemoryPublisher extends AbstractChannel implements Publisher","description":"io.spine.server.transport.memory.InMemoryPublisher","location":"server/io.spine.server.transport.memory/-in-memory-publisher/index.html","searchKeys":["InMemoryPublisher","public final class InMemoryPublisher extends AbstractChannel implements Publisher","io.spine.server.transport.memory.InMemoryPublisher"]},{"name":"public final class InMemoryRecordStorage<I> extends RecordStorage<I>","description":"io.spine.server.storage.memory.InMemoryRecordStorage","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/index.html","searchKeys":["InMemoryRecordStorage","public final class InMemoryRecordStorage<I> extends RecordStorage<I>","io.spine.server.storage.memory.InMemoryRecordStorage"]},{"name":"public final class InMemoryRootDirectory implements AggregateRootDirectory","description":"io.spine.server.aggregate.InMemoryRootDirectory","location":"server/io.spine.server.aggregate/-in-memory-root-directory/index.html","searchKeys":["InMemoryRootDirectory","public final class InMemoryRootDirectory implements AggregateRootDirectory","io.spine.server.aggregate.InMemoryRootDirectory"]},{"name":"public final class InMemoryShardedWorkRegistry extends AbstractWorkRegistry","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/index.html","searchKeys":["InMemoryShardedWorkRegistry","public final class InMemoryShardedWorkRegistry extends AbstractWorkRegistry","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry"]},{"name":"public final class InMemoryStorageFactory implements StorageFactory","description":"io.spine.server.storage.memory.InMemoryStorageFactory","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/index.html","searchKeys":["InMemoryStorageFactory","public final class InMemoryStorageFactory implements StorageFactory","io.spine.server.storage.memory.InMemoryStorageFactory"]},{"name":"public final class Inbox<I>","description":"io.spine.server.delivery.Inbox","location":"server/io.spine.server.delivery/-inbox/index.html","searchKeys":["Inbox","public final class Inbox<I>","io.spine.server.delivery.Inbox"]},{"name":"public final class InboxMessageComparator implements Comparator<T>, Serializable","description":"io.spine.server.delivery.InboxMessageComparator","location":"server/io.spine.server.delivery/-inbox-message-comparator/index.html","searchKeys":["InboxMessageComparator","public final class InboxMessageComparator implements Comparator<T>, Serializable","io.spine.server.delivery.InboxMessageComparator"]},{"name":"public final class InboxReadRequest implements ReadRequest<I>","description":"io.spine.server.delivery.InboxReadRequest","location":"server/io.spine.server.delivery/-inbox-read-request/index.html","searchKeys":["InboxReadRequest","public final class InboxReadRequest implements ReadRequest<I>","io.spine.server.delivery.InboxReadRequest"]},{"name":"public final class InsufficientVisibilityError extends ModelError","description":"io.spine.server.event.model.InsufficientVisibilityError","location":"server/io.spine.server.event.model/-insufficient-visibility-error/index.html","searchKeys":["InsufficientVisibilityError","public final class InsufficientVisibilityError extends ModelError","io.spine.server.event.model.InsufficientVisibilityError"]},{"name":"public final class IntegrationBroker implements ContextAware, AutoCloseable","description":"io.spine.server.integration.IntegrationBroker","location":"server/io.spine.server.integration/-integration-broker/index.html","searchKeys":["IntegrationBroker","public final class IntegrationBroker implements ContextAware, AutoCloseable","io.spine.server.integration.IntegrationBroker"]},{"name":"public final class InterfaceBasedColumn extends AbstractColumn implements ColumnDeclaredInProto, ColumnWithCustomGetter","description":"io.spine.server.entity.storage.InterfaceBasedColumn","location":"server/io.spine.server.entity.storage/-interface-based-column/index.html","searchKeys":["InterfaceBasedColumn","public final class InterfaceBasedColumn extends AbstractColumn implements ColumnDeclaredInProto, ColumnWithCustomGetter","io.spine.server.entity.storage.InterfaceBasedColumn"]},{"name":"public final class InternalAccess","description":"io.spine.server.BoundedContext.InternalAccess","location":"server/io.spine.server/-bounded-context/-internal-access/index.html","searchKeys":["InternalAccess","public final class InternalAccess","io.spine.server.BoundedContext.InternalAccess"]},{"name":"public final class InvalidEntityStateException","description":"io.spine.server.entity.InvalidEntityStateException","location":"server/io.spine.server.entity/-invalid-entity-state-exception/index.html","searchKeys":["InvalidEntityStateException","public final class InvalidEntityStateException","io.spine.server.entity.InvalidEntityStateException"]},{"name":"public final class LocalDispatchingObserver implements ShardObserver","description":"io.spine.server.delivery.LocalDispatchingObserver","location":"server/io.spine.server.delivery/-local-dispatching-observer/index.html","searchKeys":["LocalDispatchingObserver","public final class LocalDispatchingObserver implements ShardObserver","io.spine.server.delivery.LocalDispatchingObserver"]},{"name":"public final class MarkPmArchived<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","description":"io.spine.server.procman.migration.MarkPmArchived","location":"server/io.spine.server.procman.migration/-mark-pm-archived/index.html","searchKeys":["MarkPmArchived","public final class MarkPmArchived<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","io.spine.server.procman.migration.MarkPmArchived"]},{"name":"public final class MarkPmDeleted<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","description":"io.spine.server.procman.migration.MarkPmDeleted","location":"server/io.spine.server.procman.migration/-mark-pm-deleted/index.html","searchKeys":["MarkPmDeleted","public final class MarkPmDeleted<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","io.spine.server.procman.migration.MarkPmDeleted"]},{"name":"public final class MarkProjectionArchived<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","description":"io.spine.server.projection.migration.MarkProjectionArchived","location":"server/io.spine.server.projection.migration/-mark-projection-archived/index.html","searchKeys":["MarkProjectionArchived","public final class MarkProjectionArchived<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","io.spine.server.projection.migration.MarkProjectionArchived"]},{"name":"public final class MarkProjectionDeleted<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","description":"io.spine.server.projection.migration.MarkProjectionDeleted","location":"server/io.spine.server.projection.migration/-mark-projection-deleted/index.html","searchKeys":["MarkProjectionDeleted","public final class MarkProjectionDeleted<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","io.spine.server.projection.migration.MarkProjectionDeleted"]},{"name":"public final class MethodAccessChecker","description":"io.spine.server.model.MethodAccessChecker","location":"server/io.spine.server.model/-method-access-checker/index.html","searchKeys":["MethodAccessChecker","public final class MethodAccessChecker","io.spine.server.model.MethodAccessChecker"]},{"name":"public final class MethodParams","description":"io.spine.server.model.MethodParams","location":"server/io.spine.server.model/-method-params/index.html","searchKeys":["MethodParams","public final class MethodParams","io.spine.server.model.MethodParams"]},{"name":"public final class MirrorProjection extends Projection<I, M, B>","description":"io.spine.system.server.MirrorProjection","location":"server/io.spine.system.server/-mirror-projection/index.html","searchKeys":["MirrorProjection","public final class MirrorProjection extends Projection<I, M, B>","io.spine.system.server.MirrorProjection"]},{"name":"public final class MirrorRepository extends ProjectionRepository<I, P, S>","description":"io.spine.system.server.MirrorRepository","location":"server/io.spine.system.server/-mirror-repository/index.html","searchKeys":["MirrorRepository","public final class MirrorRepository extends ProjectionRepository<I, P, S>","io.spine.system.server.MirrorRepository"]},{"name":"public final class Pair<A extends Message, B> extends Tuple implements Element.AValue<T>, Element.BValue<T>","description":"io.spine.server.tuple.Pair","location":"server/io.spine.server.tuple/-pair/index.html","searchKeys":["Pair","public final class Pair<A extends Message, B> extends Tuple implements Element.AValue<T>, Element.BValue<T>","io.spine.server.tuple.Pair"]},{"name":"public final class ProcessManagerClass<P extends ProcessManager> extends CommandHandlingEntityClass<E> implements ReactingClass, CommandingClass","description":"io.spine.server.procman.model.ProcessManagerClass","location":"server/io.spine.server.procman.model/-process-manager-class/index.html","searchKeys":["ProcessManagerClass","public final class ProcessManagerClass<P extends ProcessManager> extends CommandHandlingEntityClass<E> implements ReactingClass, CommandingClass","io.spine.server.procman.model.ProcessManagerClass"]},{"name":"public final class ProjectionClass<P extends Projection> extends EntityClass<E> implements EventReceiverClass, SubscribingClass, StateSubscribingClass","description":"io.spine.server.projection.model.ProjectionClass","location":"server/io.spine.server.projection.model/-projection-class/index.html","searchKeys":["ProjectionClass","public final class ProjectionClass<P extends Projection> extends EntityClass<E> implements EventReceiverClass, SubscribingClass, StateSubscribingClass","io.spine.server.projection.model.ProjectionClass"]},{"name":"public final class Quartet<A extends Message, B, C, D> extends Tuple implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>","description":"io.spine.server.tuple.Quartet","location":"server/io.spine.server.tuple/-quartet/index.html","searchKeys":["Quartet","public final class Quartet<A extends Message, B, C, D> extends Tuple implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>","io.spine.server.tuple.Quartet"]},{"name":"public final class QueryParameters implements Iterable<T>","description":"io.spine.server.entity.storage.QueryParameters","location":"server/io.spine.server.entity.storage/-query-parameters/index.html","searchKeys":["QueryParameters","public final class QueryParameters implements Iterable<T>","io.spine.server.entity.storage.QueryParameters"]},{"name":"public final class QueryService","description":"io.spine.server.QueryService","location":"server/io.spine.server/-query-service/index.html","searchKeys":["QueryService","public final class QueryService","io.spine.server.QueryService"]},{"name":"public final class Quintet<A extends Message, B, C, D, E> extends Tuple implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>, Element.EValue<T>","description":"io.spine.server.tuple.Quintet","location":"server/io.spine.server.tuple/-quintet/index.html","searchKeys":["Quintet","public final class Quintet<A extends Message, B, C, D, E> extends Tuple implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>, Element.DValue<T>, Element.EValue<T>","io.spine.server.tuple.Quintet"]},{"name":"public final class ReactorClassDelegate<T extends EventReceiver> extends EventReceivingClassDelegate<T, P, M> implements ReactingClass","description":"io.spine.server.event.model.ReactorClassDelegate","location":"server/io.spine.server.event.model/-reactor-class-delegate/index.html","searchKeys":["ReactorClassDelegate","public final class ReactorClassDelegate<T extends EventReceiver> extends EventReceivingClassDelegate<T, P, M> implements ReactingClass","io.spine.server.event.model.ReactorClassDelegate"]},{"name":"public final class RecentHistory","description":"io.spine.server.entity.RecentHistory","location":"server/io.spine.server.entity/-recent-history/index.html","searchKeys":["RecentHistory","public final class RecentHistory","io.spine.server.entity.RecentHistory"]},{"name":"public final class RecordReadRequest<I> implements ReadRequest<I>","description":"io.spine.server.storage.RecordReadRequest","location":"server/io.spine.server.storage/-record-read-request/index.html","searchKeys":["RecordReadRequest","public final class RecordReadRequest<I> implements ReadRequest<I>","io.spine.server.storage.RecordReadRequest"]},{"name":"public final class RejectionEnvelope extends AbstractMessageEnvelope<I, T, C> implements SignalEnvelope<I, T, C>","description":"io.spine.server.event.RejectionEnvelope","location":"server/io.spine.server.event/-rejection-envelope/index.html","searchKeys":["RejectionEnvelope","public final class RejectionEnvelope extends AbstractMessageEnvelope<I, T, C> implements SignalEnvelope<I, T, C>","io.spine.server.event.RejectionEnvelope"]},{"name":"public final class Rejections","description":"io.spine.server.command.Rejections","location":"server/io.spine.server.command/-rejections/index.html","searchKeys":["Rejections","public final class Rejections","io.spine.server.command.Rejections"]},{"name":"public final class RemovePmFromStorage<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","description":"io.spine.server.procman.migration.RemovePmFromStorage","location":"server/io.spine.server.procman.migration/-remove-pm-from-storage/index.html","searchKeys":["RemovePmFromStorage","public final class RemovePmFromStorage<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","io.spine.server.procman.migration.RemovePmFromStorage"]},{"name":"public final class RemoveProjectionFromStorage<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","description":"io.spine.server.projection.migration.RemoveProjectionFromStorage","location":"server/io.spine.server.projection.migration/-remove-projection-from-storage/index.html","searchKeys":["RemoveProjectionFromStorage","public final class RemoveProjectionFromStorage<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","io.spine.server.projection.migration.RemoveProjectionFromStorage"]},{"name":"public final class RepositoryCache<I, E extends Entity<I, ? extends Object>>","description":"io.spine.server.entity.RepositoryCache","location":"server/io.spine.server.entity/-repository-cache/index.html","searchKeys":["RepositoryCache","public final class RepositoryCache<I, E extends Entity<I, ? extends Object>>","io.spine.server.entity.RepositoryCache"]},{"name":"public final class ReturnTypes","description":"io.spine.server.model.ReturnTypes","location":"server/io.spine.server.model/-return-types/index.html","searchKeys":["ReturnTypes","public final class ReturnTypes","io.spine.server.model.ReturnTypes"]},{"name":"public final class Security extends SecurityManager","description":"io.spine.server.security.Security","location":"server/io.spine.server.security/-security/index.html","searchKeys":["Security","public final class Security extends SecurityManager","io.spine.server.security.Security"]},{"name":"public final class Server","description":"io.spine.server.Server","location":"server/io.spine.server/-server/index.html","searchKeys":["Server","public final class Server","io.spine.server.Server"]},{"name":"public final class ServerEnvironment implements AutoCloseable","description":"io.spine.server.ServerEnvironment","location":"server/io.spine.server/-server-environment/index.html","searchKeys":["ServerEnvironment","public final class ServerEnvironment implements AutoCloseable","io.spine.server.ServerEnvironment"]},{"name":"public final class SignalOriginMismatchError extends ModelError","description":"io.spine.server.model.SignalOriginMismatchError","location":"server/io.spine.server.model/-signal-origin-mismatch-error/index.html","searchKeys":["SignalOriginMismatchError","public final class SignalOriginMismatchError extends ModelError","io.spine.server.model.SignalOriginMismatchError"]},{"name":"public final class SignatureMismatch","description":"io.spine.server.model.SignatureMismatch","location":"server/io.spine.server.model/-signature-mismatch/index.html","searchKeys":["SignatureMismatch","public final class SignatureMismatch","io.spine.server.model.SignatureMismatch"]},{"name":"public final class StateClass","description":"io.spine.server.entity.model.StateClass","location":"server/io.spine.server.entity.model/-state-class/index.html","searchKeys":["StateClass","public final class StateClass","io.spine.server.entity.model.StateClass"]},{"name":"public final class StateSubscriberMethod extends SubscriberMethod","description":"io.spine.server.event.model.StateSubscriberMethod","location":"server/io.spine.server.event.model/-state-subscriber-method/index.html","searchKeys":["StateSubscriberMethod","public final class StateSubscriberMethod extends SubscriberMethod","io.spine.server.event.model.StateSubscriberMethod"]},{"name":"public final class StateUpdateRouting<I> extends MessageRouting<M, C, R>","description":"io.spine.server.route.StateUpdateRouting","location":"server/io.spine.server.route/-state-update-routing/index.html","searchKeys":["StateUpdateRouting","public final class StateUpdateRouting<I> extends MessageRouting<M, C, R>","io.spine.server.route.StateUpdateRouting"]},{"name":"public final class StorageSpec<I> implements Serializable","description":"io.spine.server.storage.memory.StorageSpec","location":"server/io.spine.server.storage.memory/-storage-spec/index.html","searchKeys":["StorageSpec","public final class StorageSpec<I> implements Serializable","io.spine.server.storage.memory.StorageSpec"]},{"name":"public final class SubscriptionService","description":"io.spine.server.SubscriptionService","location":"server/io.spine.server/-subscription-service/index.html","searchKeys":["SubscriptionService","public final class SubscriptionService","io.spine.server.SubscriptionService"]},{"name":"public final class SystemAwareStorageFactory implements StorageFactory","description":"io.spine.server.storage.system.SystemAwareStorageFactory","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/index.html","searchKeys":["SystemAwareStorageFactory","public final class SystemAwareStorageFactory implements StorageFactory","io.spine.server.storage.system.SystemAwareStorageFactory"]},{"name":"public final class SystemContext extends BoundedContext","description":"io.spine.system.server.SystemContext","location":"server/io.spine.system.server/-system-context/index.html","searchKeys":["SystemContext","public final class SystemContext extends BoundedContext","io.spine.system.server.SystemContext"]},{"name":"public final class SystemSettings implements SystemFeatures","description":"io.spine.system.server.SystemSettings","location":"server/io.spine.system.server/-system-settings/index.html","searchKeys":["SystemSettings","public final class SystemSettings implements SystemFeatures","io.spine.system.server.SystemSettings"]},{"name":"public final class TenantAwareRunner","description":"io.spine.server.tenant.TenantAwareRunner","location":"server/io.spine.server.tenant/-tenant-aware-runner/index.html","searchKeys":["TenantAwareRunner","public final class TenantAwareRunner","io.spine.server.tenant.TenantAwareRunner"]},{"name":"public final class TenantAwareTestSupport","description":"io.spine.server.tenant.TenantAwareTestSupport","location":"server/io.spine.server.tenant/-tenant-aware-test-support/index.html","searchKeys":["TenantAwareTestSupport","public final class TenantAwareTestSupport","io.spine.server.tenant.TenantAwareTestSupport"]},{"name":"public final class ThirdPartyContext implements Closeable","description":"io.spine.server.integration.ThirdPartyContext","location":"server/io.spine.server.integration/-third-party-context/index.html","searchKeys":["ThirdPartyContext","public final class ThirdPartyContext implements Closeable","io.spine.server.integration.ThirdPartyContext"]},{"name":"public final class TraceEventObserver extends AbstractEventSubscriber","description":"io.spine.system.server.TraceEventObserver","location":"server/io.spine.system.server/-trace-event-observer/index.html","searchKeys":["TraceEventObserver","public final class TraceEventObserver extends AbstractEventSubscriber","io.spine.system.server.TraceEventObserver"]},{"name":"public final class Triplet<A extends Message, B, C> extends Tuple implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>","description":"io.spine.server.tuple.Triplet","location":"server/io.spine.server.tuple/-triplet/index.html","searchKeys":["Triplet","public final class Triplet<A extends Message, B, C> extends Tuple implements Element.AValue<T>, Element.BValue<T>, Element.CValue<T>","io.spine.server.tuple.Triplet"]},{"name":"public final class UniformAcrossAllShards extends DeliveryStrategy implements Serializable","description":"io.spine.server.delivery.UniformAcrossAllShards","location":"server/io.spine.server.delivery/-uniform-across-all-shards/index.html","searchKeys":["UniformAcrossAllShards","public final class UniformAcrossAllShards extends DeliveryStrategy implements Serializable","io.spine.server.delivery.UniformAcrossAllShards"]},{"name":"public final class UnknownEntityTypeException extends RuntimeException","description":"io.spine.server.model.UnknownEntityTypeException","location":"server/io.spine.server.model/-unknown-entity-type-exception/index.html","searchKeys":["UnknownEntityTypeException","public final class UnknownEntityTypeException extends RuntimeException","io.spine.server.model.UnknownEntityTypeException"]},{"name":"public final class UnsupportedImportEventException extends RuntimeException implements MessageUnhandled","description":"io.spine.server.aggregate.UnsupportedImportEventException","location":"server/io.spine.server.aggregate/-unsupported-import-event-exception/index.html","searchKeys":["UnsupportedImportEventException","public final class UnsupportedImportEventException extends RuntimeException implements MessageUnhandled","io.spine.server.aggregate.UnsupportedImportEventException"]},{"name":"public final class UpdatePmColumns<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","description":"io.spine.server.procman.migration.UpdatePmColumns","location":"server/io.spine.server.procman.migration/-update-pm-columns/index.html","searchKeys":["UpdatePmColumns","public final class UpdatePmColumns<I, P extends ProcessManager<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProcessManagerMigration<I, P, S, B>","io.spine.server.procman.migration.UpdatePmColumns"]},{"name":"public final class UpdateProjectionColumns<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","description":"io.spine.server.projection.migration.UpdateProjectionColumns","location":"server/io.spine.server.projection.migration/-update-projection-columns/index.html","searchKeys":["UpdateProjectionColumns","public final class UpdateProjectionColumns<I, P extends Projection<I, S, B>, S extends EntityState, B extends ValidatingBuilder<S>> extends ProjectionMigration<I, P, S, B>","io.spine.server.projection.migration.UpdateProjectionColumns"]},{"name":"public interface AggregateRootDirectory","description":"io.spine.server.aggregate.AggregateRootDirectory","location":"server/io.spine.server.aggregate/-aggregate-root-directory/index.html","searchKeys":["AggregateRootDirectory","public interface AggregateRootDirectory","io.spine.server.aggregate.AggregateRootDirectory"]},{"name":"public interface Attribute<V>","description":"io.spine.server.model.Attribute","location":"server/io.spine.server.model/-attribute/index.html","searchKeys":["Attribute","public interface Attribute<V>","io.spine.server.model.Attribute"]},{"name":"public interface BatchDeliveryListener<I>","description":"io.spine.server.delivery.BatchDeliveryListener","location":"server/io.spine.server.delivery/-batch-delivery-listener/index.html","searchKeys":["BatchDeliveryListener","public interface BatchDeliveryListener<I>","io.spine.server.delivery.BatchDeliveryListener"]},{"name":"public interface BusFilter<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements AutoCloseable","description":"io.spine.server.bus.BusFilter","location":"server/io.spine.server.bus/-bus-filter/index.html","searchKeys":["BusFilter","public interface BusFilter<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements AutoCloseable","io.spine.server.bus.BusFilter"]},{"name":"public interface CannotDispatchDuplicate implements DiagnosticEvent","description":"io.spine.system.server.CannotDispatchDuplicate","location":"server/io.spine.system.server/-cannot-dispatch-duplicate/index.html","searchKeys":["CannotDispatchDuplicate","public interface CannotDispatchDuplicate implements DiagnosticEvent","io.spine.system.server.CannotDispatchDuplicate"]},{"name":"public interface CatchUpSignal","description":"io.spine.server.delivery.CatchUpSignal","location":"server/io.spine.server.delivery/-catch-up-signal/index.html","searchKeys":["CatchUpSignal","public interface CatchUpSignal","io.spine.server.delivery.CatchUpSignal"]},{"name":"public interface CatchUpStorage implements Storage<I, M, R>","description":"io.spine.server.delivery.CatchUpStorage","location":"server/io.spine.server.delivery/-catch-up-storage/index.html","searchKeys":["CatchUpStorage","public interface CatchUpStorage implements Storage<I, M, R>","io.spine.server.delivery.CatchUpStorage"]},{"name":"public interface Closeable implements AutoCloseable","description":"io.spine.server.Closeable","location":"server/io.spine.server/-closeable/index.html","searchKeys":["Closeable","public interface Closeable implements AutoCloseable","io.spine.server.Closeable"]},{"name":"public interface Column","description":"io.spine.server.entity.storage.Column","location":"server/io.spine.server.entity.storage/-column/index.html","searchKeys":["Column","public interface Column","io.spine.server.entity.storage.Column"]},{"name":"public interface ColumnMapping<R>","description":"io.spine.server.entity.storage.ColumnMapping","location":"server/io.spine.server.entity.storage/-column-mapping/index.html","searchKeys":["ColumnMapping","public interface ColumnMapping<R>","io.spine.server.entity.storage.ColumnMapping"]},{"name":"public interface ColumnTypeMapping<T, R> implements Function<T, R>","description":"io.spine.server.entity.storage.ColumnTypeMapping","location":"server/io.spine.server.entity.storage/-column-type-mapping/index.html","searchKeys":["ColumnTypeMapping","public interface ColumnTypeMapping<T, R> implements Function<T, R>","io.spine.server.entity.storage.ColumnTypeMapping"]},{"name":"public interface CommandDispatcher implements UnicastDispatcher<C, E>","description":"io.spine.server.commandbus.CommandDispatcher","location":"server/io.spine.server.commandbus/-command-dispatcher/index.html","searchKeys":["CommandDispatcher","public interface CommandDispatcher implements UnicastDispatcher<C, E>","io.spine.server.commandbus.CommandDispatcher"]},{"name":"public interface CommandDispatcherDelegate","description":"io.spine.server.commandbus.CommandDispatcherDelegate","location":"server/io.spine.server.commandbus/-command-dispatcher-delegate/index.html","searchKeys":["CommandDispatcherDelegate","public interface CommandDispatcherDelegate","io.spine.server.commandbus.CommandDispatcherDelegate"]},{"name":"public interface CommandEndpoint<I> implements MessageEndpoint<I, M>","description":"io.spine.server.delivery.CommandEndpoint","location":"server/io.spine.server.delivery/-command-endpoint/index.html","searchKeys":["CommandEndpoint","public interface CommandEndpoint<I> implements MessageEndpoint<I, M>","io.spine.server.delivery.CommandEndpoint"]},{"name":"public interface CommandFlowWatcher","description":"io.spine.server.commandbus.CommandFlowWatcher","location":"server/io.spine.server.commandbus/-command-flow-watcher/index.html","searchKeys":["CommandFlowWatcher","public interface CommandFlowWatcher","io.spine.server.commandbus.CommandFlowWatcher"]},{"name":"public interface CommandHandler implements CommandReceiver","description":"io.spine.server.command.CommandHandler","location":"server/io.spine.server.command/-command-handler/index.html","searchKeys":["CommandHandler","public interface CommandHandler implements CommandReceiver","io.spine.server.command.CommandHandler"]},{"name":"public interface CommandHandlingClass<R extends MessageClass<?>, H extends CommandAcceptingMethod<? extends Object, R>>","description":"io.spine.server.command.model.CommandHandlingClass","location":"server/io.spine.server.command.model/-command-handling-class/index.html","searchKeys":["CommandHandlingClass","public interface CommandHandlingClass<R extends MessageClass<?>, H extends CommandAcceptingMethod<? extends Object, R>>","io.spine.server.command.model.CommandHandlingClass"]},{"name":"public interface CommandProducingMethod<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements HandlerMethod<T, C, E, R>","description":"io.spine.server.model.CommandProducingMethod","location":"server/io.spine.server.model/-command-producing-method/index.html","searchKeys":["CommandProducingMethod","public interface CommandProducingMethod<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements HandlerMethod<T, C, E, R>","io.spine.server.model.CommandProducingMethod"]},{"name":"public interface CommandReceiver implements EventProducer","description":"io.spine.server.command.CommandReceiver","location":"server/io.spine.server.command/-command-receiver/index.html","searchKeys":["CommandReceiver","public interface CommandReceiver implements EventProducer","io.spine.server.command.CommandReceiver"]},{"name":"public interface CommandRoute<I, M extends CommandMessage> implements Unicast<I, M, C>","description":"io.spine.server.route.CommandRoute","location":"server/io.spine.server.route/-command-route/index.html","searchKeys":["CommandRoute","public interface CommandRoute<I, M extends CommandMessage> implements Unicast<I, M, C>","io.spine.server.route.CommandRoute"]},{"name":"public interface Commander implements CommandReceiver, EventReceiver","description":"io.spine.server.command.Commander","location":"server/io.spine.server.command/-commander/index.html","searchKeys":["Commander","public interface Commander implements CommandReceiver, EventReceiver","io.spine.server.command.Commander"]},{"name":"public interface CommandingClass","description":"io.spine.server.command.model.CommandingClass","location":"server/io.spine.server.command.model/-commanding-class/index.html","searchKeys":["CommandingClass","public interface CommandingClass","io.spine.server.command.model.CommandingClass"]},{"name":"public interface CommandingMethod<T, M extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements CommandProducingMethod<T, C, E>","description":"io.spine.server.command.model.CommandingMethod","location":"server/io.spine.server.command.model/-commanding-method/index.html","searchKeys":["CommandingMethod","public interface CommandingMethod<T, M extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements CommandProducingMethod<T, C, E>","io.spine.server.command.model.CommandingMethod"]},{"name":"public interface ContextAware","description":"io.spine.server.ContextAware","location":"server/io.spine.server/-context-aware/index.html","searchKeys":["ContextAware","public interface ContextAware","io.spine.server.ContextAware"]},{"name":"public interface DeadMessageHandler<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","description":"io.spine.server.bus.DeadMessageHandler","location":"server/io.spine.server.bus/-dead-message-handler/index.html","searchKeys":["DeadMessageHandler","public interface DeadMessageHandler<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","io.spine.server.bus.DeadMessageHandler"]},{"name":"public interface DefaultRepository","description":"io.spine.server.DefaultRepository","location":"server/io.spine.server/-default-repository/index.html","searchKeys":["DefaultRepository","public interface DefaultRepository","io.spine.server.DefaultRepository"]},{"name":"public interface DiagnosticEvent","description":"io.spine.system.server.DiagnosticEvent","location":"server/io.spine.system.server/-diagnostic-event/index.html","searchKeys":["DiagnosticEvent","public interface DiagnosticEvent","io.spine.system.server.DiagnosticEvent"]},{"name":"public interface DispatchCatchingUp<I>","description":"io.spine.server.delivery.CatchUpProcess.DispatchCatchingUp","location":"server/io.spine.server.delivery/-catch-up-process/-dispatch-catching-up/index.html","searchKeys":["DispatchCatchingUp","public interface DispatchCatchingUp<I>","io.spine.server.delivery.CatchUpProcess.DispatchCatchingUp"]},{"name":"public interface EnrichableMessageEnvelope<I extends Message, T, M extends Message, C extends EnrichableMessageContext, E extends EnrichableMessageEnvelope<I, T, M, C, E>> implements MessageEnvelope<I, T, C>","description":"io.spine.server.type.EnrichableMessageEnvelope","location":"server/io.spine.server.type/-enrichable-message-envelope/index.html","searchKeys":["EnrichableMessageEnvelope","public interface EnrichableMessageEnvelope<I extends Message, T, M extends Message, C extends EnrichableMessageContext, E extends EnrichableMessageEnvelope<I, T, M, C, E>> implements MessageEnvelope<I, T, C>","io.spine.server.type.EnrichableMessageEnvelope"]},{"name":"public interface EnrichmentFn<M extends Message, C extends EnrichableMessageContext, E extends Message> implements BiFunction<T, U, R>","description":"io.spine.server.enrich.EnrichmentFn","location":"server/io.spine.server.enrich/-enrichment-fn/index.html","searchKeys":["EnrichmentFn","public interface EnrichmentFn<M extends Message, C extends EnrichableMessageContext, E extends Message> implements BiFunction<T, U, R>","io.spine.server.enrich.EnrichmentFn"]},{"name":"public interface EnrichmentService<M extends Message, C extends EnrichableMessageContext>","description":"io.spine.server.enrich.EnrichmentService","location":"server/io.spine.server.enrich/-enrichment-service/index.html","searchKeys":["EnrichmentService","public interface EnrichmentService<M extends Message, C extends EnrichableMessageContext>","io.spine.server.enrich.EnrichmentService"]},{"name":"public interface Entity<I, S extends EntityState> implements WithLifecycle","description":"io.spine.server.entity.Entity","location":"server/io.spine.server.entity/-entity/index.html","searchKeys":["Entity","public interface Entity<I, S extends EntityState> implements WithLifecycle","io.spine.server.entity.Entity"]},{"name":"public interface EntityFactory<E extends Entity> implements Serializable","description":"io.spine.server.entity.EntityFactory","location":"server/io.spine.server.entity/-entity-factory/index.html","searchKeys":["EntityFactory","public interface EntityFactory<E extends Entity> implements Serializable","io.spine.server.entity.EntityFactory"]},{"name":"public interface EntityLifecycleEvent","description":"io.spine.system.server.event.EntityLifecycleEvent","location":"server/io.spine.system.server.event/-entity-lifecycle-event/index.html","searchKeys":["EntityLifecycleEvent","public interface EntityLifecycleEvent","io.spine.system.server.event.EntityLifecycleEvent"]},{"name":"public interface EnvelopeValidator<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","description":"io.spine.server.bus.EnvelopeValidator","location":"server/io.spine.server.bus/-envelope-validator/index.html","searchKeys":["EnvelopeValidator","public interface EnvelopeValidator<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","io.spine.server.bus.EnvelopeValidator"]},{"name":"public interface EventDispatcher implements MulticastDispatcher<C, E>","description":"io.spine.server.event.EventDispatcher","location":"server/io.spine.server.event/-event-dispatcher/index.html","searchKeys":["EventDispatcher","public interface EventDispatcher implements MulticastDispatcher<C, E>","io.spine.server.event.EventDispatcher"]},{"name":"public interface EventDispatcherDelegate","description":"io.spine.server.event.EventDispatcherDelegate","location":"server/io.spine.server.event/-event-dispatcher-delegate/index.html","searchKeys":["EventDispatcherDelegate","public interface EventDispatcherDelegate","io.spine.server.event.EventDispatcherDelegate"]},{"name":"public interface EventEndpoint<I> implements MessageEndpoint<I, M>","description":"io.spine.server.delivery.EventEndpoint","location":"server/io.spine.server.delivery/-event-endpoint/index.html","searchKeys":["EventEndpoint","public interface EventEndpoint<I> implements MessageEndpoint<I, M>","io.spine.server.delivery.EventEndpoint"]},{"name":"public interface EventEnrichmentFn<M extends EventMessage, E extends Message> implements EnrichmentFn<M, C, E>","description":"io.spine.server.enrich.EventEnrichmentFn","location":"server/io.spine.server.enrich/-event-enrichment-fn/index.html","searchKeys":["EventEnrichmentFn","public interface EventEnrichmentFn<M extends EventMessage, E extends Message> implements EnrichmentFn<M, C, E>","io.spine.server.enrich.EventEnrichmentFn"]},{"name":"public interface EventFilter","description":"io.spine.server.entity.EventFilter","location":"server/io.spine.server.entity/-event-filter/index.html","searchKeys":["EventFilter","public interface EventFilter","io.spine.server.entity.EventFilter"]},{"name":"public interface EventPlayer","description":"io.spine.server.entity.EventPlayer","location":"server/io.spine.server.entity/-event-player/index.html","searchKeys":["EventPlayer","public interface EventPlayer","io.spine.server.entity.EventPlayer"]},{"name":"public interface EventProducer","description":"io.spine.server.EventProducer","location":"server/io.spine.server/-event-producer/index.html","searchKeys":["EventProducer","public interface EventProducer","io.spine.server.EventProducer"]},{"name":"public interface EventProducingMethod<T extends EventProducer, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements HandlerMethod<T, C, E, R>","description":"io.spine.server.model.EventProducingMethod","location":"server/io.spine.server.model/-event-producing-method/index.html","searchKeys":["EventProducingMethod","public interface EventProducingMethod<T extends EventProducer, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements HandlerMethod<T, C, E, R>","io.spine.server.model.EventProducingMethod"]},{"name":"public interface EventProducingRepository","description":"io.spine.server.entity.EventProducingRepository","location":"server/io.spine.server.entity/-event-producing-repository/index.html","searchKeys":["EventProducingRepository","public interface EventProducingRepository","io.spine.server.entity.EventProducingRepository"]},{"name":"public interface EventReactor implements EventReceiver, EventProducer","description":"io.spine.server.event.EventReactor","location":"server/io.spine.server.event/-event-reactor/index.html","searchKeys":["EventReactor","public interface EventReactor implements EventReceiver, EventProducer","io.spine.server.event.EventReactor"]},{"name":"public interface EventReceiver","description":"io.spine.server.event.EventReceiver","location":"server/io.spine.server.event/-event-receiver/index.html","searchKeys":["EventReceiver","public interface EventReceiver","io.spine.server.event.EventReceiver"]},{"name":"public interface EventReceiverClass","description":"io.spine.server.event.model.EventReceiverClass","location":"server/io.spine.server.event.model/-event-receiver-class/index.html","searchKeys":["EventReceiverClass","public interface EventReceiverClass","io.spine.server.event.model.EventReceiverClass"]},{"name":"public interface EventRoute<I, M extends EventMessage> implements Multicast<I, M, C>","description":"io.spine.server.route.EventRoute","location":"server/io.spine.server.route/-event-route/index.html","searchKeys":["EventRoute","public interface EventRoute<I, M extends EventMessage> implements Multicast<I, M, C>","io.spine.server.route.EventRoute"]},{"name":"public interface EventStore implements ContextAware, Closeable","description":"io.spine.server.event.EventStore","location":"server/io.spine.server.event/-event-store/index.html","searchKeys":["EventStore","public interface EventStore implements ContextAware, Closeable","io.spine.server.event.EventStore"]},{"name":"public interface EventSubscriber implements EventReceiver","description":"io.spine.server.event.EventSubscriber","location":"server/io.spine.server.event/-event-subscriber/index.html","searchKeys":["EventSubscriber","public interface EventSubscriber implements EventReceiver","io.spine.server.event.EventSubscriber"]},{"name":"public interface Fn<R> implements Function<T, R>","description":"io.spine.server.ServerEnvironment.Fn","location":"server/io.spine.server/-server-environment/-fn/index.html","searchKeys":["Fn","public interface Fn<R> implements Function<T, R>","io.spine.server.ServerEnvironment.Fn"]},{"name":"public interface HandlerLifecycle","description":"io.spine.server.log.HandlerLifecycle","location":"server/io.spine.server.log/-handler-lifecycle/index.html","searchKeys":["HandlerLifecycle","public interface HandlerLifecycle","io.spine.server.log.HandlerLifecycle"]},{"name":"public interface HandlerMethod<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>, R extends MessageClass<?>>","description":"io.spine.server.model.HandlerMethod","location":"server/io.spine.server.model/-handler-method/index.html","searchKeys":["HandlerMethod","public interface HandlerMethod<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>, R extends MessageClass<?>>","io.spine.server.model.HandlerMethod"]},{"name":"public interface HasLifecycleColumns<I, S extends EntityState> implements Entity<I, S>","description":"io.spine.server.entity.HasLifecycleColumns","location":"server/io.spine.server.entity/-has-lifecycle-columns/index.html","searchKeys":["HasLifecycleColumns","public interface HasLifecycleColumns<I, S extends EntityState> implements Entity<I, S>","io.spine.server.entity.HasLifecycleColumns"]},{"name":"public interface HasVersionColumn<I, S extends EntityState> implements Entity<I, S>","description":"io.spine.server.entity.HasVersionColumn","location":"server/io.spine.server.entity/-has-version-column/index.html","searchKeys":["HasVersionColumn","public interface HasVersionColumn<I, S extends EntityState> implements Entity<I, S>","io.spine.server.entity.HasVersionColumn"]},{"name":"public interface InboxMessageMixin implements ShardedRecord","description":"io.spine.server.delivery.InboxMessageMixin","location":"server/io.spine.server.delivery/-inbox-message-mixin/index.html","searchKeys":["InboxMessageMixin","public interface InboxMessageMixin implements ShardedRecord","io.spine.server.delivery.InboxMessageMixin"]},{"name":"public interface InboxStorage implements Storage<I, M, R>","description":"io.spine.server.delivery.InboxStorage","location":"server/io.spine.server.delivery/-inbox-storage/index.html","searchKeys":["InboxStorage","public interface InboxStorage implements Storage<I, M, R>","io.spine.server.delivery.InboxStorage"]},{"name":"public interface LazyEndpoint<I, M extends SignalEnvelope<? extends Object, ? extends Object, ? extends Object>> implements Function<T, R>","description":"io.spine.server.delivery.LazyEndpoint","location":"server/io.spine.server.delivery/-lazy-endpoint/index.html","searchKeys":["LazyEndpoint","public interface LazyEndpoint<I, M extends SignalEnvelope<? extends Object, ? extends Object, ? extends Object>> implements Function<T, R>","io.spine.server.delivery.LazyEndpoint"]},{"name":"public interface Listener<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements Consumer<T>","description":"io.spine.server.bus.Listener","location":"server/io.spine.server.bus/-listener/index.html","searchKeys":["Listener","public interface Listener<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements Consumer<T>","io.spine.server.bus.Listener"]},{"name":"public interface Load<I, E extends Entity<I, ? extends Object>> implements Function<T, R>","description":"io.spine.server.entity.RepositoryCache.Load","location":"server/io.spine.server.entity/-repository-cache/-load/index.html","searchKeys":["Load","public interface Load<I, E extends Entity<I, ? extends Object>> implements Function<T, R>","io.spine.server.entity.RepositoryCache.Load"]},{"name":"public interface LoggingEntity","description":"io.spine.server.log.LoggingEntity","location":"server/io.spine.server.log/-logging-entity/index.html","searchKeys":["LoggingEntity","public interface LoggingEntity","io.spine.server.log.LoggingEntity"]},{"name":"public interface MessageChannel implements AutoCloseable","description":"io.spine.server.transport.MessageChannel","location":"server/io.spine.server.transport/-message-channel/index.html","searchKeys":["MessageChannel","public interface MessageChannel implements AutoCloseable","io.spine.server.transport.MessageChannel"]},{"name":"public interface MessageDispatcher<C extends MessageClass, E extends MessageEnvelope>","description":"io.spine.server.bus.MessageDispatcher","location":"server/io.spine.server.bus/-message-dispatcher/index.html","searchKeys":["MessageDispatcher","public interface MessageDispatcher<C extends MessageClass, E extends MessageEnvelope>","io.spine.server.bus.MessageDispatcher"]},{"name":"public interface MessageEndpoint<I, M extends SignalEnvelope<? extends Object, ? extends Object, ? extends Object>>","description":"io.spine.server.delivery.MessageEndpoint","location":"server/io.spine.server.delivery/-message-endpoint/index.html","searchKeys":["MessageEndpoint","public interface MessageEndpoint<I, M extends SignalEnvelope<? extends Object, ? extends Object, ? extends Object>>","io.spine.server.delivery.MessageEndpoint"]},{"name":"public interface MessageEnvelope<I extends Message, T, C extends Message>","description":"io.spine.server.type.MessageEnvelope","location":"server/io.spine.server.type/-message-envelope/index.html","searchKeys":["MessageEnvelope","public interface MessageEnvelope<I extends Message, T, C extends Message>","io.spine.server.type.MessageEnvelope"]},{"name":"public interface MessageError","description":"io.spine.server.MessageError","location":"server/io.spine.server/-message-error/index.html","searchKeys":["MessageError","public interface MessageError","io.spine.server.MessageError"]},{"name":"public interface MessageInvalid implements MessageError","description":"io.spine.server.MessageInvalid","location":"server/io.spine.server/-message-invalid/index.html","searchKeys":["MessageInvalid","public interface MessageInvalid implements MessageError","io.spine.server.MessageInvalid"]},{"name":"public interface MessageUnhandled implements MessageError","description":"io.spine.server.bus.MessageUnhandled","location":"server/io.spine.server.bus/-message-unhandled/index.html","searchKeys":["MessageUnhandled","public interface MessageUnhandled implements MessageError","io.spine.server.bus.MessageUnhandled"]},{"name":"public interface Multicast<I, M extends Message, C extends Message> implements Route<M, C, R>","description":"io.spine.server.route.Multicast","location":"server/io.spine.server.route/-multicast/index.html","searchKeys":["Multicast","public interface Multicast<I, M extends Message, C extends Message> implements Route<M, C, R>","io.spine.server.route.Multicast"]},{"name":"public interface MulticastDispatchListener","description":"io.spine.server.bus.MulticastDispatchListener","location":"server/io.spine.server.bus/-multicast-dispatch-listener/index.html","searchKeys":["MulticastDispatchListener","public interface MulticastDispatchListener","io.spine.server.bus.MulticastDispatchListener"]},{"name":"public interface MulticastDispatcher<C extends MessageClass, E extends MessageEnvelope> implements MessageDispatcher<C, E>","description":"io.spine.server.bus.MulticastDispatcher","location":"server/io.spine.server.bus/-multicast-dispatcher/index.html","searchKeys":["MulticastDispatcher","public interface MulticastDispatcher<C extends MessageClass, E extends MessageEnvelope> implements MessageDispatcher<C, E>","io.spine.server.bus.MulticastDispatcher"]},{"name":"public interface OutcomeHandler<T>","description":"io.spine.server.dispatch.OutcomeHandler","location":"server/io.spine.server.dispatch/-outcome-handler/index.html","searchKeys":["OutcomeHandler","public interface OutcomeHandler<T>","io.spine.server.dispatch.OutcomeHandler"]},{"name":"public interface Page<M extends ShardedRecord>","description":"io.spine.server.delivery.Page","location":"server/io.spine.server.delivery/-page/index.html","searchKeys":["Page","public interface Page<M extends ShardedRecord>","io.spine.server.delivery.Page"]},{"name":"public interface ParameterSpec<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","description":"io.spine.server.model.ParameterSpec","location":"server/io.spine.server.model/-parameter-spec/index.html","searchKeys":["ParameterSpec","public interface ParameterSpec<E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>>","io.spine.server.model.ParameterSpec"]},{"name":"public interface Publisher implements MessageChannel","description":"io.spine.server.transport.Publisher","location":"server/io.spine.server.transport/-publisher/index.html","searchKeys":["Publisher","public interface Publisher implements MessageChannel","io.spine.server.transport.Publisher"]},{"name":"public interface ReactingClass implements EventReceiverClass","description":"io.spine.server.event.model.ReactingClass","location":"server/io.spine.server.event.model/-reacting-class/index.html","searchKeys":["ReactingClass","public interface ReactingClass implements EventReceiverClass","io.spine.server.event.model.ReactingClass"]},{"name":"public interface ReadRequest<I>","description":"io.spine.server.storage.ReadRequest","location":"server/io.spine.server.storage/-read-request/index.html","searchKeys":["ReadRequest","public interface ReadRequest<I>","io.spine.server.storage.ReadRequest"]},{"name":"public interface ReadSideFunction implements Function<T, R>","description":"io.spine.system.server.ReadSideFunction","location":"server/io.spine.system.server/-read-side-function/index.html","searchKeys":["ReadSideFunction","public interface ReadSideFunction implements Function<T, R>","io.spine.system.server.ReadSideFunction"]},{"name":"public interface RepositoryLookup<I> implements Function<T, R>","description":"io.spine.server.delivery.RepositoryLookup","location":"server/io.spine.server.delivery/-repository-lookup/index.html","searchKeys":["RepositoryLookup","public interface RepositoryLookup<I> implements Function<T, R>","io.spine.server.delivery.RepositoryLookup"]},{"name":"public interface Route<M extends Message, C extends Message, R> implements BiFunction<T, U, R>, Serializable","description":"io.spine.server.route.Route","location":"server/io.spine.server.route/-route/index.html","searchKeys":["Route","public interface Route<M extends Message, C extends Message, R> implements BiFunction<T, U, R>, Serializable","io.spine.server.route.Route"]},{"name":"public interface SelectiveHandler<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>, R extends MessageClass<?>> implements HandlerMethod<T, C, E, R>","description":"io.spine.server.model.SelectiveHandler","location":"server/io.spine.server.model/-selective-handler/index.html","searchKeys":["SelectiveHandler","public interface SelectiveHandler<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>, R extends MessageClass<?>> implements HandlerMethod<T, C, E, R>","io.spine.server.model.SelectiveHandler"]},{"name":"public interface ShardEvent","description":"io.spine.server.delivery.ShardEvent","location":"server/io.spine.server.delivery/-shard-event/index.html","searchKeys":["ShardEvent","public interface ShardEvent","io.spine.server.delivery.ShardEvent"]},{"name":"public interface ShardObserver","description":"io.spine.server.delivery.ShardObserver","location":"server/io.spine.server.delivery/-shard-observer/index.html","searchKeys":["ShardObserver","public interface ShardObserver","io.spine.server.delivery.ShardObserver"]},{"name":"public interface ShardedRecord","description":"io.spine.server.delivery.ShardedRecord","location":"server/io.spine.server.delivery/-sharded-record/index.html","searchKeys":["ShardedRecord","public interface ShardedRecord","io.spine.server.delivery.ShardedRecord"]},{"name":"public interface ShardedWorkRegistry","description":"io.spine.server.delivery.ShardedWorkRegistry","location":"server/io.spine.server.delivery/-sharded-work-registry/index.html","searchKeys":["ShardedWorkRegistry","public interface ShardedWorkRegistry","io.spine.server.delivery.ShardedWorkRegistry"]},{"name":"public interface SignalDispatchedMixin<S extends Signal<?, ?, ?>>","description":"io.spine.system.server.event.SignalDispatchedMixin","location":"server/io.spine.system.server.event/-signal-dispatched-mixin/index.html","searchKeys":["SignalDispatchedMixin","public interface SignalDispatchedMixin<S extends Signal<?, ?, ?>>","io.spine.system.server.event.SignalDispatchedMixin"]},{"name":"public interface SignalEnvelope<I extends SignalId, T extends Signal<I, ?, C>, C extends MessageContext> implements MessageEnvelope<I, T, C>","description":"io.spine.server.type.SignalEnvelope","location":"server/io.spine.server.type/-signal-envelope/index.html","searchKeys":["SignalEnvelope","public interface SignalEnvelope<I extends SignalId, T extends Signal<I, ?, C>, C extends MessageContext> implements MessageEnvelope<I, T, C>","io.spine.server.type.SignalEnvelope"]},{"name":"public interface StandardRejection","description":"io.spine.server.entity.rejection.StandardRejection","location":"server/io.spine.server.entity.rejection/-standard-rejection/index.html","searchKeys":["StandardRejection","public interface StandardRejection","io.spine.server.entity.rejection.StandardRejection"]},{"name":"public interface StateSubscribingClass","description":"io.spine.server.entity.model.StateSubscribingClass","location":"server/io.spine.server.entity.model/-state-subscribing-class/index.html","searchKeys":["StateSubscribingClass","public interface StateSubscribingClass","io.spine.server.entity.model.StateSubscribingClass"]},{"name":"public interface StateUpdateRoute<I, M extends EntityState> implements Multicast<I, M, C>","description":"io.spine.server.route.StateUpdateRoute","location":"server/io.spine.server.route/-state-update-route/index.html","searchKeys":["StateUpdateRoute","public interface StateUpdateRoute<I, M extends EntityState> implements Multicast<I, M, C>","io.spine.server.route.StateUpdateRoute"]},{"name":"public interface Storage<I, M extends Message, R extends ReadRequest<I>> implements AutoCloseable","description":"io.spine.server.storage.Storage","location":"server/io.spine.server.storage/-storage/index.html","searchKeys":["Storage","public interface Storage<I, M extends Message, R extends ReadRequest<I>> implements AutoCloseable","io.spine.server.storage.Storage"]},{"name":"public interface StorageFactory implements AutoCloseable","description":"io.spine.server.storage.StorageFactory","location":"server/io.spine.server.storage/-storage-factory/index.html","searchKeys":["StorageFactory","public interface StorageFactory implements AutoCloseable","io.spine.server.storage.StorageFactory"]},{"name":"public interface StorageField","description":"io.spine.server.storage.StorageField","location":"server/io.spine.server.storage/-storage-field/index.html","searchKeys":["StorageField","public interface StorageField","io.spine.server.storage.StorageField"]},{"name":"public interface StorageWithLifecycleFlags<I, M extends Message, R extends ReadRequest<I>> implements Storage<I, M, R>","description":"io.spine.server.storage.StorageWithLifecycleFlags","location":"server/io.spine.server.storage/-storage-with-lifecycle-flags/index.html","searchKeys":["StorageWithLifecycleFlags","public interface StorageWithLifecycleFlags<I, M extends Message, R extends ReadRequest<I>> implements Storage<I, M, R>","io.spine.server.storage.StorageWithLifecycleFlags"]},{"name":"public interface Store<E extends Entity> implements Consumer<T>","description":"io.spine.server.entity.RepositoryCache.Store","location":"server/io.spine.server.entity/-repository-cache/-store/index.html","searchKeys":["Store","public interface Store<E extends Entity> implements Consumer<T>","io.spine.server.entity.RepositoryCache.Store"]},{"name":"public interface SubscribingClass","description":"io.spine.server.event.model.SubscribingClass","location":"server/io.spine.server.event.model/-subscribing-class/index.html","searchKeys":["SubscribingClass","public interface SubscribingClass","io.spine.server.event.model.SubscribingClass"]},{"name":"public interface SubscriptionCallback implements Consumer<T>","description":"io.spine.server.stand.SubscriptionCallback","location":"server/io.spine.server.stand/-subscription-callback/index.html","searchKeys":["SubscriptionCallback","public interface SubscriptionCallback implements Consumer<T>","io.spine.server.stand.SubscriptionCallback"]},{"name":"public interface SystemClient","description":"io.spine.system.server.SystemClient","location":"server/io.spine.system.server/-system-client/index.html","searchKeys":["SystemClient","public interface SystemClient","io.spine.system.server.SystemClient"]},{"name":"public interface SystemReadSide","description":"io.spine.system.server.SystemReadSide","location":"server/io.spine.system.server/-system-read-side/index.html","searchKeys":["SystemReadSide","public interface SystemReadSide","io.spine.system.server.SystemReadSide"]},{"name":"public interface SystemWriteSide","description":"io.spine.system.server.SystemWriteSide","location":"server/io.spine.system.server/-system-write-side/index.html","searchKeys":["SystemWriteSide","public interface SystemWriteSide","io.spine.system.server.SystemWriteSide"]},{"name":"public interface TenantIndex implements ContextAware, AutoCloseable","description":"io.spine.server.tenant.TenantIndex","location":"server/io.spine.server.tenant/-tenant-index/index.html","searchKeys":["TenantIndex","public interface TenantIndex implements ContextAware, AutoCloseable","io.spine.server.tenant.TenantIndex"]},{"name":"public interface Tracer implements AutoCloseable","description":"io.spine.server.trace.Tracer","location":"server/io.spine.server.trace/-tracer/index.html","searchKeys":["Tracer","public interface Tracer implements AutoCloseable","io.spine.server.trace.Tracer"]},{"name":"public interface TracerFactory implements AutoCloseable","description":"io.spine.server.trace.TracerFactory","location":"server/io.spine.server.trace/-tracer-factory/index.html","searchKeys":["TracerFactory","public interface TracerFactory implements AutoCloseable","io.spine.server.trace.TracerFactory"]},{"name":"public interface TransactionListener<I>","description":"io.spine.server.entity.TransactionListener","location":"server/io.spine.server.entity/-transaction-listener/index.html","searchKeys":["TransactionListener","public interface TransactionListener<I>","io.spine.server.entity.TransactionListener"]},{"name":"public interface TransportFactory implements Closeable","description":"io.spine.server.transport.TransportFactory","location":"server/io.spine.server.transport/-transport-factory/index.html","searchKeys":["TransportFactory","public interface TransportFactory implements Closeable","io.spine.server.transport.TransportFactory"]},{"name":"public interface TypeMatcher implements Predicate<T>","description":"io.spine.server.model.TypeMatcher","location":"server/io.spine.server.model/-type-matcher/index.html","searchKeys":["TypeMatcher","public interface TypeMatcher implements Predicate<T>","io.spine.server.model.TypeMatcher"]},{"name":"public interface Unicast<I, M extends Message, C extends Message> implements Route<M, C, R>","description":"io.spine.server.route.Unicast","location":"server/io.spine.server.route/-unicast/index.html","searchKeys":["Unicast","public interface Unicast<I, M extends Message, C extends Message> implements Route<M, C, R>","io.spine.server.route.Unicast"]},{"name":"public interface UnicastDispatcher<C extends MessageClass, E extends MessageEnvelope> implements MessageDispatcher<C, E>","description":"io.spine.server.bus.UnicastDispatcher","location":"server/io.spine.server.bus/-unicast-dispatcher/index.html","searchKeys":["UnicastDispatcher","public interface UnicastDispatcher<C extends MessageClass, E extends MessageEnvelope> implements MessageDispatcher<C, E>","io.spine.server.bus.UnicastDispatcher"]},{"name":"public interface VoidMethod<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements HandlerMethod<T, C, E, R>","description":"io.spine.server.model.VoidMethod","location":"server/io.spine.server.model/-void-method/index.html","searchKeys":["VoidMethod","public interface VoidMethod<T, C extends MessageClass<?>, E extends MessageEnvelope<? extends Object, ? extends Object, ? extends Object>> implements HandlerMethod<T, C, E, R>","io.spine.server.model.VoidMethod"]},{"name":"public interface WithLifecycle","description":"io.spine.server.entity.WithLifecycle","location":"server/io.spine.server.entity/-with-lifecycle/index.html","searchKeys":["WithLifecycle","public interface WithLifecycle","io.spine.server.entity.WithLifecycle"]},{"name":"public interface WriteSideFunction implements Function<T, R>","description":"io.spine.system.server.WriteSideFunction","location":"server/io.spine.system.server/-write-side-function/index.html","searchKeys":["WriteSideFunction","public interface WriteSideFunction implements Function<T, R>","io.spine.system.server.WriteSideFunction"]},{"name":"static Ack acknowledge(Message id)","description":"io.spine.server.bus.Acks.acknowledge","location":"server/io.spine.server.bus/-acks/acknowledge.html","searchKeys":["acknowledge","static Ack acknowledge(Message id)","io.spine.server.bus.Acks.acknowledge"]},{"name":"static Ack reject(Message id, Error cause)","description":"io.spine.server.bus.Acks.reject","location":"server/io.spine.server.bus/-acks/reject.html","searchKeys":["reject","static Ack reject(Message id, Error cause)","io.spine.server.bus.Acks.reject"]},{"name":"static Ack reject(Message id, RejectionEnvelope cause)","description":"io.spine.server.bus.Acks.reject","location":"server/io.spine.server.bus/-acks/reject.html","searchKeys":["reject","static Ack reject(Message id, RejectionEnvelope cause)","io.spine.server.bus.Acks.reject"]},{"name":"static AggregateClass<A> asAggregateClass<A extends Aggregate>(Class<A> cls)","description":"io.spine.server.aggregate.model.AggregateClass.asAggregateClass","location":"server/io.spine.server.aggregate.model/-aggregate-class/as-aggregate-class.html","searchKeys":["asAggregateClass","static AggregateClass<A> asAggregateClass<A extends Aggregate>(Class<A> cls)","io.spine.server.aggregate.model.AggregateClass.asAggregateClass"]},{"name":"static AggregateField valueOf(String name)","description":"io.spine.server.aggregate.AggregateField.valueOf","location":"server/io.spine.server.aggregate/-aggregate-field/value-of.html","searchKeys":["valueOf","static AggregateField valueOf(String name)","io.spine.server.aggregate.AggregateField.valueOf"]},{"name":"static AggregatePart.GenericParameter valueOf(String name)","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.valueOf","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/value-of.html","searchKeys":["valueOf","static AggregatePart.GenericParameter valueOf(String name)","io.spine.server.aggregate.AggregatePart.GenericParameter.valueOf"]},{"name":"static AggregatePartClass<A> asAggregatePartClass<A extends AggregatePart>(Class<A> cls)","description":"io.spine.server.aggregate.model.AggregatePartClass.asAggregatePartClass","location":"server/io.spine.server.aggregate.model/-aggregate-part-class/as-aggregate-part-class.html","searchKeys":["asAggregatePartClass","static AggregatePartClass<A> asAggregatePartClass<A extends AggregatePart>(Class<A> cls)","io.spine.server.aggregate.model.AggregatePartClass.asAggregatePartClass"]},{"name":"static AllowImportAttribute of(Method method)","description":"io.spine.server.aggregate.model.AllowImportAttribute.of","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/of.html","searchKeys":["of","static AllowImportAttribute of(Method method)","io.spine.server.aggregate.model.AllowImportAttribute.of"]},{"name":"static AllowImportAttribute valueOf(String name)","description":"io.spine.server.aggregate.model.AllowImportAttribute.valueOf","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/value-of.html","searchKeys":["valueOf","static AllowImportAttribute valueOf(String name)","io.spine.server.aggregate.model.AllowImportAttribute.valueOf"]},{"name":"static ArgumentFilter acceptingOnly(FieldPath field, Object fieldValue)","description":"io.spine.server.model.ArgumentFilter.acceptingOnly","location":"server/io.spine.server.model/-argument-filter/accepting-only.html","searchKeys":["acceptingOnly","static ArgumentFilter acceptingOnly(FieldPath field, Object fieldValue)","io.spine.server.model.ArgumentFilter.acceptingOnly"]},{"name":"static ArgumentFilter createFilter(Method method)","description":"io.spine.server.model.ArgumentFilter.createFilter","location":"server/io.spine.server.model/-argument-filter/create-filter.html","searchKeys":["createFilter","static ArgumentFilter createFilter(Method method)","io.spine.server.model.ArgumentFilter.createFilter"]},{"name":"static Array<AggregateField> values()","description":"io.spine.server.aggregate.AggregateField.values","location":"server/io.spine.server.aggregate/-aggregate-field/values.html","searchKeys":["values","static Array<AggregateField> values()","io.spine.server.aggregate.AggregateField.values"]},{"name":"static Array<AggregatePart.GenericParameter> values()","description":"io.spine.server.aggregate.AggregatePart.GenericParameter.values","location":"server/io.spine.server.aggregate/-aggregate-part/-generic-parameter/values.html","searchKeys":["values","static Array<AggregatePart.GenericParameter> values()","io.spine.server.aggregate.AggregatePart.GenericParameter.values"]},{"name":"static Array<AllowImportAttribute> values()","description":"io.spine.server.aggregate.model.AllowImportAttribute.values","location":"server/io.spine.server.aggregate.model/-allow-import-attribute/values.html","searchKeys":["values","static Array<AllowImportAttribute> values()","io.spine.server.aggregate.model.AllowImportAttribute.values"]},{"name":"static Array<Entity.GenericParameter> values()","description":"io.spine.server.entity.Entity.GenericParameter.values","location":"server/io.spine.server.entity/-entity/-generic-parameter/values.html","searchKeys":["values","static Array<Entity.GenericParameter> values()","io.spine.server.entity.Entity.GenericParameter.values"]},{"name":"static Array<EventContextField> values()","description":"io.spine.server.event.storage.EventContextField.values","location":"server/io.spine.server.event.storage/-event-context-field/values.html","searchKeys":["values","static Array<EventContextField> values()","io.spine.server.event.storage.EventContextField.values"]},{"name":"static Array<EventField> values()","description":"io.spine.server.event.storage.EventField.values","location":"server/io.spine.server.event.storage/-event-field/values.html","searchKeys":["values","static Array<EventField> values()","io.spine.server.event.storage.EventField.values"]},{"name":"static Array<LifecycleFlagField> values()","description":"io.spine.server.storage.LifecycleFlagField.values","location":"server/io.spine.server.storage/-lifecycle-flag-field/values.html","searchKeys":["values","static Array<LifecycleFlagField> values()","io.spine.server.storage.LifecycleFlagField.values"]},{"name":"static Array<MatchCriterion> values()","description":"io.spine.server.model.MatchCriterion.values","location":"server/io.spine.server.model/-match-criterion/values.html","searchKeys":["values","static Array<MatchCriterion> values()","io.spine.server.model.MatchCriterion.values"]},{"name":"static Array<NoOpSystemClient> values()","description":"io.spine.system.server.NoOpSystemClient.values","location":"server/io.spine.system.server/-no-op-system-client/values.html","searchKeys":["values","static Array<NoOpSystemClient> values()","io.spine.system.server.NoOpSystemClient.values"]},{"name":"static Array<NoOpSystemReadSide> values()","description":"io.spine.system.server.NoOpSystemReadSide.values","location":"server/io.spine.system.server/-no-op-system-read-side/values.html","searchKeys":["values","static Array<NoOpSystemReadSide> values()","io.spine.system.server.NoOpSystemReadSide.values"]},{"name":"static Array<NoOpSystemWriteSide> values()","description":"io.spine.system.server.NoOpSystemWriteSide.values","location":"server/io.spine.system.server/-no-op-system-write-side/values.html","searchKeys":["values","static Array<NoOpSystemWriteSide> values()","io.spine.system.server.NoOpSystemWriteSide.values"]},{"name":"static Array<StateField> values()","description":"io.spine.server.storage.StateField.values","location":"server/io.spine.server.storage/-state-field/values.html","searchKeys":["values","static Array<StateField> values()","io.spine.server.storage.StateField.values"]},{"name":"static Array<TypeVariable<? extends Class<? extends Object>>> genericTypesOf(TypeToken<?> type)","description":"io.spine.server.model.TypeMatcher.genericTypesOf","location":"server/io.spine.server.model/-type-matcher/generic-types-of.html","searchKeys":["genericTypesOf","static Array<TypeVariable<? extends Class<? extends Object>>> genericTypesOf(TypeToken<?> type)","io.spine.server.model.TypeMatcher.genericTypesOf"]},{"name":"static Array<VersionField> values()","description":"io.spine.server.storage.VersionField.values","location":"server/io.spine.server.storage/-version-field/values.html","searchKeys":["values","static Array<VersionField> values()","io.spine.server.storage.VersionField.values"]},{"name":"static BoundedContextBuilder assumingTests()","description":"io.spine.server.BoundedContextBuilder.assumingTests","location":"server/io.spine.server/-bounded-context-builder/assuming-tests.html","searchKeys":["assumingTests","static BoundedContextBuilder assumingTests()","io.spine.server.BoundedContextBuilder.assumingTests"]},{"name":"static BoundedContextBuilder assumingTests(boolean multitenant)","description":"io.spine.server.BoundedContextBuilder.assumingTests","location":"server/io.spine.server/-bounded-context-builder/assuming-tests.html","searchKeys":["assumingTests","static BoundedContextBuilder assumingTests(boolean multitenant)","io.spine.server.BoundedContextBuilder.assumingTests"]},{"name":"static BoundedContextBuilder multitenant(String name)","description":"io.spine.server.BoundedContext.multitenant","location":"server/io.spine.server/-bounded-context/multitenant.html","searchKeys":["multitenant","static BoundedContextBuilder multitenant(String name)","io.spine.server.BoundedContext.multitenant"]},{"name":"static BoundedContextBuilder singleTenant(String name)","description":"io.spine.server.BoundedContext.singleTenant","location":"server/io.spine.server/-bounded-context/single-tenant.html","searchKeys":["singleTenant","static BoundedContextBuilder singleTenant(String name)","io.spine.server.BoundedContext.singleTenant"]},{"name":"static CatchUpProcessBuilder<I> newBuilder<I>(ProjectionRepository<I, ? extends Object, ? extends Object> repo)","description":"io.spine.server.delivery.CatchUpProcess.newBuilder","location":"server/io.spine.server.delivery/-catch-up-process/new-builder.html","searchKeys":["newBuilder","static CatchUpProcessBuilder<I> newBuilder<I>(ProjectionRepository<I, ? extends Object, ? extends Object> repo)","io.spine.server.delivery.CatchUpProcess.newBuilder"]},{"name":"static ChannelId channelIdFor(TypeUrl messageType)","description":"io.spine.server.transport.MessageChannel.channelIdFor","location":"server/io.spine.server.transport/-message-channel/channel-id-for.html","searchKeys":["channelIdFor","static ChannelId channelIdFor(TypeUrl messageType)","io.spine.server.transport.MessageChannel.channelIdFor"]},{"name":"static Class<? extends Message> asMessageType(Class<? extends Object> cls)","description":"io.spine.server.model.TypeMatcher.asMessageType","location":"server/io.spine.server.model/-type-matcher/as-message-type.html","searchKeys":["asMessageType","static Class<? extends Message> asMessageType(Class<? extends Object> cls)","io.spine.server.model.TypeMatcher.asMessageType"]},{"name":"static Class<I> idClass<I>(Class<? extends Entity> cls)","description":"io.spine.server.entity.model.EntityClass.idClass","location":"server/io.spine.server.entity.model/-entity-class/id-class.html","searchKeys":["idClass","static Class<I> idClass<I>(Class<? extends Entity> cls)","io.spine.server.entity.model.EntityClass.idClass"]},{"name":"static Class<M> firstParamType<M extends Message>(Method handler)","description":"io.spine.server.model.AbstractHandlerMethod.firstParamType","location":"server/io.spine.server.model/-abstract-handler-method/first-param-type.html","searchKeys":["firstParamType","static Class<M> firstParamType<M extends Message>(Method handler)","io.spine.server.model.AbstractHandlerMethod.firstParamType"]},{"name":"static Class<S> stateClassOf<S extends EntityState>(Class<? extends Entity> entityClass)","description":"io.spine.server.entity.model.EntityClass.stateClassOf","location":"server/io.spine.server.entity.model/-entity-class/state-class-of.html","searchKeys":["stateClassOf","static Class<S> stateClassOf<S extends EntityState>(Class<? extends Entity> entityClass)","io.spine.server.entity.model.EntityClass.stateClassOf"]},{"name":"static Collection<M> applyMask<M extends Message>(FieldMask mask, Collection<M> messages)","description":"io.spine.server.entity.FieldMasks.applyMask","location":"server/io.spine.server.entity/-field-masks/apply-mask.html","searchKeys":["applyMask","static Collection<M> applyMask<M extends Message>(FieldMask mask, Collection<M> messages)","io.spine.server.entity.FieldMasks.applyMask"]},{"name":"static ColumnName of(FieldDeclaration field)","description":"io.spine.server.entity.storage.ColumnName.of","location":"server/io.spine.server.entity.storage/-column-name/of.html","searchKeys":["of","static ColumnName of(FieldDeclaration field)","io.spine.server.entity.storage.ColumnName.of"]},{"name":"static ColumnName of(StorageField storageField)","description":"io.spine.server.entity.storage.ColumnName.of","location":"server/io.spine.server.entity.storage/-column-name/of.html","searchKeys":["of","static ColumnName of(StorageField storageField)","io.spine.server.entity.storage.ColumnName.of"]},{"name":"static ColumnName of(String value)","description":"io.spine.server.entity.storage.ColumnName.of","location":"server/io.spine.server.entity.storage/-column-name/of.html","searchKeys":["of","static ColumnName of(String value)","io.spine.server.entity.storage.ColumnName.of"]},{"name":"static ColumnTypeMapping<T, T> identity<T>()","description":"io.spine.server.entity.storage.ColumnTypeMapping.identity","location":"server/io.spine.server.entity.storage/-column-type-mapping/identity.html","searchKeys":["identity","static ColumnTypeMapping<T, T> identity<T>()","io.spine.server.entity.storage.ColumnTypeMapping.identity"]},{"name":"static Columns of(Class<? extends Entity<? extends Object, ? extends Object>> entityClass)","description":"io.spine.server.entity.storage.Columns.of","location":"server/io.spine.server.entity.storage/-columns/of.html","searchKeys":["of","static Columns of(Class<? extends Entity<? extends Object, ? extends Object>> entityClass)","io.spine.server.entity.storage.Columns.of"]},{"name":"static Columns of(EntityClass<? extends Object> entityClass)","description":"io.spine.server.entity.storage.Columns.of","location":"server/io.spine.server.entity.storage/-columns/of.html","searchKeys":["of","static Columns of(EntityClass<? extends Object> entityClass)","io.spine.server.entity.storage.Columns.of"]},{"name":"static CommandBus.Builder newBuilder()","description":"io.spine.server.commandbus.CommandBus.newBuilder","location":"server/io.spine.server.commandbus/-command-bus/new-builder.html","searchKeys":["newBuilder","static CommandBus.Builder newBuilder()","io.spine.server.commandbus.CommandBus.newBuilder"]},{"name":"static CommandClass from(Class<? extends CommandMessage> value)","description":"io.spine.server.type.CommandClass.from","location":"server/io.spine.server.type/-command-class/from.html","searchKeys":["from","static CommandClass from(Class<? extends CommandMessage> value)","io.spine.server.type.CommandClass.from"]},{"name":"static CommandClass of(Message commandOrMessage)","description":"io.spine.server.type.CommandClass.of","location":"server/io.spine.server.type/-command-class/of.html","searchKeys":["of","static CommandClass of(Message commandOrMessage)","io.spine.server.type.CommandClass.of"]},{"name":"static CommandEnvelope of(Command command)","description":"io.spine.server.type.CommandEnvelope.of","location":"server/io.spine.server.type/-command-envelope/of.html","searchKeys":["of","static CommandEnvelope of(Command command)","io.spine.server.type.CommandEnvelope.of"]},{"name":"static CommandHandlerClass<C> asCommandHandlerClass<C extends AbstractCommandHandler>(Class<C> cls)","description":"io.spine.server.command.model.CommandHandlerClass.asCommandHandlerClass","location":"server/io.spine.server.command.model/-command-handler-class/as-command-handler-class.html","searchKeys":["asCommandHandlerClass","static CommandHandlerClass<C> asCommandHandlerClass<C extends AbstractCommandHandler>(Class<C> cls)","io.spine.server.command.model.CommandHandlerClass.asCommandHandlerClass"]},{"name":"static CommandRouting<I> newInstance<I>(Class<I> idClass)","description":"io.spine.server.route.CommandRouting.newInstance","location":"server/io.spine.server.route/-command-routing/new-instance.html","searchKeys":["newInstance","static CommandRouting<I> newInstance<I>(Class<I> idClass)","io.spine.server.route.CommandRouting.newInstance"]},{"name":"static CommandService.Builder newBuilder()","description":"io.spine.server.CommandService.newBuilder","location":"server/io.spine.server/-command-service/new-builder.html","searchKeys":["newBuilder","static CommandService.Builder newBuilder()","io.spine.server.CommandService.newBuilder"]},{"name":"static CommandService withSingle(BoundedContext context)","description":"io.spine.server.CommandService.withSingle","location":"server/io.spine.server/-command-service/with-single.html","searchKeys":["withSingle","static CommandService withSingle(BoundedContext context)","io.spine.server.CommandService.withSingle"]},{"name":"static CommanderClass<C> asCommanderClass<C extends AbstractCommander>(Class<C> cls)","description":"io.spine.server.command.model.CommanderClass.asCommanderClass","location":"server/io.spine.server.command.model/-commander-class/as-commander-class.html","searchKeys":["asCommanderClass","static CommanderClass<C> asCommanderClass<C extends AbstractCommander>(Class<C> cls)","io.spine.server.command.model.CommanderClass.asCommanderClass"]},{"name":"static CommanderClass<C> delegateFor<C extends Commander>(Class<C> cls)","description":"io.spine.server.command.model.CommanderClass.delegateFor","location":"server/io.spine.server.command.model/-commander-class/delegate-for.html","searchKeys":["delegateFor","static CommanderClass<C> delegateFor<C extends Commander>(Class<C> cls)","io.spine.server.command.model.CommanderClass.delegateFor"]},{"name":"static CompositeEventFilter.Builder newBuilder()","description":"io.spine.server.entity.CompositeEventFilter.newBuilder","location":"server/io.spine.server.entity/-composite-event-filter/new-builder.html","searchKeys":["newBuilder","static CompositeEventFilter.Builder newBuilder()","io.spine.server.entity.CompositeEventFilter.newBuilder"]},{"name":"static ContextSpec multitenant(String name)","description":"io.spine.server.ContextSpec.multitenant","location":"server/io.spine.server/-context-spec/multitenant.html","searchKeys":["multitenant","static ContextSpec multitenant(String name)","io.spine.server.ContextSpec.multitenant"]},{"name":"static ContextSpec singleTenant(String name)","description":"io.spine.server.ContextSpec.singleTenant","location":"server/io.spine.server/-context-spec/single-tenant.html","searchKeys":["singleTenant","static ContextSpec singleTenant(String name)","io.spine.server.ContextSpec.singleTenant"]},{"name":"static DefaultCommandRoute<I> newInstance<I>(Class<I> idClass)","description":"io.spine.server.route.DefaultCommandRoute.newInstance","location":"server/io.spine.server.route/-default-command-route/new-instance.html","searchKeys":["newInstance","static DefaultCommandRoute<I> newInstance<I>(Class<I> idClass)","io.spine.server.route.DefaultCommandRoute.newInstance"]},{"name":"static DelegatingCommandDispatcher of(CommandDispatcherDelegate delegate)","description":"io.spine.server.commandbus.DelegatingCommandDispatcher.of","location":"server/io.spine.server.commandbus/-delegating-command-dispatcher/of.html","searchKeys":["of","static DelegatingCommandDispatcher of(CommandDispatcherDelegate delegate)","io.spine.server.commandbus.DelegatingCommandDispatcher.of"]},{"name":"static DelegatingEventDispatcher of(EventDispatcherDelegate delegate)","description":"io.spine.server.event.DelegatingEventDispatcher.of","location":"server/io.spine.server.event/-delegating-event-dispatcher/of.html","searchKeys":["of","static DelegatingEventDispatcher of(EventDispatcherDelegate delegate)","io.spine.server.event.DelegatingEventDispatcher.of"]},{"name":"static DeliveryBuilder newBuilder()","description":"io.spine.server.delivery.Delivery.newBuilder","location":"server/io.spine.server.delivery/-delivery/new-builder.html","searchKeys":["newBuilder","static DeliveryBuilder newBuilder()","io.spine.server.delivery.Delivery.newBuilder"]},{"name":"static DeliveryStrategy forNumber(int totalShards)","description":"io.spine.server.delivery.UniformAcrossAllShards.forNumber","location":"server/io.spine.server.delivery/-uniform-across-all-shards/for-number.html","searchKeys":["forNumber","static DeliveryStrategy forNumber(int totalShards)","io.spine.server.delivery.UniformAcrossAllShards.forNumber"]},{"name":"static DeliveryStrategy singleShard()","description":"io.spine.server.delivery.UniformAcrossAllShards.singleShard","location":"server/io.spine.server.delivery/-uniform-across-all-shards/single-shard.html","searchKeys":["singleShard","static DeliveryStrategy singleShard()","io.spine.server.delivery.UniformAcrossAllShards.singleShard"]},{"name":"static Delivery local()","description":"io.spine.server.delivery.Delivery.local","location":"server/io.spine.server.delivery/-delivery/local.html","searchKeys":["local","static Delivery local()","io.spine.server.delivery.Delivery.local"]},{"name":"static Delivery localAsync()","description":"io.spine.server.delivery.Delivery.localAsync","location":"server/io.spine.server.delivery/-delivery/local-async.html","searchKeys":["localAsync","static Delivery localAsync()","io.spine.server.delivery.Delivery.localAsync"]},{"name":"static DispatchCommand<I> operationFor<I>(EntityLifecycle lifecycle, CommandHandlingEntity<I, ? extends Object, ? extends Object> entity, CommandEnvelope command)","description":"io.spine.server.command.DispatchCommand.operationFor","location":"server/io.spine.server.command/-dispatch-command/operation-for.html","searchKeys":["operationFor","static DispatchCommand<I> operationFor<I>(EntityLifecycle lifecycle, CommandHandlingEntity<I, ? extends Object, ? extends Object> entity, CommandEnvelope command)","io.spine.server.command.DispatchCommand.operationFor"]},{"name":"static DispatchOutcomeHandler from(DispatchOutcome outcome)","description":"io.spine.server.dispatch.DispatchOutcomeHandler.from","location":"server/io.spine.server.dispatch/-dispatch-outcome-handler/from.html","searchKeys":["from","static DispatchOutcomeHandler from(DispatchOutcome outcome)","io.spine.server.dispatch.DispatchOutcomeHandler.from"]},{"name":"static DuplicateHandlerCheck newInstance()","description":"io.spine.server.command.model.DuplicateHandlerCheck.newInstance","location":"server/io.spine.server.command.model/-duplicate-handler-check/new-instance.html","searchKeys":["newInstance","static DuplicateHandlerCheck newInstance()","io.spine.server.command.model.DuplicateHandlerCheck.newInstance"]},{"name":"static EitherOf2<A, B> withA<A extends Message, B extends Message>(A a)","description":"io.spine.server.tuple.EitherOf2.withA","location":"server/io.spine.server.tuple/-either-of2/with-a.html","searchKeys":["withA","static EitherOf2<A, B> withA<A extends Message, B extends Message>(A a)","io.spine.server.tuple.EitherOf2.withA"]},{"name":"static EitherOf2<A, B> withB<A extends Message, B extends Message>(B b)","description":"io.spine.server.tuple.EitherOf2.withB","location":"server/io.spine.server.tuple/-either-of2/with-b.html","searchKeys":["withB","static EitherOf2<A, B> withB<A extends Message, B extends Message>(B b)","io.spine.server.tuple.EitherOf2.withB"]},{"name":"static EitherOf3<A, B, C> withA<A extends Message, B extends Message, C extends Message>(A a)","description":"io.spine.server.tuple.EitherOf3.withA","location":"server/io.spine.server.tuple/-either-of3/with-a.html","searchKeys":["withA","static EitherOf3<A, B, C> withA<A extends Message, B extends Message, C extends Message>(A a)","io.spine.server.tuple.EitherOf3.withA"]},{"name":"static EitherOf3<A, B, C> withB<A extends Message, B extends Message, C extends Message>(B b)","description":"io.spine.server.tuple.EitherOf3.withB","location":"server/io.spine.server.tuple/-either-of3/with-b.html","searchKeys":["withB","static EitherOf3<A, B, C> withB<A extends Message, B extends Message, C extends Message>(B b)","io.spine.server.tuple.EitherOf3.withB"]},{"name":"static EitherOf3<A, B, C> withC<A extends Message, B extends Message, C extends Message>(C c)","description":"io.spine.server.tuple.EitherOf3.withC","location":"server/io.spine.server.tuple/-either-of3/with-c.html","searchKeys":["withC","static EitherOf3<A, B, C> withC<A extends Message, B extends Message, C extends Message>(C c)","io.spine.server.tuple.EitherOf3.withC"]},{"name":"static EitherOf4<A, B, C, D> withA<A extends Message, B extends Message, C extends Message, D extends Message>(A a)","description":"io.spine.server.tuple.EitherOf4.withA","location":"server/io.spine.server.tuple/-either-of4/with-a.html","searchKeys":["withA","static EitherOf4<A, B, C, D> withA<A extends Message, B extends Message, C extends Message, D extends Message>(A a)","io.spine.server.tuple.EitherOf4.withA"]},{"name":"static EitherOf4<A, B, C, D> withB<A extends Message, B extends Message, C extends Message, D extends Message>(B b)","description":"io.spine.server.tuple.EitherOf4.withB","location":"server/io.spine.server.tuple/-either-of4/with-b.html","searchKeys":["withB","static EitherOf4<A, B, C, D> withB<A extends Message, B extends Message, C extends Message, D extends Message>(B b)","io.spine.server.tuple.EitherOf4.withB"]},{"name":"static EitherOf4<A, B, C, D> withC<A extends Message, B extends Message, C extends Message, D extends Message>(C c)","description":"io.spine.server.tuple.EitherOf4.withC","location":"server/io.spine.server.tuple/-either-of4/with-c.html","searchKeys":["withC","static EitherOf4<A, B, C, D> withC<A extends Message, B extends Message, C extends Message, D extends Message>(C c)","io.spine.server.tuple.EitherOf4.withC"]},{"name":"static EitherOf4<A, B, C, D> withD<A extends Message, B extends Message, C extends Message, D extends Message>(D d)","description":"io.spine.server.tuple.EitherOf4.withD","location":"server/io.spine.server.tuple/-either-of4/with-d.html","searchKeys":["withD","static EitherOf4<A, B, C, D> withD<A extends Message, B extends Message, C extends Message, D extends Message>(D d)","io.spine.server.tuple.EitherOf4.withD"]},{"name":"static EitherOf5<A, B, C, D, E> withA<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a)","description":"io.spine.server.tuple.EitherOf5.withA","location":"server/io.spine.server.tuple/-either-of5/with-a.html","searchKeys":["withA","static EitherOf5<A, B, C, D, E> withA<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a)","io.spine.server.tuple.EitherOf5.withA"]},{"name":"static EitherOf5<A, B, C, D, E> withB<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(B b)","description":"io.spine.server.tuple.EitherOf5.withB","location":"server/io.spine.server.tuple/-either-of5/with-b.html","searchKeys":["withB","static EitherOf5<A, B, C, D, E> withB<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(B b)","io.spine.server.tuple.EitherOf5.withB"]},{"name":"static EitherOf5<A, B, C, D, E> withC<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(C c)","description":"io.spine.server.tuple.EitherOf5.withC","location":"server/io.spine.server.tuple/-either-of5/with-c.html","searchKeys":["withC","static EitherOf5<A, B, C, D, E> withC<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(C c)","io.spine.server.tuple.EitherOf5.withC"]},{"name":"static EitherOf5<A, B, C, D, E> withD<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(D d)","description":"io.spine.server.tuple.EitherOf5.withD","location":"server/io.spine.server.tuple/-either-of5/with-d.html","searchKeys":["withD","static EitherOf5<A, B, C, D, E> withD<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(D d)","io.spine.server.tuple.EitherOf5.withD"]},{"name":"static EitherOf5<A, B, C, D, E> withE<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(E e)","description":"io.spine.server.tuple.EitherOf5.withE","location":"server/io.spine.server.tuple/-either-of5/with-e.html","searchKeys":["withE","static EitherOf5<A, B, C, D, E> withE<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(E e)","io.spine.server.tuple.EitherOf5.withE"]},{"name":"static EmptyClass instance()","description":"io.spine.server.type.EmptyClass.instance","location":"server/io.spine.server.type/-empty-class/instance.html","searchKeys":["instance","static EmptyClass instance()","io.spine.server.type.EmptyClass.instance"]},{"name":"static Entity.GenericParameter valueOf(String name)","description":"io.spine.server.entity.Entity.GenericParameter.valueOf","location":"server/io.spine.server.entity/-entity/-generic-parameter/value-of.html","searchKeys":["valueOf","static Entity.GenericParameter valueOf(String name)","io.spine.server.entity.Entity.GenericParameter.valueOf"]},{"name":"static EntityClass<E> asEntityClass<E extends Entity>(Class<E> cls)","description":"io.spine.server.entity.model.EntityClass.asEntityClass","location":"server/io.spine.server.entity.model/-entity-class/as-entity-class.html","searchKeys":["asEntityClass","static EntityClass<E> asEntityClass<E extends Entity>(Class<E> cls)","io.spine.server.entity.model.EntityClass.asEntityClass"]},{"name":"static EntityLifecycleMonitor<I> newInstance<I>(Repository<I, ? extends Object> repository, I id)","description":"io.spine.server.entity.EntityLifecycleMonitor.newInstance","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/new-instance.html","searchKeys":["newInstance","static EntityLifecycleMonitor<I> newInstance<I>(Repository<I, ? extends Object> repository, I id)","io.spine.server.entity.EntityLifecycleMonitor.newInstance"]},{"name":"static EntityQuery<I> from<I>(TargetFilters filters, RecordStorage<I> storage)","description":"io.spine.server.entity.storage.EntityQueries.from","location":"server/io.spine.server.entity.storage/-entity-queries/from.html","searchKeys":["from","static EntityQuery<I> from<I>(TargetFilters filters, RecordStorage<I> storage)","io.spine.server.entity.storage.EntityQueries.from"]},{"name":"static EntityRecordWithColumns create(EntityRecord record, Entity<? extends Object, ? extends Object> entity, RecordStorage<? extends Object> recordStorage)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.create","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/create.html","searchKeys":["create","static EntityRecordWithColumns create(EntityRecord record, Entity<? extends Object, ? extends Object> entity, RecordStorage<? extends Object> recordStorage)","io.spine.server.entity.storage.EntityRecordWithColumns.create"]},{"name":"static EntityRecordWithColumns of(EntityRecord record)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.of","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/of.html","searchKeys":["of","static EntityRecordWithColumns of(EntityRecord record)","io.spine.server.entity.storage.EntityRecordWithColumns.of"]},{"name":"static EntityRecordWithColumns of(EntityRecord record, Map<ColumnName, Object> storageFields)","description":"io.spine.server.entity.storage.EntityRecordWithColumns.of","location":"server/io.spine.server.entity.storage/-entity-record-with-columns/of.html","searchKeys":["of","static EntityRecordWithColumns of(EntityRecord record, Map<ColumnName, Object> storageFields)","io.spine.server.entity.storage.EntityRecordWithColumns.of"]},{"name":"static Error createError(String format, Command command, CommandValidationError errorCode)","description":"io.spine.server.commandbus.CommandException.createError","location":"server/io.spine.server.commandbus/-command-exception/create-error.html","searchKeys":["createError","static Error createError(String format, Command command, CommandValidationError errorCode)","io.spine.server.commandbus.CommandException.createError"]},{"name":"static Error unknownTenantError(Message commandMessage, String errorText)","description":"io.spine.server.commandbus.InvalidCommandException.unknownTenantError","location":"server/io.spine.server.commandbus/-invalid-command-exception/unknown-tenant-error.html","searchKeys":["unknownTenantError","static Error unknownTenantError(Message commandMessage, String errorText)","io.spine.server.commandbus.InvalidCommandException.unknownTenantError"]},{"name":"static EventBlackList discardEvents(Array<Class<? extends EventMessage>> eventClasses)","description":"io.spine.server.entity.EventBlackList.discardEvents","location":"server/io.spine.server.entity/-event-black-list/discard-events.html","searchKeys":["discardEvents","static EventBlackList discardEvents(Array<Class<? extends EventMessage>> eventClasses)","io.spine.server.entity.EventBlackList.discardEvents"]},{"name":"static EventBus.Builder newBuilder()","description":"io.spine.server.event.EventBus.newBuilder","location":"server/io.spine.server.event/-event-bus/new-builder.html","searchKeys":["newBuilder","static EventBus.Builder newBuilder()","io.spine.server.event.EventBus.newBuilder"]},{"name":"static EventClass from(Class<? extends EventMessage> rawClass)","description":"io.spine.server.type.EventClass.from","location":"server/io.spine.server.type/-event-class/from.html","searchKeys":["from","static EventClass from(Class<? extends EventMessage> rawClass)","io.spine.server.type.EventClass.from"]},{"name":"static EventClass from(Event event)","description":"io.spine.server.type.EventClass.from","location":"server/io.spine.server.type/-event-class/from.html","searchKeys":["from","static EventClass from(Event event)","io.spine.server.type.EventClass.from"]},{"name":"static EventClass from(TypeUrl typeUrl)","description":"io.spine.server.type.EventClass.from","location":"server/io.spine.server.type/-event-class/from.html","searchKeys":["from","static EventClass from(TypeUrl typeUrl)","io.spine.server.type.EventClass.from"]},{"name":"static EventClass fromThrowable(Class<? extends ThrowableMessage> cls)","description":"io.spine.server.type.EventClass.fromThrowable","location":"server/io.spine.server.type/-event-class/from-throwable.html","searchKeys":["fromThrowable","static EventClass fromThrowable(Class<? extends ThrowableMessage> cls)","io.spine.server.type.EventClass.fromThrowable"]},{"name":"static EventClass of(Message eventOrMessage)","description":"io.spine.server.type.EventClass.of","location":"server/io.spine.server.type/-event-class/of.html","searchKeys":["of","static EventClass of(Message eventOrMessage)","io.spine.server.type.EventClass.of"]},{"name":"static EventClass updateEvent()","description":"io.spine.server.entity.model.StateClass.updateEvent","location":"server/io.spine.server.entity.model/-state-class/update-event.html","searchKeys":["updateEvent","static EventClass updateEvent()","io.spine.server.entity.model.StateClass.updateEvent"]},{"name":"static EventComparator chronological()","description":"io.spine.server.event.EventComparator.chronological","location":"server/io.spine.server.event/-event-comparator/chronological.html","searchKeys":["chronological","static EventComparator chronological()","io.spine.server.event.EventComparator.chronological"]},{"name":"static EventContextField valueOf(String name)","description":"io.spine.server.event.storage.EventContextField.valueOf","location":"server/io.spine.server.event.storage/-event-context-field/value-of.html","searchKeys":["valueOf","static EventContextField valueOf(String name)","io.spine.server.event.storage.EventContextField.valueOf"]},{"name":"static EventEnricher.Builder newBuilder()","description":"io.spine.server.event.EventEnricher.newBuilder","location":"server/io.spine.server.event/-event-enricher/new-builder.html","searchKeys":["newBuilder","static EventEnricher.Builder newBuilder()","io.spine.server.event.EventEnricher.newBuilder"]},{"name":"static EventEnvelope of(Event event)","description":"io.spine.server.type.EventEnvelope.of","location":"server/io.spine.server.type/-event-envelope/of.html","searchKeys":["of","static EventEnvelope of(Event event)","io.spine.server.type.EventEnvelope.of"]},{"name":"static EventFactory forImport(ActorContext actorContext, Any producerId)","description":"io.spine.server.event.EventFactory.forImport","location":"server/io.spine.server.event/-event-factory/for-import.html","searchKeys":["forImport","static EventFactory forImport(ActorContext actorContext, Any producerId)","io.spine.server.event.EventFactory.forImport"]},{"name":"static EventFactory on(MessageEnvelope origin, Any producerId)","description":"io.spine.server.event.EventFactory.on","location":"server/io.spine.server.event/-event-factory/on.html","searchKeys":["on","static EventFactory on(MessageEnvelope origin, Any producerId)","io.spine.server.event.EventFactory.on"]},{"name":"static EventFieldFilter.Builder newBuilder()","description":"io.spine.server.entity.EventFieldFilter.newBuilder","location":"server/io.spine.server.entity/-event-field-filter/new-builder.html","searchKeys":["newBuilder","static EventFieldFilter.Builder newBuilder()","io.spine.server.entity.EventFieldFilter.newBuilder"]},{"name":"static EventField valueOf(String name)","description":"io.spine.server.event.storage.EventField.valueOf","location":"server/io.spine.server.event.storage/-event-field/value-of.html","searchKeys":["valueOf","static EventField valueOf(String name)","io.spine.server.event.storage.EventField.valueOf"]},{"name":"static EventFilter allowAll()","description":"io.spine.server.entity.EventFilter.allowAll","location":"server/io.spine.server.entity/-event-filter/allow-all.html","searchKeys":["allowAll","static EventFilter allowAll()","io.spine.server.entity.EventFilter.allowAll"]},{"name":"static EventOrigin forImport(ActorContext actor)","description":"io.spine.server.event.EventOrigin.forImport","location":"server/io.spine.server.event/-event-origin/for-import.html","searchKeys":["forImport","static EventOrigin forImport(ActorContext actor)","io.spine.server.event.EventOrigin.forImport"]},{"name":"static EventOrigin from(Origin origin)","description":"io.spine.server.event.EventOrigin.from","location":"server/io.spine.server.event/-event-origin/from.html","searchKeys":["from","static EventOrigin from(Origin origin)","io.spine.server.event.EventOrigin.from"]},{"name":"static EventOrigin fromAnotherMessage(MessageEnvelope<? extends Object, ? extends Object, ? extends Object> envelope)","description":"io.spine.server.event.EventOrigin.fromAnotherMessage","location":"server/io.spine.server.event/-event-origin/from-another-message.html","searchKeys":["fromAnotherMessage","static EventOrigin fromAnotherMessage(MessageEnvelope<? extends Object, ? extends Object, ? extends Object> envelope)","io.spine.server.event.EventOrigin.fromAnotherMessage"]},{"name":"static EventPlayer forTransactionOf(TransactionalEntity<? extends Object, ? extends Object, ? extends Object> entity)","description":"io.spine.server.entity.EventPlayer.forTransactionOf","location":"server/io.spine.server.entity/-event-player/for-transaction-of.html","searchKeys":["forTransactionOf","static EventPlayer forTransactionOf(TransactionalEntity<? extends Object, ? extends Object, ? extends Object> entity)","io.spine.server.entity.EventPlayer.forTransactionOf"]},{"name":"static EventReactorClass<S> asReactorClass<S extends EventReactor>(Class<S> cls)","description":"io.spine.server.event.model.EventReactorClass.asReactorClass","location":"server/io.spine.server.event.model/-event-reactor-class/as-reactor-class.html","searchKeys":["asReactorClass","static EventReactorClass<S> asReactorClass<S extends EventReactor>(Class<S> cls)","io.spine.server.event.model.EventReactorClass.asReactorClass"]},{"name":"static EventRoute<I, EventMessage> byFirstMessageField<I>(Class<I> idClass)","description":"io.spine.server.route.EventRoute.byFirstMessageField","location":"server/io.spine.server.route/-event-route/by-first-message-field.html","searchKeys":["byFirstMessageField","static EventRoute<I, EventMessage> byFirstMessageField<I>(Class<I> idClass)","io.spine.server.route.EventRoute.byFirstMessageField"]},{"name":"static EventRoute<I, EventMessage> byProducerId<I>()","description":"io.spine.server.route.EventRoute.byProducerId","location":"server/io.spine.server.route/-event-route/by-producer-id.html","searchKeys":["byProducerId","static EventRoute<I, EventMessage> byProducerId<I>()","io.spine.server.route.EventRoute.byProducerId"]},{"name":"static EventRouting<I> withDefault<I>(EventRoute<I, EventMessage> defaultRoute)","description":"io.spine.server.route.EventRouting.withDefault","location":"server/io.spine.server.route/-event-routing/with-default.html","searchKeys":["withDefault","static EventRouting<I> withDefault<I>(EventRoute<I, EventMessage> defaultRoute)","io.spine.server.route.EventRouting.withDefault"]},{"name":"static EventRouting<I> withDefaultByProducerId<I>()","description":"io.spine.server.route.EventRouting.withDefaultByProducerId","location":"server/io.spine.server.route/-event-routing/with-default-by-producer-id.html","searchKeys":["withDefaultByProducerId","static EventRouting<I> withDefaultByProducerId<I>()","io.spine.server.route.EventRouting.withDefaultByProducerId"]},{"name":"static EventSubscriberClass<S> asEventSubscriberClass<S extends EventSubscriber>(Class<S> cls)","description":"io.spine.server.event.model.EventSubscriberClass.asEventSubscriberClass","location":"server/io.spine.server.event.model/-event-subscriber-class/as-event-subscriber-class.html","searchKeys":["asEventSubscriberClass","static EventSubscriberClass<S> asEventSubscriberClass<S extends EventSubscriber>(Class<S> cls)","io.spine.server.event.model.EventSubscriberClass.asEventSubscriberClass"]},{"name":"static EventWhiteList allowEvents(Array<Class<? extends EventMessage>> eventClasses)","description":"io.spine.server.entity.EventWhiteList.allowEvents","location":"server/io.spine.server.entity/-event-white-list/allow-events.html","searchKeys":["allowEvents","static EventWhiteList allowEvents(Array<Class<? extends EventMessage>> eventClasses)","io.spine.server.entity.EventWhiteList.allowEvents"]},{"name":"static ExternalMessageClass of(MessageClass<?> messageClass)","description":"io.spine.server.integration.ExternalMessageClass.of","location":"server/io.spine.server.integration/-external-message-class/of.html","searchKeys":["of","static ExternalMessageClass of(MessageClass<?> messageClass)","io.spine.server.integration.ExternalMessageClass.of"]},{"name":"static ExternalMessageEnvelope of(ExternalMessage externalMessage, Message originalMessage)","description":"io.spine.server.integration.ExternalMessageEnvelope.of","location":"server/io.spine.server.integration/-external-message-envelope/of.html","searchKeys":["of","static ExternalMessageEnvelope of(ExternalMessage externalMessage, Message originalMessage)","io.spine.server.integration.ExternalMessageEnvelope.of"]},{"name":"static ExternalMessage of(Command command, BoundedContextName origin)","description":"io.spine.server.integration.ExternalMessages.of","location":"server/io.spine.server.integration/-external-messages/of.html","searchKeys":["of","static ExternalMessage of(Command command, BoundedContextName origin)","io.spine.server.integration.ExternalMessages.of"]},{"name":"static ExternalMessage of(Event event, BoundedContextName origin)","description":"io.spine.server.integration.ExternalMessages.of","location":"server/io.spine.server.integration/-external-messages/of.html","searchKeys":["of","static ExternalMessage of(Event event, BoundedContextName origin)","io.spine.server.integration.ExternalMessages.of"]},{"name":"static GrpcContainer.Builder atPort(int port)","description":"io.spine.server.GrpcContainer.atPort","location":"server/io.spine.server/-grpc-container/at-port.html","searchKeys":["atPort","static GrpcContainer.Builder atPort(int port)","io.spine.server.GrpcContainer.atPort"]},{"name":"static GrpcContainer.Builder inProcess(String serverName)","description":"io.spine.server.GrpcContainer.inProcess","location":"server/io.spine.server/-grpc-container/in-process.html","searchKeys":["inProcess","static GrpcContainer.Builder inProcess(String serverName)","io.spine.server.GrpcContainer.inProcess"]},{"name":"static GrpcContainer.Builder newBuilder()","description":"io.spine.server.GrpcContainer.newBuilder","location":"server/io.spine.server/-grpc-container/new-builder.html","searchKeys":["newBuilder","static GrpcContainer.Builder newBuilder()","io.spine.server.GrpcContainer.newBuilder"]},{"name":"static HandlerMap<M, P, H> create<M extends MessageClass<?>, P extends MessageClass<?>, H extends HandlerMethod<? extends Object, M, ? extends Object, P>>(Class<? extends Object> declaringClass, MethodSignature<H, ? extends Object> signature)","description":"io.spine.server.model.HandlerMap.create","location":"server/io.spine.server.model/-handler-map/create.html","searchKeys":["create","static HandlerMap<M, P, H> create<M extends MessageClass<?>, P extends MessageClass<?>, H extends HandlerMethod<? extends Object, M, ? extends Object, P>>(Class<? extends Object> declaringClass, MethodSignature<H, ? extends Object> signature)","io.spine.server.model.HandlerMap.create"]},{"name":"static IdInTenant<I> of<I>(I id, TenantId tenant)","description":"io.spine.server.tenant.IdInTenant.of","location":"server/io.spine.server.tenant/-id-in-tenant/of.html","searchKeys":["of","static IdInTenant<I> of<I>(I id, TenantId tenant)","io.spine.server.tenant.IdInTenant.of"]},{"name":"static IdInTenant<I> of<I>(I id, boolean multitenant)","description":"io.spine.server.tenant.IdInTenant.of","location":"server/io.spine.server.tenant/-id-in-tenant/of.html","searchKeys":["of","static IdInTenant<I> of<I>(I id, boolean multitenant)","io.spine.server.tenant.IdInTenant.of"]},{"name":"static ImmutableSet<Class<? extends Message>> messagesFitting(TypeToken<?> type)","description":"io.spine.server.model.TypeMatcher.messagesFitting","location":"server/io.spine.server.model/-type-matcher/messages-fitting.html","searchKeys":["messagesFitting","static ImmutableSet<Class<? extends Message>> messagesFitting(TypeToken<?> type)","io.spine.server.model.TypeMatcher.messagesFitting"]},{"name":"static ImmutableSet<CommandClass> setOf(Array<Class<? extends CommandMessage>> classes)","description":"io.spine.server.type.CommandClass.setOf","location":"server/io.spine.server.type/-command-class/set-of.html","searchKeys":["setOf","static ImmutableSet<CommandClass> setOf(Array<Class<? extends CommandMessage>> classes)","io.spine.server.type.CommandClass.setOf"]},{"name":"static ImmutableSet<CommandClass> setOf(Iterable<Class<? extends CommandMessage>> classes)","description":"io.spine.server.type.CommandClass.setOf","location":"server/io.spine.server.type/-command-class/set-of.html","searchKeys":["setOf","static ImmutableSet<CommandClass> setOf(Iterable<Class<? extends CommandMessage>> classes)","io.spine.server.type.CommandClass.setOf"]},{"name":"static ImmutableSet<EventClass> emptySet()","description":"io.spine.server.type.EventClass.emptySet","location":"server/io.spine.server.type/-event-class/empty-set.html","searchKeys":["emptySet","static ImmutableSet<EventClass> emptySet()","io.spine.server.type.EventClass.emptySet"]},{"name":"static ImmutableSet<EventClass> setOf(Array<Class<? extends EventMessage>> classes)","description":"io.spine.server.type.EventClass.setOf","location":"server/io.spine.server.type/-event-class/set-of.html","searchKeys":["setOf","static ImmutableSet<EventClass> setOf(Array<Class<? extends EventMessage>> classes)","io.spine.server.type.EventClass.setOf"]},{"name":"static ImmutableSet<EventClass> setOf(Class<? extends EventMessage> cls)","description":"io.spine.server.type.EventClass.setOf","location":"server/io.spine.server.type/-event-class/set-of.html","searchKeys":["setOf","static ImmutableSet<EventClass> setOf(Class<? extends EventMessage> cls)","io.spine.server.type.EventClass.setOf"]},{"name":"static ImmutableSet<EventClass> setOf(Iterable<Class<? extends EventMessage>> classes)","description":"io.spine.server.type.EventClass.setOf","location":"server/io.spine.server.type/-event-class/set-of.html","searchKeys":["setOf","static ImmutableSet<EventClass> setOf(Iterable<Class<? extends EventMessage>> classes)","io.spine.server.type.EventClass.setOf"]},{"name":"static ImportBus.Builder newBuilder()","description":"io.spine.server.aggregate.ImportBus.newBuilder","location":"server/io.spine.server.aggregate/-import-bus/new-builder.html","searchKeys":["newBuilder","static ImportBus.Builder newBuilder()","io.spine.server.aggregate.ImportBus.newBuilder"]},{"name":"static InMemoryStorageFactory newInstance()","description":"io.spine.server.storage.memory.InMemoryStorageFactory.newInstance","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/new-instance.html","searchKeys":["newInstance","static InMemoryStorageFactory newInstance()","io.spine.server.storage.memory.InMemoryStorageFactory.newInstance"]},{"name":"static InMemoryTransportFactory newInstance()","description":"io.spine.server.transport.memory.InMemoryTransportFactory.newInstance","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/new-instance.html","searchKeys":["newInstance","static InMemoryTransportFactory newInstance()","io.spine.server.transport.memory.InMemoryTransportFactory.newInstance"]},{"name":"static InboxMessageId generateIdWith(ShardIndex index)","description":"io.spine.server.delivery.InboxMessageMixin.generateIdWith","location":"server/io.spine.server.delivery/-inbox-message-mixin/generate-id-with.html","searchKeys":["generateIdWith","static InboxMessageId generateIdWith(ShardIndex index)","io.spine.server.delivery.InboxMessageMixin.generateIdWith"]},{"name":"static InvalidCommandException inapplicableTenantId(Command command)","description":"io.spine.server.commandbus.InvalidCommandException.inapplicableTenantId","location":"server/io.spine.server.commandbus/-invalid-command-exception/inapplicable-tenant-id.html","searchKeys":["inapplicableTenantId","static InvalidCommandException inapplicableTenantId(Command command)","io.spine.server.commandbus.InvalidCommandException.inapplicableTenantId"]},{"name":"static InvalidCommandException missingTenantId(Command command)","description":"io.spine.server.commandbus.InvalidCommandException.missingTenantId","location":"server/io.spine.server.commandbus/-invalid-command-exception/missing-tenant-id.html","searchKeys":["missingTenantId","static InvalidCommandException missingTenantId(Command command)","io.spine.server.commandbus.InvalidCommandException.missingTenantId"]},{"name":"static InvalidCommandException onConstraintViolations(Command command, Iterable<ConstraintViolation> violations)","description":"io.spine.server.commandbus.InvalidCommandException.onConstraintViolations","location":"server/io.spine.server.commandbus/-invalid-command-exception/on-constraint-violations.html","searchKeys":["onConstraintViolations","static InvalidCommandException onConstraintViolations(Command command, Iterable<ConstraintViolation> violations)","io.spine.server.commandbus.InvalidCommandException.onConstraintViolations"]},{"name":"static InvalidEntityStateException onConstraintViolations(EntityState state, Iterable<ConstraintViolation> violations)","description":"io.spine.server.entity.InvalidEntityStateException.onConstraintViolations","location":"server/io.spine.server.entity/-invalid-entity-state-exception/on-constraint-violations.html","searchKeys":["onConstraintViolations","static InvalidEntityStateException onConstraintViolations(EntityState state, Iterable<ConstraintViolation> violations)","io.spine.server.entity.InvalidEntityStateException.onConstraintViolations"]},{"name":"static InvalidEventException onConstraintViolations(EventMessage eventMsg, Iterable<ConstraintViolation> violations)","description":"io.spine.server.event.InvalidEventException.onConstraintViolations","location":"server/io.spine.server.event/-invalid-event-exception/on-constraint-violations.html","searchKeys":["onConstraintViolations","static InvalidEventException onConstraintViolations(EventMessage eventMsg, Iterable<ConstraintViolation> violations)","io.spine.server.event.InvalidEventException.onConstraintViolations"]},{"name":"static LifecycleFlagField valueOf(String name)","description":"io.spine.server.storage.LifecycleFlagField.valueOf","location":"server/io.spine.server.storage/-lifecycle-flag-field/value-of.html","searchKeys":["valueOf","static LifecycleFlagField valueOf(String name)","io.spine.server.storage.LifecycleFlagField.valueOf"]},{"name":"static Map<String, Value> commandTypeAttribute(Message commandMessage)","description":"io.spine.server.commandbus.CommandException.commandTypeAttribute","location":"server/io.spine.server.commandbus/-command-exception/command-type-attribute.html","searchKeys":["commandTypeAttribute","static Map<String, Value> commandTypeAttribute(Message commandMessage)","io.spine.server.commandbus.CommandException.commandTypeAttribute"]},{"name":"static Map<String, Value> eventTypeAttribute(Message eventMessage)","description":"io.spine.server.event.EventException.eventTypeAttribute","location":"server/io.spine.server.event/-event-exception/event-type-attribute.html","searchKeys":["eventTypeAttribute","static Map<String, Value> eventTypeAttribute(Message eventMessage)","io.spine.server.event.EventException.eventTypeAttribute"]},{"name":"static MatchCriterion valueOf(String name)","description":"io.spine.server.model.MatchCriterion.valueOf","location":"server/io.spine.server.model/-match-criterion/value-of.html","searchKeys":["valueOf","static MatchCriterion valueOf(String name)","io.spine.server.model.MatchCriterion.valueOf"]},{"name":"static MessageId byString(String value)","description":"io.spine.server.Identity.byString","location":"server/io.spine.server/-identity/by-string.html","searchKeys":["byString","static MessageId byString(String value)","io.spine.server.Identity.byString"]},{"name":"static MessageId ofEntity(Object entityId, TypeUrl entityType)","description":"io.spine.server.Identity.ofEntity","location":"server/io.spine.server/-identity/of-entity.html","searchKeys":["ofEntity","static MessageId ofEntity(Object entityId, TypeUrl entityType)","io.spine.server.Identity.ofEntity"]},{"name":"static MessageId ofProducer(Any producerId)","description":"io.spine.server.Identity.ofProducer","location":"server/io.spine.server/-identity/of-producer.html","searchKeys":["ofProducer","static MessageId ofProducer(Any producerId)","io.spine.server.Identity.ofProducer"]},{"name":"static MessageId ofSingleton(Class<? extends Object> singletonClass)","description":"io.spine.server.Identity.ofSingleton","location":"server/io.spine.server/-identity/of-singleton.html","searchKeys":["ofSingleton","static MessageId ofSingleton(Class<? extends Object> singletonClass)","io.spine.server.Identity.ofSingleton"]},{"name":"static MethodAccessChecker forMethod(Method method)","description":"io.spine.server.model.MethodAccessChecker.forMethod","location":"server/io.spine.server.model/-method-access-checker/for-method.html","searchKeys":["forMethod","static MethodAccessChecker forMethod(Method method)","io.spine.server.model.MethodAccessChecker.forMethod"]},{"name":"static MethodParams of(Method method)","description":"io.spine.server.model.MethodParams.of","location":"server/io.spine.server.model/-method-params/of.html","searchKeys":["of","static MethodParams of(Method method)","io.spine.server.model.MethodParams.of"]},{"name":"static MethodParams of(SubscriberMethod method)","description":"io.spine.server.model.MethodParams.of","location":"server/io.spine.server.model/-method-params/of.html","searchKeys":["of","static MethodParams of(SubscriberMethod method)","io.spine.server.model.MethodParams.of"]},{"name":"static ModelClass<T> get<T, M extends ModelClass<T>>(Class<T> rawClass, Class<M> requestedModelClass, Supplier<ModelClass<T>> supplier)","description":"io.spine.server.model.ModelClass.get","location":"server/io.spine.server.model/-model-class/get.html","searchKeys":["get","static ModelClass<T> get<T, M extends ModelClass<T>>(Class<T> rawClass, Class<M> requestedModelClass, Supplier<ModelClass<T>> supplier)","io.spine.server.model.ModelClass.get"]},{"name":"static M applyMask<M extends Message>(FieldMask mask, M message)","description":"io.spine.server.entity.FieldMasks.applyMask","location":"server/io.spine.server.entity/-field-masks/apply-mask.html","searchKeys":["applyMask","static M applyMask<M extends Message>(FieldMask mask, M message)","io.spine.server.entity.FieldMasks.applyMask"]},{"name":"static NoOpSystemClient valueOf(String name)","description":"io.spine.system.server.NoOpSystemClient.valueOf","location":"server/io.spine.system.server/-no-op-system-client/value-of.html","searchKeys":["valueOf","static NoOpSystemClient valueOf(String name)","io.spine.system.server.NoOpSystemClient.valueOf"]},{"name":"static NoOpSystemReadSide valueOf(String name)","description":"io.spine.system.server.NoOpSystemReadSide.valueOf","location":"server/io.spine.system.server/-no-op-system-read-side/value-of.html","searchKeys":["valueOf","static NoOpSystemReadSide valueOf(String name)","io.spine.system.server.NoOpSystemReadSide.valueOf"]},{"name":"static NoOpSystemWriteSide valueOf(String name)","description":"io.spine.system.server.NoOpSystemWriteSide.valueOf","location":"server/io.spine.system.server/-no-op-system-write-side/value-of.html","searchKeys":["valueOf","static NoOpSystemWriteSide valueOf(String name)","io.spine.system.server.NoOpSystemWriteSide.valueOf"]},{"name":"static Optional<EntityVisibility> of(Class<? extends EntityState> stateClass)","description":"io.spine.server.entity.EntityVisibility.of","location":"server/io.spine.server.entity/-entity-visibility/of.html","searchKeys":["of","static Optional<EntityVisibility> of(Class<? extends EntityState> stateClass)","io.spine.server.entity.EntityVisibility.of"]},{"name":"static Pair<A, B> of<A extends Message, B extends Message>(A a, B b)","description":"io.spine.server.tuple.Pair.of","location":"server/io.spine.server.tuple/-pair/of.html","searchKeys":["of","static Pair<A, B> of<A extends Message, B extends Message>(A a, B b)","io.spine.server.tuple.Pair.of"]},{"name":"static Pair<A, B> withEither<A extends Message, B extends Either>(A a, B b)","description":"io.spine.server.tuple.Pair.withEither","location":"server/io.spine.server.tuple/-pair/with-either.html","searchKeys":["withEither","static Pair<A, B> withEither<A extends Message, B extends Either>(A a, B b)","io.spine.server.tuple.Pair.withEither"]},{"name":"static Pair<A, Optional<B>> withNullable<A extends Message, B extends Message>(A a, B b)","description":"io.spine.server.tuple.Pair.withNullable","location":"server/io.spine.server.tuple/-pair/with-nullable.html","searchKeys":["withNullable","static Pair<A, Optional<B>> withNullable<A extends Message, B extends Message>(A a, B b)","io.spine.server.tuple.Pair.withNullable"]},{"name":"static Pair<A, Optional<B>> withOptional<A extends Message, B extends Message>(A a, Optional<B> b)","description":"io.spine.server.tuple.Pair.withOptional","location":"server/io.spine.server.tuple/-pair/with-optional.html","searchKeys":["withOptional","static Pair<A, Optional<B>> withOptional<A extends Message, B extends Message>(A a, Optional<B> b)","io.spine.server.tuple.Pair.withOptional"]},{"name":"static ProcessManagerClass<P> asProcessManagerClass<P extends ProcessManager>(Class<P> cls)","description":"io.spine.server.procman.model.ProcessManagerClass.asProcessManagerClass","location":"server/io.spine.server.procman.model/-process-manager-class/as-process-manager-class.html","searchKeys":["asProcessManagerClass","static ProcessManagerClass<P> asProcessManagerClass<P extends ProcessManager>(Class<P> cls)","io.spine.server.procman.model.ProcessManagerClass.asProcessManagerClass"]},{"name":"static ProjectionClass<P> asProjectionClass<P extends Projection>(Class<P> cls)","description":"io.spine.server.projection.model.ProjectionClass.asProjectionClass","location":"server/io.spine.server.projection.model/-projection-class/as-projection-class.html","searchKeys":["asProjectionClass","static ProjectionClass<P> asProjectionClass<P extends Projection>(Class<P> cls)","io.spine.server.projection.model.ProjectionClass.asProjectionClass"]},{"name":"static ProjectionTransaction<I, S, B> start<I, S extends EntityState, B extends ValidatingBuilder<S>>(Projection<I, S, B> projection)","description":"io.spine.server.projection.ProjectionTransaction.start","location":"server/io.spine.server.projection/-projection-transaction/start.html","searchKeys":["start","static ProjectionTransaction<I, S, B> start<I, S extends EntityState, B extends ValidatingBuilder<S>>(Projection<I, S, B> projection)","io.spine.server.projection.ProjectionTransaction.start"]},{"name":"static Quartet<A, B, C, D> of<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","description":"io.spine.server.tuple.Quartet.of","location":"server/io.spine.server.tuple/-quartet/of.html","searchKeys":["of","static Quartet<A, B, C, D> of<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","io.spine.server.tuple.Quartet.of"]},{"name":"static Quartet<A, B, C, Optional<D>> withNullable<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","description":"io.spine.server.tuple.Quartet.withNullable","location":"server/io.spine.server.tuple/-quartet/with-nullable.html","searchKeys":["withNullable","static Quartet<A, B, C, Optional<D>> withNullable<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","io.spine.server.tuple.Quartet.withNullable"]},{"name":"static Quartet<A, B, Optional<C>, Optional<D>> withNullable2<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","description":"io.spine.server.tuple.Quartet.withNullable2","location":"server/io.spine.server.tuple/-quartet/with-nullable2.html","searchKeys":["withNullable2","static Quartet<A, B, Optional<C>, Optional<D>> withNullable2<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","io.spine.server.tuple.Quartet.withNullable2"]},{"name":"static Quartet<A, Optional<B>, Optional<C>, Optional<D>> withNullable3<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","description":"io.spine.server.tuple.Quartet.withNullable3","location":"server/io.spine.server.tuple/-quartet/with-nullable3.html","searchKeys":["withNullable3","static Quartet<A, Optional<B>, Optional<C>, Optional<D>> withNullable3<A extends Message, B extends Message, C extends Message, D extends Message>(A a, B b, C c, D d)","io.spine.server.tuple.Quartet.withNullable3"]},{"name":"static QueryParameters.Builder newBuilder()","description":"io.spine.server.entity.storage.QueryParameters.newBuilder","location":"server/io.spine.server.entity.storage/-query-parameters/new-builder.html","searchKeys":["newBuilder","static QueryParameters.Builder newBuilder()","io.spine.server.entity.storage.QueryParameters.newBuilder"]},{"name":"static QueryParameters.Builder newBuilder(QueryParameters parameters)","description":"io.spine.server.entity.storage.QueryParameters.newBuilder","location":"server/io.spine.server.entity.storage/-query-parameters/new-builder.html","searchKeys":["newBuilder","static QueryParameters.Builder newBuilder(QueryParameters parameters)","io.spine.server.entity.storage.QueryParameters.newBuilder"]},{"name":"static QueryParameters activeEntityQueryParams(RecordStorage<? extends Object> storage)","description":"io.spine.server.entity.storage.QueryParameters.activeEntityQueryParams","location":"server/io.spine.server.entity.storage/-query-parameters/active-entity-query-params.html","searchKeys":["activeEntityQueryParams","static QueryParameters activeEntityQueryParams(RecordStorage<? extends Object> storage)","io.spine.server.entity.storage.QueryParameters.activeEntityQueryParams"]},{"name":"static QueryService.Builder newBuilder()","description":"io.spine.server.QueryService.newBuilder","location":"server/io.spine.server/-query-service/new-builder.html","searchKeys":["newBuilder","static QueryService.Builder newBuilder()","io.spine.server.QueryService.newBuilder"]},{"name":"static QueryService withSingle(BoundedContext context)","description":"io.spine.server.QueryService.withSingle","location":"server/io.spine.server/-query-service/with-single.html","searchKeys":["withSingle","static QueryService withSingle(BoundedContext context)","io.spine.server.QueryService.withSingle"]},{"name":"static Quintet<A, B, C, D, E> of<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","description":"io.spine.server.tuple.Quintet.of","location":"server/io.spine.server.tuple/-quintet/of.html","searchKeys":["of","static Quintet<A, B, C, D, E> of<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","io.spine.server.tuple.Quintet.of"]},{"name":"static Quintet<A, B, C, D, Optional<E>> withNullable<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","description":"io.spine.server.tuple.Quintet.withNullable","location":"server/io.spine.server.tuple/-quintet/with-nullable.html","searchKeys":["withNullable","static Quintet<A, B, C, D, Optional<E>> withNullable<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","io.spine.server.tuple.Quintet.withNullable"]},{"name":"static Quintet<A, B, C, Optional<D>, Optional<E>> withNullable2<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","description":"io.spine.server.tuple.Quintet.withNullable2","location":"server/io.spine.server.tuple/-quintet/with-nullable2.html","searchKeys":["withNullable2","static Quintet<A, B, C, Optional<D>, Optional<E>> withNullable2<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","io.spine.server.tuple.Quintet.withNullable2"]},{"name":"static Quintet<A, B, Optional<C>, Optional<D>, Optional<E>> withNullable3<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","description":"io.spine.server.tuple.Quintet.withNullable3","location":"server/io.spine.server.tuple/-quintet/with-nullable3.html","searchKeys":["withNullable3","static Quintet<A, B, Optional<C>, Optional<D>, Optional<E>> withNullable3<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","io.spine.server.tuple.Quintet.withNullable3"]},{"name":"static Quintet<A, Optional<B>, Optional<C>, Optional<D>, Optional<E>> withNullable4<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","description":"io.spine.server.tuple.Quintet.withNullable4","location":"server/io.spine.server.tuple/-quintet/with-nullable4.html","searchKeys":["withNullable4","static Quintet<A, Optional<B>, Optional<C>, Optional<D>, Optional<E>> withNullable4<A extends Message, B extends Message, C extends Message, D extends Message, E extends Message>(A a, B b, C c, D d, E e)","io.spine.server.tuple.Quintet.withNullable4"]},{"name":"static ReadSideFunction delegatingTo(SystemReadSide delegate)","description":"io.spine.system.server.ReadSideFunction.delegatingTo","location":"server/io.spine.system.server/-read-side-function/delegating-to.html","searchKeys":["delegatingTo","static ReadSideFunction delegatingTo(SystemReadSide delegate)","io.spine.system.server.ReadSideFunction.delegatingTo"]},{"name":"static RejectionEnvelope from(CommandEnvelope origin, Throwable throwable)","description":"io.spine.server.event.RejectionEnvelope.from","location":"server/io.spine.server.event/-rejection-envelope/from.html","searchKeys":["from","static RejectionEnvelope from(CommandEnvelope origin, Throwable throwable)","io.spine.server.event.RejectionEnvelope.from"]},{"name":"static RejectionEnvelope from(EventEnvelope event)","description":"io.spine.server.event.RejectionEnvelope.from","location":"server/io.spine.server.event/-rejection-envelope/from.html","searchKeys":["from","static RejectionEnvelope from(EventEnvelope event)","io.spine.server.event.RejectionEnvelope.from"]},{"name":"static Repository<I, E> of<I, E extends Entity<I, ? extends Object>>(Class<E> cls)","description":"io.spine.server.DefaultRepository.of","location":"server/io.spine.server/-default-repository/of.html","searchKeys":["of","static Repository<I, E> of<I, E extends Entity<I, ? extends Object>>(Class<E> cls)","io.spine.server.DefaultRepository.of"]},{"name":"static ReturnTypes onlyVoid()","description":"io.spine.server.model.ReturnTypes.onlyVoid","location":"server/io.spine.server.model/-return-types/only-void.html","searchKeys":["onlyVoid","static ReturnTypes onlyVoid()","io.spine.server.model.ReturnTypes.onlyVoid"]},{"name":"static Server.Builder atPort(int port)","description":"io.spine.server.Server.atPort","location":"server/io.spine.server/-server/at-port.html","searchKeys":["atPort","static Server.Builder atPort(int port)","io.spine.server.Server.atPort"]},{"name":"static Server.Builder inProcess(String serverName)","description":"io.spine.server.Server.inProcess","location":"server/io.spine.server/-server/in-process.html","searchKeys":["inProcess","static Server.Builder inProcess(String serverName)","io.spine.server.Server.inProcess"]},{"name":"static Server.Builder newBuilder()","description":"io.spine.server.Server.newBuilder","location":"server/io.spine.server/-server/new-builder.html","searchKeys":["newBuilder","static Server.Builder newBuilder()","io.spine.server.Server.newBuilder"]},{"name":"static ServerEnvironment.TypeConfigurator when(Class<? extends EnvironmentType> type)","description":"io.spine.server.ServerEnvironment.when","location":"server/io.spine.server/-server-environment/when.html","searchKeys":["when","static ServerEnvironment.TypeConfigurator when(Class<? extends EnvironmentType> type)","io.spine.server.ServerEnvironment.when"]},{"name":"static ServerEnvironment instance()","description":"io.spine.server.ServerEnvironment.instance","location":"server/io.spine.server/-server-environment/instance.html","searchKeys":["instance","static ServerEnvironment instance()","io.spine.server.ServerEnvironment.instance"]},{"name":"static Set<ExternalMessageClass> fromEventClasses(Set<EventClass> classes)","description":"io.spine.server.integration.ExternalMessageClass.fromEventClasses","location":"server/io.spine.server.integration/-external-message-class/from-event-classes.html","searchKeys":["fromEventClasses","static Set<ExternalMessageClass> fromEventClasses(Set<EventClass> classes)","io.spine.server.integration.ExternalMessageClass.fromEventClasses"]},{"name":"static Set<I> noTargets<I>()","description":"io.spine.server.route.EventRoute.noTargets","location":"server/io.spine.server.route/-event-route/no-targets.html","searchKeys":["noTargets","static Set<I> noTargets<I>()","io.spine.server.route.EventRoute.noTargets"]},{"name":"static Set<I> withId<I>(I id)","description":"io.spine.server.route.EventRoute.withId","location":"server/io.spine.server.route/-event-route/with-id.html","searchKeys":["withId","static Set<I> withId<I>(I id)","io.spine.server.route.EventRoute.withId"]},{"name":"static ShardIndex newIndex(int indexValue, int ofTotal)","description":"io.spine.server.delivery.DeliveryStrategy.newIndex","location":"server/io.spine.server.delivery/-delivery-strategy/new-index.html","searchKeys":["newIndex","static ShardIndex newIndex(int indexValue, int ofTotal)","io.spine.server.delivery.DeliveryStrategy.newIndex"]},{"name":"static SingleThreadInMemTransportFactory newInstance()","description":"io.spine.server.transport.memory.SingleThreadInMemTransportFactory.newInstance","location":"server/io.spine.server.transport.memory/-single-thread-in-mem-transport-factory/new-instance.html","searchKeys":["newInstance","static SingleThreadInMemTransportFactory newInstance()","io.spine.server.transport.memory.SingleThreadInMemTransportFactory.newInstance"]},{"name":"static Stand.Builder newBuilder()","description":"io.spine.server.stand.Stand.newBuilder","location":"server/io.spine.server.stand/-stand/new-builder.html","searchKeys":["newBuilder","static Stand.Builder newBuilder()","io.spine.server.stand.Stand.newBuilder"]},{"name":"static StateClass from(Class<? extends EntityState> value)","description":"io.spine.server.entity.model.StateClass.from","location":"server/io.spine.server.entity.model/-state-class/from.html","searchKeys":["from","static StateClass from(Class<? extends EntityState> value)","io.spine.server.entity.model.StateClass.from"]},{"name":"static StateClass of(EntityState state)","description":"io.spine.server.entity.model.StateClass.of","location":"server/io.spine.server.entity.model/-state-class/of.html","searchKeys":["of","static StateClass of(EntityState state)","io.spine.server.entity.model.StateClass.of"]},{"name":"static StateClass of(Entity entity)","description":"io.spine.server.entity.model.StateClass.of","location":"server/io.spine.server.entity.model/-state-class/of.html","searchKeys":["of","static StateClass of(Entity entity)","io.spine.server.entity.model.StateClass.of"]},{"name":"static StateField valueOf(String name)","description":"io.spine.server.storage.StateField.valueOf","location":"server/io.spine.server.storage/-state-field/value-of.html","searchKeys":["valueOf","static StateField valueOf(String name)","io.spine.server.storage.StateField.valueOf"]},{"name":"static StateUpdateRouting<I> newInstance<I>(Class<I> idClass)","description":"io.spine.server.route.StateUpdateRouting.newInstance","location":"server/io.spine.server.route/-state-update-routing/new-instance.html","searchKeys":["newInstance","static StateUpdateRouting<I> newInstance<I>(Class<I> idClass)","io.spine.server.route.StateUpdateRouting.newInstance"]},{"name":"static StatusRuntimeException invalidArgumentWithCause(MessageError cause)","description":"io.spine.server.transport.Statuses.invalidArgumentWithCause","location":"server/io.spine.server.transport/-statuses/invalid-argument-with-cause.html","searchKeys":["invalidArgumentWithCause","static StatusRuntimeException invalidArgumentWithCause(MessageError cause)","io.spine.server.transport.Statuses.invalidArgumentWithCause"]},{"name":"static StorageFactory defaultStorageFactory()","description":"io.spine.server.entity.Repository.defaultStorageFactory","location":"server/io.spine.server.entity/-repository/default-storage-factory.html","searchKeys":["defaultStorageFactory","static StorageFactory defaultStorageFactory()","io.spine.server.entity.Repository.defaultStorageFactory"]},{"name":"static StorageSpec<I> of<I>(BoundedContextName context, TypeUrl entityStateUrl, Class<I> idClass)","description":"io.spine.server.storage.memory.StorageSpec.of","location":"server/io.spine.server.storage.memory/-storage-spec/of.html","searchKeys":["of","static StorageSpec<I> of<I>(BoundedContextName context, TypeUrl entityStateUrl, Class<I> idClass)","io.spine.server.storage.memory.StorageSpec.of"]},{"name":"static String messageFormat(String format, Command command)","description":"io.spine.server.commandbus.CommandException.messageFormat","location":"server/io.spine.server.commandbus/-command-exception/message-format.html","searchKeys":["messageFormat","static String messageFormat(String format, Command command)","io.spine.server.commandbus.CommandException.messageFormat"]},{"name":"static SubscriptionCallback forwardingTo(StreamObserver<SubscriptionUpdate> observer)","description":"io.spine.server.stand.SubscriptionCallback.forwardingTo","location":"server/io.spine.server.stand/-subscription-callback/forwarding-to.html","searchKeys":["forwardingTo","static SubscriptionCallback forwardingTo(StreamObserver<SubscriptionUpdate> observer)","io.spine.server.stand.SubscriptionCallback.forwardingTo"]},{"name":"static SubscriptionService.Builder newBuilder()","description":"io.spine.server.SubscriptionService.newBuilder","location":"server/io.spine.server/-subscription-service/new-builder.html","searchKeys":["newBuilder","static SubscriptionService.Builder newBuilder()","io.spine.server.SubscriptionService.newBuilder"]},{"name":"static SubscriptionService withSingle(BoundedContext context)","description":"io.spine.server.SubscriptionService.withSingle","location":"server/io.spine.server/-subscription-service/with-single.html","searchKeys":["withSingle","static SubscriptionService withSingle(BoundedContext context)","io.spine.server.SubscriptionService.withSingle"]},{"name":"static Supplier<IllegalStateException> systemNotSet()","description":"io.spine.server.bus.BusBuilder.FieldCheck.systemNotSet","location":"server/io.spine.server.bus/-bus-builder/-field-check/system-not-set.html","searchKeys":["systemNotSet","static Supplier<IllegalStateException> systemNotSet()","io.spine.server.bus.BusBuilder.FieldCheck.systemNotSet"]},{"name":"static Supplier<IllegalStateException> tenantIndexNotSet()","description":"io.spine.server.bus.BusBuilder.FieldCheck.tenantIndexNotSet","location":"server/io.spine.server.bus/-bus-builder/-field-check/tenant-index-not-set.html","searchKeys":["tenantIndexNotSet","static Supplier<IllegalStateException> tenantIndexNotSet()","io.spine.server.bus.BusBuilder.FieldCheck.tenantIndexNotSet"]},{"name":"static SystemAwareStorageFactory wrap(StorageFactory factory)","description":"io.spine.server.storage.system.SystemAwareStorageFactory.wrap","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/wrap.html","searchKeys":["wrap","static SystemAwareStorageFactory wrap(StorageFactory factory)","io.spine.server.storage.system.SystemAwareStorageFactory.wrap"]},{"name":"static SystemContext newInstance(BoundedContextBuilder builder)","description":"io.spine.system.server.SystemContext.newInstance","location":"server/io.spine.system.server/-system-context/new-instance.html","searchKeys":["newInstance","static SystemContext newInstance(BoundedContextBuilder builder)","io.spine.system.server.SystemContext.newInstance"]},{"name":"static SystemReadSide newInstance(SystemContext context)","description":"io.spine.system.server.SystemReadSide.newInstance","location":"server/io.spine.system.server/-system-read-side/new-instance.html","searchKeys":["newInstance","static SystemReadSide newInstance(SystemContext context)","io.spine.system.server.SystemReadSide.newInstance"]},{"name":"static SystemSettings defaults()","description":"io.spine.system.server.SystemSettings.defaults","location":"server/io.spine.system.server/-system-settings/defaults.html","searchKeys":["defaults","static SystemSettings defaults()","io.spine.system.server.SystemSettings.defaults"]},{"name":"static SystemWriteSide newInstance(SystemContext system)","description":"io.spine.system.server.SystemWriteSide.newInstance","location":"server/io.spine.system.server/-system-write-side/new-instance.html","searchKeys":["newInstance","static SystemWriteSide newInstance(SystemContext system)","io.spine.system.server.SystemWriteSide.newInstance"]},{"name":"static S checkStorage<S extends AutoCloseable>(S storage)","description":"io.spine.server.entity.Repository.checkStorage","location":"server/io.spine.server.entity/-repository/check-storage.html","searchKeys":["checkStorage","static S checkStorage<S extends AutoCloseable>(S storage)","io.spine.server.entity.Repository.checkStorage"]},{"name":"static TenantAwareRunner with(TenantId tenant)","description":"io.spine.server.tenant.TenantAwareRunner.with","location":"server/io.spine.server.tenant/-tenant-aware-runner/with.html","searchKeys":["with","static TenantAwareRunner with(TenantId tenant)","io.spine.server.tenant.TenantAwareRunner.with"]},{"name":"static TenantAwareRunner withCurrentTenant(boolean multitenant)","description":"io.spine.server.tenant.TenantAwareRunner.withCurrentTenant","location":"server/io.spine.server.tenant/-tenant-aware-runner/with-current-tenant.html","searchKeys":["withCurrentTenant","static TenantAwareRunner withCurrentTenant(boolean multitenant)","io.spine.server.tenant.TenantAwareRunner.withCurrentTenant"]},{"name":"static TenantIndex createDefault()","description":"io.spine.server.tenant.TenantIndex.createDefault","location":"server/io.spine.server.tenant/-tenant-index/create-default.html","searchKeys":["createDefault","static TenantIndex createDefault()","io.spine.server.tenant.TenantIndex.createDefault"]},{"name":"static TenantIndex singleTenant()","description":"io.spine.server.tenant.TenantIndex.singleTenant","location":"server/io.spine.server.tenant/-tenant-index/single-tenant.html","searchKeys":["singleTenant","static TenantIndex singleTenant()","io.spine.server.tenant.TenantIndex.singleTenant"]},{"name":"static ThirdPartyContext multitenant(String name)","description":"io.spine.server.integration.ThirdPartyContext.multitenant","location":"server/io.spine.server.integration/-third-party-context/multitenant.html","searchKeys":["multitenant","static ThirdPartyContext multitenant(String name)","io.spine.server.integration.ThirdPartyContext.multitenant"]},{"name":"static ThirdPartyContext singleTenant(String name)","description":"io.spine.server.integration.ThirdPartyContext.singleTenant","location":"server/io.spine.server.integration/-third-party-context/single-tenant.html","searchKeys":["singleTenant","static ThirdPartyContext singleTenant(String name)","io.spine.server.integration.ThirdPartyContext.singleTenant"]},{"name":"static Triplet<A, B, C> of<A extends Message, B extends Message, C extends Message>(A a, B b, C c)","description":"io.spine.server.tuple.Triplet.of","location":"server/io.spine.server.tuple/-triplet/of.html","searchKeys":["of","static Triplet<A, B, C> of<A extends Message, B extends Message, C extends Message>(A a, B b, C c)","io.spine.server.tuple.Triplet.of"]},{"name":"static Triplet<A, B, Optional<C>> withNullable<A extends Message, B extends Message, C extends Message>(A a, B b, C c)","description":"io.spine.server.tuple.Triplet.withNullable","location":"server/io.spine.server.tuple/-triplet/with-nullable.html","searchKeys":["withNullable","static Triplet<A, B, Optional<C>> withNullable<A extends Message, B extends Message, C extends Message>(A a, B b, C c)","io.spine.server.tuple.Triplet.withNullable"]},{"name":"static Triplet<A, Optional<B>, Optional<C>> withNullable2<A extends Message, B extends Message, C extends Message>(A a, B b, C c)","description":"io.spine.server.tuple.Triplet.withNullable2","location":"server/io.spine.server.tuple/-triplet/with-nullable2.html","searchKeys":["withNullable2","static Triplet<A, Optional<B>, Optional<C>> withNullable2<A extends Message, B extends Message, C extends Message>(A a, B b, C c)","io.spine.server.tuple.Triplet.withNullable2"]},{"name":"static TypeMatcher classImplementing(Class<? extends Object> iface)","description":"io.spine.server.model.TypeMatcher.classImplementing","location":"server/io.spine.server.model/-type-matcher/class-implementing.html","searchKeys":["classImplementing","static TypeMatcher classImplementing(Class<? extends Object> iface)","io.spine.server.model.TypeMatcher.classImplementing"]},{"name":"static TypeMatcher exactly(Class<? extends Object> type)","description":"io.spine.server.model.TypeMatcher.exactly","location":"server/io.spine.server.model/-type-matcher/exactly.html","searchKeys":["exactly","static TypeMatcher exactly(Class<? extends Object> type)","io.spine.server.model.TypeMatcher.exactly"]},{"name":"static TypeToken<?> resolve(TypeToken<?> type, TypeVariable<? extends Class<? extends Object>> param)","description":"io.spine.server.model.TypeMatcher.resolve","location":"server/io.spine.server.model/-type-matcher/resolve.html","searchKeys":["resolve","static TypeToken<?> resolve(TypeToken<?> type, TypeVariable<? extends Class<? extends Object>> param)","io.spine.server.model.TypeMatcher.resolve"]},{"name":"static T get<T>(Either either, int index)","description":"io.spine.server.tuple.Either.get","location":"server/io.spine.server.tuple/-either/get.html","searchKeys":["get","static T get<T>(Either either, int index)","io.spine.server.tuple.Either.get"]},{"name":"static VersionField valueOf(String name)","description":"io.spine.server.storage.VersionField.valueOf","location":"server/io.spine.server.storage/-version-field/value-of.html","searchKeys":["valueOf","static VersionField valueOf(String name)","io.spine.server.storage.VersionField.valueOf"]},{"name":"static VersionIncrement fromEvent(EventEnvelope e)","description":"io.spine.server.entity.VersionIncrement.fromEvent","location":"server/io.spine.server.entity/-version-increment/from-event.html","searchKeys":["fromEvent","static VersionIncrement fromEvent(EventEnvelope e)","io.spine.server.entity.VersionIncrement.fromEvent"]},{"name":"static VersionIncrement sequentially(Transaction tx)","description":"io.spine.server.entity.VersionIncrement.sequentially","location":"server/io.spine.server.entity/-version-increment/sequentially.html","searchKeys":["sequentially","static VersionIncrement sequentially(Transaction tx)","io.spine.server.entity.VersionIncrement.sequentially"]},{"name":"static WriteSideFunction delegatingTo(SystemWriteSide delegate)","description":"io.spine.system.server.WriteSideFunction.delegatingTo","location":"server/io.spine.system.server/-write-side-function/delegating-to.html","searchKeys":["delegatingTo","static WriteSideFunction delegatingTo(SystemWriteSide delegate)","io.spine.system.server.WriteSideFunction.delegatingTo"]},{"name":"static boolean causedByRejection(Throwable throwable)","description":"io.spine.server.command.Rejections.causedByRejection","location":"server/io.spine.server.command/-rejections/caused-by-rejection.html","searchKeys":["causedByRejection","static boolean causedByRejection(Throwable throwable)","io.spine.server.command.Rejections.causedByRejection"]},{"name":"static boolean differs(TypeToken<?> type, TypeToken<?> expectedSuper)","description":"io.spine.server.model.TypeMatcher.differs","location":"server/io.spine.server.model/-type-matcher/differs.html","searchKeys":["differs","static boolean differs(TypeToken<?> type, TypeToken<?> expectedSuper)","io.spine.server.model.TypeMatcher.differs"]},{"name":"static boolean exists(CommandMessage commandMessage)","description":"io.spine.server.route.DefaultCommandRoute.exists","location":"server/io.spine.server.route/-default-command-route/exists.html","searchKeys":["exists","static boolean exists(CommandMessage commandMessage)","io.spine.server.route.DefaultCommandRoute.exists"]},{"name":"static boolean firstIsCommand(Method method)","description":"io.spine.server.model.MethodParams.firstIsCommand","location":"server/io.spine.server.model/-method-params/first-is-command.html","searchKeys":["firstIsCommand","static boolean firstIsCommand(Method method)","io.spine.server.model.MethodParams.firstIsCommand"]},{"name":"static boolean matchActualGenericsToOne(TypeToken<?> whoseGenerics, TypeToken<?> expectedGenericType)","description":"io.spine.server.model.TypeMatcher.matchActualGenericsToOne","location":"server/io.spine.server.model/-type-matcher/match-actual-generics-to-one.html","searchKeys":["matchActualGenericsToOne","static boolean matchActualGenericsToOne(TypeToken<?> whoseGenerics, TypeToken<?> expectedGenericType)","io.spine.server.model.TypeMatcher.matchActualGenericsToOne"]},{"name":"static boolean matchOneToOne(TypeToken<?> expected, TypeToken<?> actual)","description":"io.spine.server.model.TypeMatcher.matchOneToOne","location":"server/io.spine.server.model/-type-matcher/match-one-to-one.html","searchKeys":["matchOneToOne","static boolean matchOneToOne(TypeToken<?> expected, TypeToken<?> actual)","io.spine.server.model.TypeMatcher.matchOneToOne"]},{"name":"static boolean matches(TypeToken<?> expected, TypeToken<?> actual)","description":"io.spine.server.model.TypeMatcher.matches","location":"server/io.spine.server.model/-type-matcher/matches.html","searchKeys":["matches","static boolean matches(TypeToken<?> expected, TypeToken<?> actual)","io.spine.server.model.TypeMatcher.matches"]},{"name":"static synchronized Model inContextOf<T>(Class<? extends T> rawClass)","description":"io.spine.server.model.Model.inContextOf","location":"server/io.spine.server.model/-model/in-context-of.html","searchKeys":["inContextOf","static synchronized Model inContextOf<T>(Class<? extends T> rawClass)","io.spine.server.model.Model.inContextOf"]},{"name":"static synchronized void dropAllModels()","description":"io.spine.server.model.Model.dropAllModels","location":"server/io.spine.server.model/-model/drop-all-models.html","searchKeys":["dropAllModels","static synchronized void dropAllModels()","io.spine.server.model.Model.dropAllModels"]},{"name":"static void allowOnlyFrameworkServer()","description":"io.spine.server.security.Security.allowOnlyFrameworkServer","location":"server/io.spine.server.security/-security/allow-only-framework-server.html","searchKeys":["allowOnlyFrameworkServer","static void allowOnlyFrameworkServer()","io.spine.server.security.Security.allowOnlyFrameworkServer"]},{"name":"static void checkSet(Object field, Class<? extends Object> fieldType, String setterName)","description":"io.spine.server.bus.BusBuilder.FieldCheck.checkSet","location":"server/io.spine.server.bus/-bus-builder/-field-check/check-set.html","searchKeys":["checkSet","static void checkSet(Object field, Class<? extends Object> fieldType, String setterName)","io.spine.server.bus.BusBuilder.FieldCheck.checkSet"]},{"name":"static void clear()","description":"io.spine.server.tenant.TenantAwareTestSupport.clear","location":"server/io.spine.server.tenant/-tenant-aware-test-support/clear.html","searchKeys":["clear","static void clear()","io.spine.server.tenant.TenantAwareTestSupport.clear"]},{"name":"static void inject(TenantId tenantId)","description":"io.spine.server.tenant.TenantAwareTestSupport.inject","location":"server/io.spine.server.tenant/-tenant-aware-test-support/inject.html","searchKeys":["inject","static void inject(TenantId tenantId)","io.spine.server.tenant.TenantAwareTestSupport.inject"]},{"name":"synchronized Delivery delivery()","description":"io.spine.server.ServerEnvironment.delivery","location":"server/io.spine.server/-server-environment/delivery.html","searchKeys":["delivery","synchronized Delivery delivery()","io.spine.server.ServerEnvironment.delivery"]},{"name":"synchronized E load(I id)","description":"io.spine.server.entity.RepositoryCache.load","location":"server/io.spine.server.entity/-repository-cache/load.html","searchKeys":["load","synchronized E load(I id)","io.spine.server.entity.RepositoryCache.load"]},{"name":"synchronized Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.releaseExpiredSessions","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/release-expired-sessions.html","searchKeys":["releaseExpiredSessions","synchronized Iterable<ShardIndex> releaseExpiredSessions(Duration inactivityPeriod)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.releaseExpiredSessions"]},{"name":"synchronized Optional<ShardProcessingSession> pickUp(ShardIndex index, NodeId nodeId)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.pickUp","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/pick-up.html","searchKeys":["pickUp","synchronized Optional<ShardProcessingSession> pickUp(ShardIndex index, NodeId nodeId)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.pickUp"]},{"name":"synchronized boolean isOpen()","description":"io.spine.server.transport.memory.InMemoryTransportFactory.isOpen","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/is-open.html","searchKeys":["isOpen","synchronized boolean isOpen()","io.spine.server.transport.memory.InMemoryTransportFactory.isOpen"]},{"name":"synchronized void clearNode(ShardSessionRecord session)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.clearNode","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/clear-node.html","searchKeys":["clearNode","synchronized void clearNode(ShardSessionRecord session)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.clearNode"]},{"name":"synchronized void close()","description":"io.spine.server.transport.memory.InMemoryTransportFactory.close","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/close.html","searchKeys":["close","synchronized void close()","io.spine.server.transport.memory.InMemoryTransportFactory.close"]},{"name":"synchronized void removeAll(Iterable<InboxMessage> messages)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.removeAll","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/remove-all.html","searchKeys":["removeAll","synchronized void removeAll(Iterable<InboxMessage> messages)","io.spine.server.storage.memory.InMemoryInboxStorage.removeAll"]},{"name":"synchronized void startCaching(I id)","description":"io.spine.server.entity.RepositoryCache.startCaching","location":"server/io.spine.server.entity/-repository-cache/start-caching.html","searchKeys":["startCaching","synchronized void startCaching(I id)","io.spine.server.entity.RepositoryCache.startCaching"]},{"name":"synchronized void stopCaching(I id)","description":"io.spine.server.entity.RepositoryCache.stopCaching","location":"server/io.spine.server.entity/-repository-cache/stop-caching.html","searchKeys":["stopCaching","synchronized void stopCaching(I id)","io.spine.server.entity.RepositoryCache.stopCaching"]},{"name":"synchronized void store(E entity)","description":"io.spine.server.entity.RepositoryCache.store","location":"server/io.spine.server.entity/-repository-cache/store.html","searchKeys":["store","synchronized void store(E entity)","io.spine.server.entity.RepositoryCache.store"]},{"name":"synchronized void write(InboxMessageId id, InboxMessage record)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.write","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/write.html","searchKeys":["write","synchronized void write(InboxMessageId id, InboxMessage record)","io.spine.server.storage.memory.InMemoryInboxStorage.write"]},{"name":"synchronized void write(InboxMessage message)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.write","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/write.html","searchKeys":["write","synchronized void write(InboxMessage message)","io.spine.server.storage.memory.InMemoryInboxStorage.write"]},{"name":"synchronized void writeAll(Iterable<InboxMessage> messages)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.writeAll","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/write-all.html","searchKeys":["writeAll","synchronized void writeAll(Iterable<InboxMessage> messages)","io.spine.server.storage.memory.InMemoryInboxStorage.writeAll"]},{"name":"timestamp","description":"io.spine.server.storage.VersionField.timestamp","location":"server/io.spine.server.storage/-version-field/timestamp/index.html","searchKeys":["timestamp","timestamp","io.spine.server.storage.VersionField.timestamp"]},{"name":"timestamp_nanos","description":"io.spine.server.storage.VersionField.timestamp_nanos","location":"server/io.spine.server.storage/-version-field/timestamp_nanos/index.html","searchKeys":["timestamp_nanos","timestamp_nanos","io.spine.server.storage.VersionField.timestamp_nanos"]},{"name":"type_url","description":"io.spine.server.storage.StateField.type_url","location":"server/io.spine.server.storage/-state-field/type_url/index.html","searchKeys":["type_url","type_url","io.spine.server.storage.StateField.type_url"]},{"name":"version","description":"io.spine.server.storage.VersionField.version","location":"server/io.spine.server.storage/-version-field/version/index.html","searchKeys":["version","version","io.spine.server.storage.VersionField.version"]},{"name":"void AbstractChannel(ChannelId id)","description":"io.spine.server.transport.AbstractChannel.AbstractChannel","location":"server/io.spine.server.transport/-abstract-channel/-abstract-channel.html","searchKeys":["AbstractChannel","void AbstractChannel(ChannelId id)","io.spine.server.transport.AbstractChannel.AbstractChannel"]},{"name":"void AbstractChannelObserver(BoundedContextName boundedContextName, Class<? extends Message> messageClass)","description":"io.spine.server.integration.AbstractChannelObserver.AbstractChannelObserver","location":"server/io.spine.server.integration/-abstract-channel-observer/-abstract-channel-observer.html","searchKeys":["AbstractChannelObserver","void AbstractChannelObserver(BoundedContextName boundedContextName, Class<? extends Message> messageClass)","io.spine.server.integration.AbstractChannelObserver.AbstractChannelObserver"]},{"name":"void AbstractEntity()","description":"io.spine.server.entity.AbstractEntity.AbstractEntity","location":"server/io.spine.server.entity/-abstract-entity/-abstract-entity.html","searchKeys":["AbstractEntity","void AbstractEntity()","io.spine.server.entity.AbstractEntity.AbstractEntity"]},{"name":"void AbstractEntity(I id)","description":"io.spine.server.entity.AbstractEntity.AbstractEntity","location":"server/io.spine.server.entity/-abstract-entity/-abstract-entity.html","searchKeys":["AbstractEntity","void AbstractEntity(I id)","io.spine.server.entity.AbstractEntity.AbstractEntity"]},{"name":"void AbstractEntity(I id, Function<I, S> defaultState)","description":"io.spine.server.entity.AbstractEntity.AbstractEntity","location":"server/io.spine.server.entity/-abstract-entity/-abstract-entity.html","searchKeys":["AbstractEntity","void AbstractEntity(I id, Function<I, S> defaultState)","io.spine.server.entity.AbstractEntity.AbstractEntity"]},{"name":"void AbstractEntityFactory(Class<E> entityClass)","description":"io.spine.server.entity.model.AbstractEntityFactory.AbstractEntityFactory","location":"server/io.spine.server.entity.model/-abstract-entity-factory/-abstract-entity-factory.html","searchKeys":["AbstractEntityFactory","void AbstractEntityFactory(Class<E> entityClass)","io.spine.server.entity.model.AbstractEntityFactory.AbstractEntityFactory"]},{"name":"void AbstractHandlerMethod(Method method, ParameterSpec<E> parameterSpec)","description":"io.spine.server.model.AbstractHandlerMethod.AbstractHandlerMethod","location":"server/io.spine.server.model/-abstract-handler-method/-abstract-handler-method.html","searchKeys":["AbstractHandlerMethod","void AbstractHandlerMethod(Method method, ParameterSpec<E> parameterSpec)","io.spine.server.model.AbstractHandlerMethod.AbstractHandlerMethod"]},{"name":"void AbstractMessageEnvelope(T object)","description":"io.spine.server.type.AbstractMessageEnvelope.AbstractMessageEnvelope","location":"server/io.spine.server.type/-abstract-message-envelope/-abstract-message-envelope.html","searchKeys":["AbstractMessageEnvelope","void AbstractMessageEnvelope(T object)","io.spine.server.type.AbstractMessageEnvelope.AbstractMessageEnvelope"]},{"name":"void AbstractStatefulReactor(TypeUrl stateType)","description":"io.spine.server.event.AbstractStatefulReactor.AbstractStatefulReactor","location":"server/io.spine.server.event/-abstract-stateful-reactor/-abstract-stateful-reactor.html","searchKeys":["AbstractStatefulReactor","void AbstractStatefulReactor(TypeUrl stateType)","io.spine.server.event.AbstractStatefulReactor.AbstractStatefulReactor"]},{"name":"void AbstractStorage(boolean multitenant)","description":"io.spine.server.storage.AbstractStorage.AbstractStorage","location":"server/io.spine.server.storage/-abstract-storage/-abstract-storage.html","searchKeys":["AbstractStorage","void AbstractStorage(boolean multitenant)","io.spine.server.storage.AbstractStorage.AbstractStorage"]},{"name":"void AbstractTracer(Signal<?, ?, ?> signal)","description":"io.spine.server.trace.AbstractTracer.AbstractTracer","location":"server/io.spine.server.trace/-abstract-tracer/-abstract-tracer.html","searchKeys":["AbstractTracer","void AbstractTracer(Signal<?, ?, ?> signal)","io.spine.server.trace.AbstractTracer.AbstractTracer"]},{"name":"void Aggregate()","description":"io.spine.server.aggregate.Aggregate.Aggregate","location":"server/io.spine.server.aggregate/-aggregate/-aggregate.html","searchKeys":["Aggregate","void Aggregate()","io.spine.server.aggregate.Aggregate.Aggregate"]},{"name":"void Aggregate(I id)","description":"io.spine.server.aggregate.Aggregate.Aggregate","location":"server/io.spine.server.aggregate/-aggregate/-aggregate.html","searchKeys":["Aggregate","void Aggregate(I id)","io.spine.server.aggregate.Aggregate.Aggregate"]},{"name":"void AggregateClass(Class<A> cls)","description":"io.spine.server.aggregate.model.AggregateClass.AggregateClass","location":"server/io.spine.server.aggregate.model/-aggregate-class/-aggregate-class.html","searchKeys":["AggregateClass","void AggregateClass(Class<A> cls)","io.spine.server.aggregate.model.AggregateClass.AggregateClass"]},{"name":"void AggregatePart(R root)","description":"io.spine.server.aggregate.AggregatePart.AggregatePart","location":"server/io.spine.server.aggregate/-aggregate-part/-aggregate-part.html","searchKeys":["AggregatePart","void AggregatePart(R root)","io.spine.server.aggregate.AggregatePart.AggregatePart"]},{"name":"void AggregatePartRepository()","description":"io.spine.server.aggregate.AggregatePartRepository.AggregatePartRepository","location":"server/io.spine.server.aggregate/-aggregate-part-repository/-aggregate-part-repository.html","searchKeys":["AggregatePartRepository","void AggregatePartRepository()","io.spine.server.aggregate.AggregatePartRepository.AggregatePartRepository"]},{"name":"void AggregateReadRequest(I recordId, int batchSize)","description":"io.spine.server.aggregate.AggregateReadRequest.AggregateReadRequest","location":"server/io.spine.server.aggregate/-aggregate-read-request/-aggregate-read-request.html","searchKeys":["AggregateReadRequest","void AggregateReadRequest(I recordId, int batchSize)","io.spine.server.aggregate.AggregateReadRequest.AggregateReadRequest"]},{"name":"void AggregateRepository()","description":"io.spine.server.aggregate.AggregateRepository.AggregateRepository","location":"server/io.spine.server.aggregate/-aggregate-repository/-aggregate-repository.html","searchKeys":["AggregateRepository","void AggregateRepository()","io.spine.server.aggregate.AggregateRepository.AggregateRepository"]},{"name":"void AggregateRoot(BoundedContext context, I id)","description":"io.spine.server.aggregate.AggregateRoot.AggregateRoot","location":"server/io.spine.server.aggregate/-aggregate-root/-aggregate-root.html","searchKeys":["AggregateRoot","void AggregateRoot(BoundedContext context, I id)","io.spine.server.aggregate.AggregateRoot.AggregateRoot"]},{"name":"void AggregateStorage(boolean multitenant)","description":"io.spine.server.aggregate.AggregateStorage.AggregateStorage","location":"server/io.spine.server.aggregate/-aggregate-storage/-aggregate-storage.html","searchKeys":["AggregateStorage","void AggregateStorage(boolean multitenant)","io.spine.server.aggregate.AggregateStorage.AggregateStorage"]},{"name":"void AggregateTransaction(Aggregate<I, S, B> aggregate, S state, Version version)","description":"io.spine.server.aggregate.AggregateTransaction.AggregateTransaction","location":"server/io.spine.server.aggregate/-aggregate-transaction/-aggregate-transaction.html","searchKeys":["AggregateTransaction","void AggregateTransaction(Aggregate<I, S, B> aggregate, S state, Version version)","io.spine.server.aggregate.AggregateTransaction.AggregateTransaction"]},{"name":"void AllowedParams(Array<ParameterSpec<E>> spec)","description":"io.spine.server.model.AllowedParams.AllowedParams","location":"server/io.spine.server.model/-allowed-params/-allowed-params.html","searchKeys":["AllowedParams","void AllowedParams(Array<ParameterSpec<E>> spec)","io.spine.server.model.AllowedParams.AllowedParams"]},{"name":"void BoundedContext(BoundedContextBuilder builder)","description":"io.spine.server.BoundedContext.BoundedContext","location":"server/io.spine.server/-bounded-context/-bounded-context.html","searchKeys":["BoundedContext","void BoundedContext(BoundedContextBuilder builder)","io.spine.server.BoundedContext.BoundedContext"]},{"name":"void Bus(BusBuilder<? extends Object, T, E, C, D> builder)","description":"io.spine.server.bus.Bus.Bus","location":"server/io.spine.server.bus/-bus/-bus.html","searchKeys":["Bus","void Bus(BusBuilder<? extends Object, T, E, C, D> builder)","io.spine.server.bus.Bus.Bus"]},{"name":"void BusBuilder()","description":"io.spine.server.bus.BusBuilder.BusBuilder","location":"server/io.spine.server.bus/-bus-builder/-bus-builder.html","searchKeys":["BusBuilder","void BusBuilder()","io.spine.server.bus.BusBuilder.BusBuilder"]},{"name":"void ChannelHub(TransportFactory transportFactory)","description":"io.spine.server.transport.ChannelHub.ChannelHub","location":"server/io.spine.server.transport/-channel-hub/-channel-hub.html","searchKeys":["ChannelHub","void ChannelHub(TransportFactory transportFactory)","io.spine.server.transport.ChannelHub.ChannelHub"]},{"name":"void CommandDispatchingPhase(Transaction<I, ? extends Object, ? extends Object, ? extends Object> transaction, DispatchCommand<I> dispatch, VersionIncrement versionIncrement)","description":"io.spine.server.entity.CommandDispatchingPhase.CommandDispatchingPhase","location":"server/io.spine.server.entity/-command-dispatching-phase/-command-dispatching-phase.html","searchKeys":["CommandDispatchingPhase","void CommandDispatchingPhase(Transaction<I, ? extends Object, ? extends Object, ? extends Object> transaction, DispatchCommand<I> dispatch, VersionIncrement versionIncrement)","io.spine.server.entity.CommandDispatchingPhase.CommandDispatchingPhase"]},{"name":"void CommandException(String messageText, Command command, Error error)","description":"io.spine.server.commandbus.CommandException.CommandException","location":"server/io.spine.server.commandbus/-command-exception/-command-exception.html","searchKeys":["CommandException","void CommandException(String messageText, Command command, Error error)","io.spine.server.commandbus.CommandException.CommandException"]},{"name":"void CommandHandlerSignature()","description":"io.spine.server.command.model.CommandHandlerSignature.CommandHandlerSignature","location":"server/io.spine.server.command.model/-command-handler-signature/-command-handler-signature.html","searchKeys":["CommandHandlerSignature","void CommandHandlerSignature()","io.spine.server.command.model.CommandHandlerSignature.CommandHandlerSignature"]},{"name":"void CommandHandlingEntity()","description":"io.spine.server.command.CommandHandlingEntity.CommandHandlingEntity","location":"server/io.spine.server.command/-command-handling-entity/-command-handling-entity.html","searchKeys":["CommandHandlingEntity","void CommandHandlingEntity()","io.spine.server.command.CommandHandlingEntity.CommandHandlingEntity"]},{"name":"void CommandHandlingEntity(I id)","description":"io.spine.server.command.CommandHandlingEntity.CommandHandlingEntity","location":"server/io.spine.server.command/-command-handling-entity/-command-handling-entity.html","searchKeys":["CommandHandlingEntity","void CommandHandlingEntity(I id)","io.spine.server.command.CommandHandlingEntity.CommandHandlingEntity"]},{"name":"void CommandHandlingEntityClass(Class<E> cls)","description":"io.spine.server.entity.model.CommandHandlingEntityClass.CommandHandlingEntityClass","location":"server/io.spine.server.entity.model/-command-handling-entity-class/-command-handling-entity-class.html","searchKeys":["CommandHandlingEntityClass","void CommandHandlingEntityClass(Class<E> cls)","io.spine.server.entity.model.CommandHandlingEntityClass.CommandHandlingEntityClass"]},{"name":"void CommandScheduler()","description":"io.spine.server.commandbus.CommandScheduler.CommandScheduler","location":"server/io.spine.server.commandbus/-command-scheduler/-command-scheduler.html","searchKeys":["CommandScheduler","void CommandScheduler()","io.spine.server.commandbus.CommandScheduler.CommandScheduler"]},{"name":"void DefaultAggregatePartRepository(Class<A> cls)","description":"io.spine.server.aggregate.DefaultAggregatePartRepository.DefaultAggregatePartRepository","location":"server/io.spine.server.aggregate/-default-aggregate-part-repository/-default-aggregate-part-repository.html","searchKeys":["DefaultAggregatePartRepository","void DefaultAggregatePartRepository(Class<A> cls)","io.spine.server.aggregate.DefaultAggregatePartRepository.DefaultAggregatePartRepository"]},{"name":"void DefaultAggregateRepository(Class<A> cls)","description":"io.spine.server.aggregate.DefaultAggregateRepository.DefaultAggregateRepository","location":"server/io.spine.server.aggregate/-default-aggregate-repository/-default-aggregate-repository.html","searchKeys":["DefaultAggregateRepository","void DefaultAggregateRepository(Class<A> cls)","io.spine.server.aggregate.DefaultAggregateRepository.DefaultAggregateRepository"]},{"name":"void DefaultEntityFactory(Class<E> entityClass)","description":"io.spine.server.entity.DefaultEntityFactory.DefaultEntityFactory","location":"server/io.spine.server.entity/-default-entity-factory/-default-entity-factory.html","searchKeys":["DefaultEntityFactory","void DefaultEntityFactory(Class<E> entityClass)","io.spine.server.entity.DefaultEntityFactory.DefaultEntityFactory"]},{"name":"void DefaultEventStore()","description":"io.spine.server.event.store.DefaultEventStore.DefaultEventStore","location":"server/io.spine.server.event.store/-default-event-store/-default-event-store.html","searchKeys":["DefaultEventStore","void DefaultEventStore()","io.spine.server.event.store.DefaultEventStore.DefaultEventStore"]},{"name":"void DefaultProcessManagerRepository(Class<P> cls)","description":"io.spine.server.procman.DefaultProcessManagerRepository.DefaultProcessManagerRepository","location":"server/io.spine.server.procman/-default-process-manager-repository/-default-process-manager-repository.html","searchKeys":["DefaultProcessManagerRepository","void DefaultProcessManagerRepository(Class<P> cls)","io.spine.server.procman.DefaultProcessManagerRepository.DefaultProcessManagerRepository"]},{"name":"void DefaultProjectionRepository(Class<P> cls)","description":"io.spine.server.projection.DefaultProjectionRepository.DefaultProjectionRepository","location":"server/io.spine.server.projection/-default-projection-repository/-default-projection-repository.html","searchKeys":["DefaultProjectionRepository","void DefaultProjectionRepository(Class<P> cls)","io.spine.server.projection.DefaultProjectionRepository.DefaultProjectionRepository"]},{"name":"void DefaultRecordBasedRepository()","description":"io.spine.server.entity.DefaultRecordBasedRepository.DefaultRecordBasedRepository","location":"server/io.spine.server.entity/-default-record-based-repository/-default-record-based-repository.html","searchKeys":["DefaultRecordBasedRepository","void DefaultRecordBasedRepository()","io.spine.server.entity.DefaultRecordBasedRepository.DefaultRecordBasedRepository"]},{"name":"void DispatchKey(Class<? extends Message> messageClass, ArgumentFilter filter, Class<? extends Message> originClass)","description":"io.spine.server.model.DispatchKey.DispatchKey","location":"server/io.spine.server.model/-dispatch-key/-dispatch-key.html","searchKeys":["DispatchKey","void DispatchKey(Class<? extends Message> messageClass, ArgumentFilter filter, Class<? extends Message> originClass)","io.spine.server.model.DispatchKey.DispatchKey"]},{"name":"void Either(Message value, int index)","description":"io.spine.server.tuple.Either.Either","location":"server/io.spine.server.tuple/-either/-either.html","searchKeys":["Either","void Either(Message value, int index)","io.spine.server.tuple.Either.Either"]},{"name":"void Enricher(EnricherBuilder<M, C, ? extends Object> builder)","description":"io.spine.server.enrich.Enricher.Enricher","location":"server/io.spine.server.enrich/-enricher/-enricher.html","searchKeys":["Enricher","void Enricher(EnricherBuilder<M, C, ? extends Object> builder)","io.spine.server.enrich.Enricher.Enricher"]},{"name":"void EnricherBuilder()","description":"io.spine.server.enrich.EnricherBuilder.EnricherBuilder","location":"server/io.spine.server.enrich/-enricher-builder/-enricher-builder.html","searchKeys":["EnricherBuilder","void EnricherBuilder()","io.spine.server.enrich.EnricherBuilder.EnricherBuilder"]},{"name":"void EntityClass(Class<E> cls)","description":"io.spine.server.entity.model.EntityClass.EntityClass","location":"server/io.spine.server.entity.model/-entity-class/-entity-class.html","searchKeys":["EntityClass","void EntityClass(Class<E> cls)","io.spine.server.entity.model.EntityClass.EntityClass"]},{"name":"void EntityLifecycle(Object entityId, TypeUrl entityType, SystemWriteSide writeSide, EventFilter eventFilter, EntityTypeName typeName)","description":"io.spine.server.entity.EntityLifecycle.EntityLifecycle","location":"server/io.spine.server.entity/-entity-lifecycle/-entity-lifecycle.html","searchKeys":["EntityLifecycle","void EntityLifecycle(Object entityId, TypeUrl entityType, SystemWriteSide writeSide, EventFilter eventFilter, EntityTypeName typeName)","io.spine.server.entity.EntityLifecycle.EntityLifecycle"]},{"name":"void EntityMessageEndpoint(Repository<I, E> repository, M envelope)","description":"io.spine.server.entity.EntityMessageEndpoint.EntityMessageEndpoint","location":"server/io.spine.server.entity/-entity-message-endpoint/-entity-message-endpoint.html","searchKeys":["EntityMessageEndpoint","void EntityMessageEndpoint(Repository<I, E> repository, M envelope)","io.spine.server.entity.EntityMessageEndpoint.EntityMessageEndpoint"]},{"name":"void EventDispatch(BiFunction<E, EventEnvelope, DispatchOutcome> dispatchFunction, E entity, EventEnvelope event)","description":"io.spine.server.event.EventDispatch.EventDispatch","location":"server/io.spine.server.event/-event-dispatch/-event-dispatch.html","searchKeys":["EventDispatch","void EventDispatch(BiFunction<E, EventEnvelope, DispatchOutcome> dispatchFunction, E entity, EventEnvelope event)","io.spine.server.event.EventDispatch.EventDispatch"]},{"name":"void EventDispatchingPhase(Transaction<I, ? extends Object, ? extends Object, ? extends Object> transaction, EventDispatch<I, E> dispatch, VersionIncrement increment)","description":"io.spine.server.entity.EventDispatchingPhase.EventDispatchingPhase","location":"server/io.spine.server.entity/-event-dispatching-phase/-event-dispatching-phase.html","searchKeys":["EventDispatchingPhase","void EventDispatchingPhase(Transaction<I, ? extends Object, ? extends Object, ? extends Object> transaction, EventDispatch<I, E> dispatch, VersionIncrement increment)","io.spine.server.entity.EventDispatchingPhase.EventDispatchingPhase"]},{"name":"void EventDispatchingRepository()","description":"io.spine.server.entity.EventDispatchingRepository.EventDispatchingRepository","location":"server/io.spine.server.entity/-event-dispatching-repository/-event-dispatching-repository.html","searchKeys":["EventDispatchingRepository","void EventDispatchingRepository()","io.spine.server.entity.EventDispatchingRepository.EventDispatchingRepository"]},{"name":"void EventException(String messageText, EventMessage eventMessage, Error error)","description":"io.spine.server.event.EventException.EventException","location":"server/io.spine.server.event/-event-exception/-event-exception.html","searchKeys":["EventException","void EventException(String messageText, EventMessage eventMessage, Error error)","io.spine.server.event.EventException.EventException"]},{"name":"void EventFactory(EventOrigin origin, Any producerId)","description":"io.spine.server.event.EventFactory.EventFactory","location":"server/io.spine.server.event/-event-factory/-event-factory.html","searchKeys":["EventFactory","void EventFactory(EventOrigin origin, Any producerId)","io.spine.server.event.EventFactory.EventFactory"]},{"name":"void EventOperation(Event event)","description":"io.spine.server.tenant.EventOperation.EventOperation","location":"server/io.spine.server.tenant/-event-operation/-event-operation.html","searchKeys":["EventOperation","void EventOperation(Event event)","io.spine.server.tenant.EventOperation.EventOperation"]},{"name":"void EventPlayingTransaction(E entity)","description":"io.spine.server.entity.EventPlayingTransaction.EventPlayingTransaction","location":"server/io.spine.server.entity/-event-playing-transaction/-event-playing-transaction.html","searchKeys":["EventPlayingTransaction","void EventPlayingTransaction(E entity)","io.spine.server.entity.EventPlayingTransaction.EventPlayingTransaction"]},{"name":"void EventPlayingTransaction(E entity, S state, Version version)","description":"io.spine.server.entity.EventPlayingTransaction.EventPlayingTransaction","location":"server/io.spine.server.entity/-event-playing-transaction/-event-playing-transaction.html","searchKeys":["EventPlayingTransaction","void EventPlayingTransaction(E entity, S state, Version version)","io.spine.server.entity.EventPlayingTransaction.EventPlayingTransaction"]},{"name":"void EventReceivingClassDelegate(Class<T> delegatingClass, MethodSignature<M, ? extends Object> signature)","description":"io.spine.server.event.model.EventReceivingClassDelegate.EventReceivingClassDelegate","location":"server/io.spine.server.event.model/-event-receiving-class-delegate/-event-receiving-class-delegate.html","searchKeys":["EventReceivingClassDelegate","void EventReceivingClassDelegate(Class<T> delegatingClass, MethodSignature<M, ? extends Object> signature)","io.spine.server.event.model.EventReceivingClassDelegate.EventReceivingClassDelegate"]},{"name":"void ExecutorCommandScheduler()","description":"io.spine.server.commandbus.ExecutorCommandScheduler.ExecutorCommandScheduler","location":"server/io.spine.server.commandbus/-executor-command-scheduler/-executor-command-scheduler.html","searchKeys":["ExecutorCommandScheduler","void ExecutorCommandScheduler()","io.spine.server.commandbus.ExecutorCommandScheduler.ExecutorCommandScheduler"]},{"name":"void ExecutorCommandScheduler(ScheduledExecutorService executorService)","description":"io.spine.server.commandbus.ExecutorCommandScheduler.ExecutorCommandScheduler","location":"server/io.spine.server.commandbus/-executor-command-scheduler/-executor-command-scheduler.html","searchKeys":["ExecutorCommandScheduler","void ExecutorCommandScheduler(ScheduledExecutorService executorService)","io.spine.server.commandbus.ExecutorCommandScheduler.ExecutorCommandScheduler"]},{"name":"void ExternalCommandReceiverMethodError(CommandHandlingClass<? extends Object, ? extends Object> classWithViolation, Collection<? extends CommandAcceptingMethod<? extends Object, ? extends Object>> invalidMethods)","description":"io.spine.server.model.ExternalCommandReceiverMethodError.ExternalCommandReceiverMethodError","location":"server/io.spine.server.model/-external-command-receiver-method-error/-external-command-receiver-method-error.html","searchKeys":["ExternalCommandReceiverMethodError","void ExternalCommandReceiverMethodError(CommandHandlingClass<? extends Object, ? extends Object> classWithViolation, Collection<? extends CommandAcceptingMethod<? extends Object, ? extends Object>> invalidMethods)","io.spine.server.model.ExternalCommandReceiverMethodError.ExternalCommandReceiverMethodError"]},{"name":"void HandlerLog(FluentLogger logger, HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","description":"io.spine.server.log.HandlerLog.HandlerLog","location":"server/io.spine.server.log/-handler-log/-handler-log.html","searchKeys":["HandlerLog","void HandlerLog(FluentLogger logger, HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","io.spine.server.log.HandlerLog.HandlerLog"]},{"name":"void IllegalOutcomeException(String message)","description":"io.spine.server.model.IllegalOutcomeException.IllegalOutcomeException","location":"server/io.spine.server.model/-illegal-outcome-exception/-illegal-outcome-exception.html","searchKeys":["IllegalOutcomeException","void IllegalOutcomeException(String message)","io.spine.server.model.IllegalOutcomeException.IllegalOutcomeException"]},{"name":"void InMemoryCatchUpStorage(boolean multitenant)","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.InMemoryCatchUpStorage","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/-in-memory-catch-up-storage.html","searchKeys":["InMemoryCatchUpStorage","void InMemoryCatchUpStorage(boolean multitenant)","io.spine.server.storage.memory.InMemoryCatchUpStorage.InMemoryCatchUpStorage"]},{"name":"void InMemoryInboxStorage(boolean multitenant)","description":"io.spine.server.storage.memory.InMemoryInboxStorage.InMemoryInboxStorage","location":"server/io.spine.server.storage.memory/-in-memory-inbox-storage/-in-memory-inbox-storage.html","searchKeys":["InMemoryInboxStorage","void InMemoryInboxStorage(boolean multitenant)","io.spine.server.storage.memory.InMemoryInboxStorage.InMemoryInboxStorage"]},{"name":"void InMemoryTransportFactory()","description":"io.spine.server.transport.memory.InMemoryTransportFactory.InMemoryTransportFactory","location":"server/io.spine.server.transport.memory/-in-memory-transport-factory/-in-memory-transport-factory.html","searchKeys":["InMemoryTransportFactory","void InMemoryTransportFactory()","io.spine.server.transport.memory.InMemoryTransportFactory.InMemoryTransportFactory"]},{"name":"void InboxReadRequest(InboxMessageId id)","description":"io.spine.server.delivery.InboxReadRequest.InboxReadRequest","location":"server/io.spine.server.delivery/-inbox-read-request/-inbox-read-request.html","searchKeys":["InboxReadRequest","void InboxReadRequest(InboxMessageId id)","io.spine.server.delivery.InboxReadRequest.InboxReadRequest"]},{"name":"void IntegrationBroker()","description":"io.spine.server.integration.IntegrationBroker.IntegrationBroker","location":"server/io.spine.server.integration/-integration-broker/-integration-broker.html","searchKeys":["IntegrationBroker","void IntegrationBroker()","io.spine.server.integration.IntegrationBroker.IntegrationBroker"]},{"name":"void InvalidSubscriptionException(String messageText, Subscription subscription, Error error)","description":"io.spine.server.stand.InvalidSubscriptionException.InvalidSubscriptionException","location":"server/io.spine.server.stand/-invalid-subscription-exception/-invalid-subscription-exception.html","searchKeys":["InvalidSubscriptionException","void InvalidSubscriptionException(String messageText, Subscription subscription, Error error)","io.spine.server.stand.InvalidSubscriptionException.InvalidSubscriptionException"]},{"name":"void LocalDispatchingObserver()","description":"io.spine.server.delivery.LocalDispatchingObserver.LocalDispatchingObserver","location":"server/io.spine.server.delivery/-local-dispatching-observer/-local-dispatching-observer.html","searchKeys":["LocalDispatchingObserver","void LocalDispatchingObserver()","io.spine.server.delivery.LocalDispatchingObserver.LocalDispatchingObserver"]},{"name":"void MethodSignature(Class<? extends Annotation> annotation)","description":"io.spine.server.model.MethodSignature.MethodSignature","location":"server/io.spine.server.model/-method-signature/-method-signature.html","searchKeys":["MethodSignature","void MethodSignature(Class<? extends Annotation> annotation)","io.spine.server.model.MethodSignature.MethodSignature"]},{"name":"void ModelClass(Class<? extends T> rawClass)","description":"io.spine.server.model.ModelClass.ModelClass","location":"server/io.spine.server.model/-model-class/-model-class.html","searchKeys":["ModelClass","void ModelClass(Class<? extends T> rawClass)","io.spine.server.model.ModelClass.ModelClass"]},{"name":"void ModelError(String message)","description":"io.spine.server.model.ModelError.ModelError","location":"server/io.spine.server.model/-model-error/-model-error.html","searchKeys":["ModelError","void ModelError(String message)","io.spine.server.model.ModelError.ModelError"]},{"name":"void ModelError(String messageFormat, Array<Object> args)","description":"io.spine.server.model.ModelError.ModelError","location":"server/io.spine.server.model/-model-error/-model-error.html","searchKeys":["ModelError","void ModelError(String messageFormat, Array<Object> args)","io.spine.server.model.ModelError.ModelError"]},{"name":"void ModelError(Throwable cause)","description":"io.spine.server.model.ModelError.ModelError","location":"server/io.spine.server.model/-model-error/-model-error.html","searchKeys":["ModelError","void ModelError(Throwable cause)","io.spine.server.model.ModelError.ModelError"]},{"name":"void MulticastBus(BusBuilder<? extends Object, M, E, C, D> builder)","description":"io.spine.server.bus.MulticastBus.MulticastBus","location":"server/io.spine.server.bus/-multicast-bus/-multicast-bus.html","searchKeys":["MulticastBus","void MulticastBus(BusBuilder<? extends Object, M, E, C, D> builder)","io.spine.server.bus.MulticastBus.MulticastBus"]},{"name":"void PmCommandEndpoint(ProcessManagerRepository<I, P, ? extends Object> repository, CommandEnvelope cmd)","description":"io.spine.server.procman.PmCommandEndpoint.PmCommandEndpoint","location":"server/io.spine.server.procman/-pm-command-endpoint/-pm-command-endpoint.html","searchKeys":["PmCommandEndpoint","void PmCommandEndpoint(ProcessManagerRepository<I, P, ? extends Object> repository, CommandEnvelope cmd)","io.spine.server.procman.PmCommandEndpoint.PmCommandEndpoint"]},{"name":"void PmEventEndpoint(ProcessManagerRepository<I, P, ? extends Object> repository, EventEnvelope event)","description":"io.spine.server.procman.PmEventEndpoint.PmEventEndpoint","location":"server/io.spine.server.procman/-pm-event-endpoint/-pm-event-endpoint.html","searchKeys":["PmEventEndpoint","void PmEventEndpoint(ProcessManagerRepository<I, P, ? extends Object> repository, EventEnvelope event)","io.spine.server.procman.PmEventEndpoint.PmEventEndpoint"]},{"name":"void PmTransaction(ProcessManager<I, S, B> processManager)","description":"io.spine.server.procman.PmTransaction.PmTransaction","location":"server/io.spine.server.procman/-pm-transaction/-pm-transaction.html","searchKeys":["PmTransaction","void PmTransaction(ProcessManager<I, S, B> processManager)","io.spine.server.procman.PmTransaction.PmTransaction"]},{"name":"void PmTransaction(ProcessManager<I, S, B> processManager, S state, Version version)","description":"io.spine.server.procman.PmTransaction.PmTransaction","location":"server/io.spine.server.procman/-pm-transaction/-pm-transaction.html","searchKeys":["PmTransaction","void PmTransaction(ProcessManager<I, S, B> processManager, S state, Version version)","io.spine.server.procman.PmTransaction.PmTransaction"]},{"name":"void ProcessManager()","description":"io.spine.server.procman.ProcessManager.ProcessManager","location":"server/io.spine.server.procman/-process-manager/-process-manager.html","searchKeys":["ProcessManager","void ProcessManager()","io.spine.server.procman.ProcessManager.ProcessManager"]},{"name":"void ProcessManager(I id)","description":"io.spine.server.procman.ProcessManager.ProcessManager","location":"server/io.spine.server.procman/-process-manager/-process-manager.html","searchKeys":["ProcessManager","void ProcessManager(I id)","io.spine.server.procman.ProcessManager.ProcessManager"]},{"name":"void ProcessManagerRepository()","description":"io.spine.server.procman.ProcessManagerRepository.ProcessManagerRepository","location":"server/io.spine.server.procman/-process-manager-repository/-process-manager-repository.html","searchKeys":["ProcessManagerRepository","void ProcessManagerRepository()","io.spine.server.procman.ProcessManagerRepository.ProcessManagerRepository"]},{"name":"void Projection()","description":"io.spine.server.projection.Projection.Projection","location":"server/io.spine.server.projection/-projection/-projection.html","searchKeys":["Projection","void Projection()","io.spine.server.projection.Projection.Projection"]},{"name":"void Projection(I id)","description":"io.spine.server.projection.Projection.Projection","location":"server/io.spine.server.projection/-projection/-projection.html","searchKeys":["Projection","void Projection(I id)","io.spine.server.projection.Projection.Projection"]},{"name":"void ProjectionEndpoint(Repository<I, P> repository, EventEnvelope event)","description":"io.spine.server.projection.ProjectionEndpoint.ProjectionEndpoint","location":"server/io.spine.server.projection/-projection-endpoint/-projection-endpoint.html","searchKeys":["ProjectionEndpoint","void ProjectionEndpoint(Repository<I, P> repository, EventEnvelope event)","io.spine.server.projection.ProjectionEndpoint.ProjectionEndpoint"]},{"name":"void ProjectionStorage(Class<? extends Projection<? extends Object, ? extends Object, ? extends Object>> projectionClass, boolean multitenant)","description":"io.spine.server.projection.ProjectionStorage.ProjectionStorage","location":"server/io.spine.server.projection/-projection-storage/-projection-storage.html","searchKeys":["ProjectionStorage","void ProjectionStorage(Class<? extends Projection<? extends Object, ? extends Object, ? extends Object>> projectionClass, boolean multitenant)","io.spine.server.projection.ProjectionStorage.ProjectionStorage"]},{"name":"void ProjectionTransaction(Projection<I, S, B> projection, S state, Version version)","description":"io.spine.server.projection.ProjectionTransaction.ProjectionTransaction","location":"server/io.spine.server.projection/-projection-transaction/-projection-transaction.html","searchKeys":["ProjectionTransaction","void ProjectionTransaction(Projection<I, S, B> projection, S state, Version version)","io.spine.server.projection.ProjectionTransaction.ProjectionTransaction"]},{"name":"void PublisherHub(TransportFactory transportFactory)","description":"io.spine.server.transport.PublisherHub.PublisherHub","location":"server/io.spine.server.transport/-publisher-hub/-publisher-hub.html","searchKeys":["PublisherHub","void PublisherHub(TransportFactory transportFactory)","io.spine.server.transport.PublisherHub.PublisherHub"]},{"name":"void QueryOperation(Query query)","description":"io.spine.server.tenant.QueryOperation.QueryOperation","location":"server/io.spine.server.tenant/-query-operation/-query-operation.html","searchKeys":["QueryOperation","void QueryOperation(Query query)","io.spine.server.tenant.QueryOperation.QueryOperation"]},{"name":"void ReactorClassDelegate(Class<T> cls)","description":"io.spine.server.event.model.ReactorClassDelegate.ReactorClassDelegate","location":"server/io.spine.server.event.model/-reactor-class-delegate/-reactor-class-delegate.html","searchKeys":["ReactorClassDelegate","void ReactorClassDelegate(Class<T> cls)","io.spine.server.event.model.ReactorClassDelegate.ReactorClassDelegate"]},{"name":"void RecordBasedRepository()","description":"io.spine.server.entity.RecordBasedRepository.RecordBasedRepository","location":"server/io.spine.server.entity/-record-based-repository/-record-based-repository.html","searchKeys":["RecordBasedRepository","void RecordBasedRepository()","io.spine.server.entity.RecordBasedRepository.RecordBasedRepository"]},{"name":"void RecordReadRequest(I recordId)","description":"io.spine.server.storage.RecordReadRequest.RecordReadRequest","location":"server/io.spine.server.storage/-record-read-request/-record-read-request.html","searchKeys":["RecordReadRequest","void RecordReadRequest(I recordId)","io.spine.server.storage.RecordReadRequest.RecordReadRequest"]},{"name":"void RecordStorage(Class<? extends Entity<? extends Object, ? extends Object>> entityClass, boolean multitenant)","description":"io.spine.server.storage.RecordStorage.RecordStorage","location":"server/io.spine.server.storage/-record-storage/-record-storage.html","searchKeys":["RecordStorage","void RecordStorage(Class<? extends Entity<? extends Object, ? extends Object>> entityClass, boolean multitenant)","io.spine.server.storage.RecordStorage.RecordStorage"]},{"name":"void Repository()","description":"io.spine.server.entity.Repository.Repository","location":"server/io.spine.server.entity/-repository/-repository.html","searchKeys":["Repository","void Repository()","io.spine.server.entity.Repository.Repository"]},{"name":"void RepositoryCache(boolean multitenant, RepositoryCache.Load<I, E> loadFn, RepositoryCache.Store<E> storeFn)","description":"io.spine.server.entity.RepositoryCache.RepositoryCache","location":"server/io.spine.server.entity/-repository-cache/-repository-cache.html","searchKeys":["RepositoryCache","void RepositoryCache(boolean multitenant, RepositoryCache.Load<I, E> loadFn, RepositoryCache.Store<E> storeFn)","io.spine.server.entity.RepositoryCache.RepositoryCache"]},{"name":"void ReturnTypes(Array<TypeToken<?>> types)","description":"io.spine.server.model.ReturnTypes.ReturnTypes","location":"server/io.spine.server.model/-return-types/-return-types.html","searchKeys":["ReturnTypes","void ReturnTypes(Array<TypeToken<?>> types)","io.spine.server.model.ReturnTypes.ReturnTypes"]},{"name":"void ShardProcessingSession(ShardSessionRecord record)","description":"io.spine.server.delivery.ShardProcessingSession.ShardProcessingSession","location":"server/io.spine.server.delivery/-shard-processing-session/-shard-processing-session.html","searchKeys":["ShardProcessingSession","void ShardProcessingSession(ShardSessionRecord record)","io.spine.server.delivery.ShardProcessingSession.ShardProcessingSession"]},{"name":"void SingleThreadInMemTransportFactory()","description":"io.spine.server.transport.memory.SingleThreadInMemTransportFactory.SingleThreadInMemTransportFactory","location":"server/io.spine.server.transport.memory/-single-thread-in-mem-transport-factory/-single-thread-in-mem-transport-factory.html","searchKeys":["SingleThreadInMemTransportFactory","void SingleThreadInMemTransportFactory()","io.spine.server.transport.memory.SingleThreadInMemTransportFactory.SingleThreadInMemTransportFactory"]},{"name":"void StorageConverter(TypeUrl entityStateType, EntityFactory<E> factory, FieldMask fieldMask)","description":"io.spine.server.entity.StorageConverter.StorageConverter","location":"server/io.spine.server.entity/-storage-converter/-storage-converter.html","searchKeys":["StorageConverter","void StorageConverter(TypeUrl entityStateType, EntityFactory<E> factory, FieldMask fieldMask)","io.spine.server.entity.StorageConverter.StorageConverter"]},{"name":"void Subscriber(ChannelId id)","description":"io.spine.server.transport.Subscriber.Subscriber","location":"server/io.spine.server.transport/-subscriber/-subscriber.html","searchKeys":["Subscriber","void Subscriber(ChannelId id)","io.spine.server.transport.Subscriber.Subscriber"]},{"name":"void SubscriberHub(TransportFactory transportFactory)","description":"io.spine.server.transport.SubscriberHub.SubscriberHub","location":"server/io.spine.server.transport/-subscriber-hub/-subscriber-hub.html","searchKeys":["SubscriberHub","void SubscriberHub(TransportFactory transportFactory)","io.spine.server.transport.SubscriberHub.SubscriberHub"]},{"name":"void SubscriberMethod(Method method, ParameterSpec<EventEnvelope> parameterSpec)","description":"io.spine.server.event.model.SubscriberMethod.SubscriberMethod","location":"server/io.spine.server.event.model/-subscriber-method/-subscriber-method.html","searchKeys":["SubscriberMethod","void SubscriberMethod(Method method, ParameterSpec<EventEnvelope> parameterSpec)","io.spine.server.event.model.SubscriberMethod.SubscriberMethod"]},{"name":"void SubscriberSignature()","description":"io.spine.server.event.model.SubscriberSignature.SubscriberSignature","location":"server/io.spine.server.event.model/-subscriber-signature/-subscriber-signature.html","searchKeys":["SubscriberSignature","void SubscriberSignature()","io.spine.server.event.model.SubscriberSignature.SubscriberSignature"]},{"name":"void SubscriptionOperation(Subscription subscription)","description":"io.spine.server.tenant.SubscriptionOperation.SubscriptionOperation","location":"server/io.spine.server.tenant/-subscription-operation/-subscription-operation.html","searchKeys":["SubscriptionOperation","void SubscriptionOperation(Subscription subscription)","io.spine.server.tenant.SubscriptionOperation.SubscriptionOperation"]},{"name":"void TenantAwareFunction()","description":"io.spine.server.tenant.TenantAwareFunction.TenantAwareFunction","location":"server/io.spine.server.tenant/-tenant-aware-function/-tenant-aware-function.html","searchKeys":["TenantAwareFunction","void TenantAwareFunction()","io.spine.server.tenant.TenantAwareFunction.TenantAwareFunction"]},{"name":"void TenantAwareFunction(TenantId tenantId)","description":"io.spine.server.tenant.TenantAwareFunction.TenantAwareFunction","location":"server/io.spine.server.tenant/-tenant-aware-function/-tenant-aware-function.html","searchKeys":["TenantAwareFunction","void TenantAwareFunction(TenantId tenantId)","io.spine.server.tenant.TenantAwareFunction.TenantAwareFunction"]},{"name":"void TenantAwareFunction0()","description":"io.spine.server.tenant.TenantAwareFunction0.TenantAwareFunction0","location":"server/io.spine.server.tenant/-tenant-aware-function0/-tenant-aware-function0.html","searchKeys":["TenantAwareFunction0","void TenantAwareFunction0()","io.spine.server.tenant.TenantAwareFunction0.TenantAwareFunction0"]},{"name":"void TenantAwareFunction0(TenantId tenantId)","description":"io.spine.server.tenant.TenantAwareFunction0.TenantAwareFunction0","location":"server/io.spine.server.tenant/-tenant-aware-function0/-tenant-aware-function0.html","searchKeys":["TenantAwareFunction0","void TenantAwareFunction0(TenantId tenantId)","io.spine.server.tenant.TenantAwareFunction0.TenantAwareFunction0"]},{"name":"void TenantAwareOperation()","description":"io.spine.server.tenant.TenantAwareOperation.TenantAwareOperation","location":"server/io.spine.server.tenant/-tenant-aware-operation/-tenant-aware-operation.html","searchKeys":["TenantAwareOperation","void TenantAwareOperation()","io.spine.server.tenant.TenantAwareOperation.TenantAwareOperation"]},{"name":"void TenantAwareOperation(TenantId tenantId)","description":"io.spine.server.tenant.TenantAwareOperation.TenantAwareOperation","location":"server/io.spine.server.tenant/-tenant-aware-operation/-tenant-aware-operation.html","searchKeys":["TenantAwareOperation","void TenantAwareOperation(TenantId tenantId)","io.spine.server.tenant.TenantAwareOperation.TenantAwareOperation"]},{"name":"void TenantFunction(boolean multitenant)","description":"io.spine.server.tenant.TenantFunction.TenantFunction","location":"server/io.spine.server.tenant/-tenant-function/-tenant-function.html","searchKeys":["TenantFunction","void TenantFunction(boolean multitenant)","io.spine.server.tenant.TenantFunction.TenantFunction"]},{"name":"void TenantRepository.Entity(TenantId id)","description":"io.spine.server.tenant.TenantRepository.Entity.TenantRepository.Entity","location":"server/io.spine.server.tenant/-tenant-repository/-entity/-tenant-repository.-entity.html","searchKeys":["Entity","void TenantRepository.Entity(TenantId id)","io.spine.server.tenant.TenantRepository.Entity.TenantRepository.Entity"]},{"name":"void TenantRepository.Entity(TenantId id, Function<TenantId, T> defaultState)","description":"io.spine.server.tenant.TenantRepository.Entity.TenantRepository.Entity","location":"server/io.spine.server.tenant/-tenant-repository/-entity/-tenant-repository.-entity.html","searchKeys":["Entity","void TenantRepository.Entity(TenantId id, Function<TenantId, T> defaultState)","io.spine.server.tenant.TenantRepository.Entity.TenantRepository.Entity"]},{"name":"void TraceEventObserver(ContextSpec context, TracerFactory tracing)","description":"io.spine.system.server.TraceEventObserver.TraceEventObserver","location":"server/io.spine.system.server/-trace-event-observer/-trace-event-observer.html","searchKeys":["TraceEventObserver","void TraceEventObserver(ContextSpec context, TracerFactory tracing)","io.spine.system.server.TraceEventObserver.TraceEventObserver"]},{"name":"void Transaction(E entity)","description":"io.spine.server.entity.Transaction.Transaction","location":"server/io.spine.server.entity/-transaction/-transaction.html","searchKeys":["Transaction","void Transaction(E entity)","io.spine.server.entity.Transaction.Transaction"]},{"name":"void Transaction(E entity, S state, Version version)","description":"io.spine.server.entity.Transaction.Transaction","location":"server/io.spine.server.entity/-transaction/-transaction.html","searchKeys":["Transaction","void Transaction(E entity, S state, Version version)","io.spine.server.entity.Transaction.Transaction"]},{"name":"void TransactionalEntity()","description":"io.spine.server.entity.TransactionalEntity.TransactionalEntity","location":"server/io.spine.server.entity/-transactional-entity/-transactional-entity.html","searchKeys":["TransactionalEntity","void TransactionalEntity()","io.spine.server.entity.TransactionalEntity.TransactionalEntity"]},{"name":"void TransactionalEntity(I id)","description":"io.spine.server.entity.TransactionalEntity.TransactionalEntity","location":"server/io.spine.server.entity/-transactional-entity/-transactional-entity.html","searchKeys":["TransactionalEntity","void TransactionalEntity(I id)","io.spine.server.entity.TransactionalEntity.TransactionalEntity"]},{"name":"void Tuple(Array<Object> values)","description":"io.spine.server.tuple.Tuple.Tuple","location":"server/io.spine.server.tuple/-tuple/-tuple.html","searchKeys":["Tuple","void Tuple(Array<Object> values)","io.spine.server.tuple.Tuple.Tuple"]},{"name":"void UnicastBus(BusBuilder<? extends Object, T, E, C, D> builder)","description":"io.spine.server.bus.UnicastBus.UnicastBus","location":"server/io.spine.server.bus/-unicast-bus/-unicast-bus.html","searchKeys":["UnicastBus","void UnicastBus(BusBuilder<? extends Object, T, E, C, D> builder)","io.spine.server.bus.UnicastBus.UnicastBus"]},{"name":"void UnknownEntityTypeException(TypeUrl type)","description":"io.spine.server.model.UnknownEntityTypeException.UnknownEntityTypeException","location":"server/io.spine.server.model/-unknown-entity-type-exception/-unknown-entity-type-exception.html","searchKeys":["UnknownEntityTypeException","void UnknownEntityTypeException(TypeUrl type)","io.spine.server.model.UnknownEntityTypeException.UnknownEntityTypeException"]},{"name":"void UnsupportedCommandException(Command command)","description":"io.spine.server.commandbus.UnsupportedCommandException.UnsupportedCommandException","location":"server/io.spine.server.commandbus/-unsupported-command-exception/-unsupported-command-exception.html","searchKeys":["UnsupportedCommandException","void UnsupportedCommandException(Command command)","io.spine.server.commandbus.UnsupportedCommandException.UnsupportedCommandException"]},{"name":"void UnsupportedEventException(EventMessage eventMsg)","description":"io.spine.server.event.UnsupportedEventException.UnsupportedEventException","location":"server/io.spine.server.event/-unsupported-event-exception/-unsupported-event-exception.html","searchKeys":["UnsupportedEventException","void UnsupportedEventException(EventMessage eventMsg)","io.spine.server.event.UnsupportedEventException.UnsupportedEventException"]},{"name":"void UnsupportedExternalMessageException(Message externalMessage)","description":"io.spine.server.integration.UnsupportedExternalMessageException.UnsupportedExternalMessageException","location":"server/io.spine.server.integration/-unsupported-external-message-exception/-unsupported-external-message-exception.html","searchKeys":["UnsupportedExternalMessageException","void UnsupportedExternalMessageException(Message externalMessage)","io.spine.server.integration.UnsupportedExternalMessageException.UnsupportedExternalMessageException"]},{"name":"void activate(Subscription subscription, StreamObserver<SubscriptionUpdate> observer)","description":"io.spine.server.SubscriptionService.activate","location":"server/io.spine.server/-subscription-service/activate.html","searchKeys":["activate","void activate(Subscription subscription, StreamObserver<SubscriptionUpdate> observer)","io.spine.server.SubscriptionService.activate"]},{"name":"void activate(Subscription subscription, SubscriptionCallback callback, StreamObserver<Response> responseObserver)","description":"io.spine.server.stand.Stand.activate","location":"server/io.spine.server.stand/-stand/activate.html","searchKeys":["activate","void activate(Subscription subscription, SubscriptionCallback callback, StreamObserver<Response> responseObserver)","io.spine.server.stand.Stand.activate"]},{"name":"void add(Class<? extends Object> cls)","description":"io.spine.server.command.model.DuplicateHandlerCheck.add","location":"server/io.spine.server.command.model/-duplicate-handler-check/add.html","searchKeys":["add","void add(Class<? extends Object> cls)","io.spine.server.command.model.DuplicateHandlerCheck.add"]},{"name":"void addObserver(StreamObserver<ExternalMessage> observer)","description":"io.spine.server.transport.Subscriber.addObserver","location":"server/io.spine.server.transport/-subscriber/add-observer.html","searchKeys":["addObserver","void addObserver(StreamObserver<ExternalMessage> observer)","io.spine.server.transport.Subscriber.addObserver"]},{"name":"void addShutdownHook()","description":"io.spine.server.GrpcContainer.addShutdownHook","location":"server/io.spine.server/-grpc-container/add-shutdown-hook.html","searchKeys":["addShutdownHook","void addShutdownHook()","io.spine.server.GrpcContainer.addShutdownHook"]},{"name":"void afterDispatched(I entityId)","description":"io.spine.server.procman.PmCommandEndpoint.afterDispatched","location":"server/io.spine.server.procman/-pm-command-endpoint/after-dispatched.html","searchKeys":["afterDispatched","void afterDispatched(I entityId)","io.spine.server.procman.PmCommandEndpoint.afterDispatched"]},{"name":"void afterDispatched(I entityId)","description":"io.spine.server.procman.PmEventEndpoint.afterDispatched","location":"server/io.spine.server.procman/-pm-event-endpoint/after-dispatched.html","searchKeys":["afterDispatched","void afterDispatched(I entityId)","io.spine.server.procman.PmEventEndpoint.afterDispatched"]},{"name":"void afterDispatched(I entityId)","description":"io.spine.server.projection.ProjectionEndpoint.afterDispatched","location":"server/io.spine.server.projection/-projection-endpoint/after-dispatched.html","searchKeys":["afterDispatched","void afterDispatched(I entityId)","io.spine.server.projection.ProjectionEndpoint.afterDispatched"]},{"name":"void afterInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","description":"io.spine.server.entity.AbstractEntity.afterInvoke","location":"server/io.spine.server.entity/-abstract-entity/after-invoke.html","searchKeys":["afterInvoke","void afterInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","io.spine.server.entity.AbstractEntity.afterInvoke"]},{"name":"void append(Event event)","description":"io.spine.server.event.store.DefaultEventStore.append","location":"server/io.spine.server.event.store/-default-event-store/append.html","searchKeys":["append","void append(Event event)","io.spine.server.event.store.DefaultEventStore.append"]},{"name":"void append(Event event)","description":"io.spine.server.event.store.EmptyEventStore.append","location":"server/io.spine.server.event.store/-empty-event-store/append.html","searchKeys":["append","void append(Event event)","io.spine.server.event.store.EmptyEventStore.append"]},{"name":"void appendAll(Iterable<Event> events)","description":"io.spine.server.event.store.DefaultEventStore.appendAll","location":"server/io.spine.server.event.store/-default-event-store/append-all.html","searchKeys":["appendAll","void appendAll(Iterable<Event> events)","io.spine.server.event.store.DefaultEventStore.appendAll"]},{"name":"void appendAll(Iterable<Event> events)","description":"io.spine.server.event.store.EmptyEventStore.appendAll","location":"server/io.spine.server.event.store/-empty-event-store/append-all.html","searchKeys":["appendAll","void appendAll(Iterable<Event> events)","io.spine.server.event.store.EmptyEventStore.appendAll"]},{"name":"void awaitTermination()","description":"io.spine.server.GrpcContainer.awaitTermination","location":"server/io.spine.server/-grpc-container/await-termination.html","searchKeys":["awaitTermination","void awaitTermination()","io.spine.server.GrpcContainer.awaitTermination"]},{"name":"void awaitTermination()","description":"io.spine.server.Server.awaitTermination","location":"server/io.spine.server/-server/await-termination.html","searchKeys":["awaitTermination","void awaitTermination()","io.spine.server.Server.awaitTermination"]},{"name":"void beforeInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","description":"io.spine.server.entity.AbstractEntity.beforeInvoke","location":"server/io.spine.server.entity/-abstract-entity/before-invoke.html","searchKeys":["beforeInvoke","void beforeInvoke(HandlerMethod<? extends Object, ? extends Object, ? extends Object, ? extends Object> method)","io.spine.server.entity.AbstractEntity.beforeInvoke"]},{"name":"void cancel(Subscription subscription, StreamObserver<Response> responseObserver)","description":"io.spine.server.SubscriptionService.cancel","location":"server/io.spine.server/-subscription-service/cancel.html","searchKeys":["cancel","void cancel(Subscription subscription, StreamObserver<Response> responseObserver)","io.spine.server.SubscriptionService.cancel"]},{"name":"void cancel(Subscription subscription, StreamObserver<Response> responseObserver)","description":"io.spine.server.stand.Stand.cancel","location":"server/io.spine.server.stand/-stand/cancel.html","searchKeys":["cancel","void cancel(Subscription subscription, StreamObserver<Response> responseObserver)","io.spine.server.stand.Stand.cancel"]},{"name":"void check(Iterable<Class<? extends Object>> classes)","description":"io.spine.server.command.model.DuplicateHandlerCheck.check","location":"server/io.spine.server.command.model/-duplicate-handler-check/check.html","searchKeys":["check","void check(Iterable<Class<? extends Object>> classes)","io.spine.server.command.model.DuplicateHandlerCheck.check"]},{"name":"void checkAttributesMatch(EventEnvelope envelope)","description":"io.spine.server.command.model.CommandReactionMethod.checkAttributesMatch","location":"server/io.spine.server.command.model/-command-reaction-method/check-attributes-match.html","searchKeys":["checkAttributesMatch","void checkAttributesMatch(EventEnvelope envelope)","io.spine.server.command.model.CommandReactionMethod.checkAttributesMatch"]},{"name":"void checkAttributesMatch(EventEnvelope event)","description":"io.spine.server.event.model.EventHandlerMethod.checkAttributesMatch","location":"server/io.spine.server.event.model/-event-handler-method/check-attributes-match.html","searchKeys":["checkAttributesMatch","void checkAttributesMatch(EventEnvelope event)","io.spine.server.event.model.EventHandlerMethod.checkAttributesMatch"]},{"name":"void checkAttributesMatch(EventEnvelope event)","description":"io.spine.server.event.model.EventSubscriberMethod.checkAttributesMatch","location":"server/io.spine.server.event.model/-event-subscriber-method/check-attributes-match.html","searchKeys":["checkAttributesMatch","void checkAttributesMatch(EventEnvelope event)","io.spine.server.event.model.EventSubscriberMethod.checkAttributesMatch"]},{"name":"void checkAttributesMatch(E envelope)","description":"io.spine.server.model.AbstractHandlerMethod.checkAttributesMatch","location":"server/io.spine.server.model/-abstract-handler-method/check-attributes-match.html","searchKeys":["checkAttributesMatch","void checkAttributesMatch(E envelope)","io.spine.server.model.AbstractHandlerMethod.checkAttributesMatch"]},{"name":"void checkDispatcher(D dispatcher)","description":"io.spine.server.bus.DispatcherRegistry.checkDispatcher","location":"server/io.spine.server.bus/-dispatcher-registry/check-dispatcher.html","searchKeys":["checkDispatcher","void checkDispatcher(D dispatcher)","io.spine.server.bus.DispatcherRegistry.checkDispatcher"]},{"name":"void checkFieldsSet()","description":"io.spine.server.bus.BusBuilder.checkFieldsSet","location":"server/io.spine.server.bus/-bus-builder/check-fields-set.html","searchKeys":["checkFieldsSet","void checkFieldsSet()","io.spine.server.bus.BusBuilder.checkFieldsSet"]},{"name":"void checkNotArchived()","description":"io.spine.server.entity.AbstractEntity.checkNotArchived","location":"server/io.spine.server.entity/-abstract-entity/check-not-archived.html","searchKeys":["checkNotArchived","void checkNotArchived()","io.spine.server.entity.AbstractEntity.checkNotArchived"]},{"name":"void checkNotClosed()","description":"io.spine.server.aggregate.AggregateStorage.checkNotClosed","location":"server/io.spine.server.aggregate/-aggregate-storage/check-not-closed.html","searchKeys":["checkNotClosed","void checkNotClosed()","io.spine.server.aggregate.AggregateStorage.checkNotClosed"]},{"name":"void checkNotClosed()","description":"io.spine.server.storage.AbstractStorage.checkNotClosed","location":"server/io.spine.server.storage/-abstract-storage/check-not-closed.html","searchKeys":["checkNotClosed","void checkNotClosed()","io.spine.server.storage.AbstractStorage.checkNotClosed"]},{"name":"void checkNotClosed(String message)","description":"io.spine.server.storage.AbstractStorage.checkNotClosed","location":"server/io.spine.server.storage/-abstract-storage/check-not-closed.html","searchKeys":["checkNotClosed","void checkNotClosed(String message)","io.spine.server.storage.AbstractStorage.checkNotClosed"]},{"name":"void checkNotDeleted()","description":"io.spine.server.entity.AbstractEntity.checkNotDeleted","location":"server/io.spine.server.entity/-abstract-entity/check-not-deleted.html","searchKeys":["checkNotDeleted","void checkNotDeleted()","io.spine.server.entity.AbstractEntity.checkNotDeleted"]},{"name":"void checkNotRegistered()","description":"io.spine.server.ContextAware.checkNotRegistered","location":"server/io.spine.server/-context-aware/check-not-registered.html","searchKeys":["checkNotRegistered","void checkNotRegistered()","io.spine.server.ContextAware.checkNotRegistered"]},{"name":"void checkOpen()","description":"io.spine.server.Closeable.checkOpen","location":"server/io.spine.server/-closeable/check-open.html","searchKeys":["checkOpen","void checkOpen()","io.spine.server.Closeable.checkOpen"]},{"name":"void checkPackagePrivate(String warningMessageFormat)","description":"io.spine.server.model.MethodAccessChecker.checkPackagePrivate","location":"server/io.spine.server.model/-method-access-checker/check-package-private.html","searchKeys":["checkPackagePrivate","void checkPackagePrivate(String warningMessageFormat)","io.spine.server.model.MethodAccessChecker.checkPackagePrivate"]},{"name":"void checkPrivate(String warningMessageFormat)","description":"io.spine.server.model.MethodAccessChecker.checkPrivate","location":"server/io.spine.server.model/-method-access-checker/check-private.html","searchKeys":["checkPrivate","void checkPrivate(String warningMessageFormat)","io.spine.server.model.MethodAccessChecker.checkPrivate"]},{"name":"void checkPublic(String warningMessageFormat)","description":"io.spine.server.model.MethodAccessChecker.checkPublic","location":"server/io.spine.server.model/-method-access-checker/check-public.html","searchKeys":["checkPublic","void checkPublic(String warningMessageFormat)","io.spine.server.model.MethodAccessChecker.checkPublic"]},{"name":"void checkRegistered()","description":"io.spine.server.ContextAware.checkRegistered","location":"server/io.spine.server/-context-aware/check-registered.html","searchKeys":["checkRegistered","void checkRegistered()","io.spine.server.ContextAware.checkRegistered"]},{"name":"void clearNode(ShardSessionRecord session)","description":"io.spine.server.delivery.AbstractWorkRegistry.clearNode","location":"server/io.spine.server.delivery/-abstract-work-registry/clear-node.html","searchKeys":["clearNode","void clearNode(ShardSessionRecord session)","io.spine.server.delivery.AbstractWorkRegistry.clearNode"]},{"name":"void clearRecentHistory()","description":"io.spine.server.entity.TransactionalEntity.clearRecentHistory","location":"server/io.spine.server.entity/-transactional-entity/clear-recent-history.html","searchKeys":["clearRecentHistory","void clearRecentHistory()","io.spine.server.entity.TransactionalEntity.clearRecentHistory"]},{"name":"void close()","description":"io.spine.server.BoundedContext.close","location":"server/io.spine.server/-bounded-context/close.html","searchKeys":["close","void close()","io.spine.server.BoundedContext.close"]},{"name":"void close()","description":"io.spine.server.ServerEnvironment.close","location":"server/io.spine.server/-server-environment/close.html","searchKeys":["close","void close()","io.spine.server.ServerEnvironment.close"]},{"name":"void close()","description":"io.spine.server.aggregate.AggregateRepository.close","location":"server/io.spine.server.aggregate/-aggregate-repository/close.html","searchKeys":["close","void close()","io.spine.server.aggregate.AggregateRepository.close"]},{"name":"void close()","description":"io.spine.server.bus.Bus.close","location":"server/io.spine.server.bus/-bus/close.html","searchKeys":["close","void close()","io.spine.server.bus.Bus.close"]},{"name":"void close()","description":"io.spine.server.bus.BusFilter.close","location":"server/io.spine.server.bus/-bus-filter/close.html","searchKeys":["close","void close()","io.spine.server.bus.BusFilter.close"]},{"name":"void close()","description":"io.spine.server.commandbus.CommandScheduler.close","location":"server/io.spine.server.commandbus/-command-scheduler/close.html","searchKeys":["close","void close()","io.spine.server.commandbus.CommandScheduler.close"]},{"name":"void close()","description":"io.spine.server.entity.Repository.close","location":"server/io.spine.server.entity/-repository/close.html","searchKeys":["close","void close()","io.spine.server.entity.Repository.close"]},{"name":"void close()","description":"io.spine.server.event.EventBus.close","location":"server/io.spine.server.event/-event-bus/close.html","searchKeys":["close","void close()","io.spine.server.event.EventBus.close"]},{"name":"void close()","description":"io.spine.server.event.store.EmptyEventStore.close","location":"server/io.spine.server.event.store/-empty-event-store/close.html","searchKeys":["close","void close()","io.spine.server.event.store.EmptyEventStore.close"]},{"name":"void close()","description":"io.spine.server.integration.IntegrationBroker.close","location":"server/io.spine.server.integration/-integration-broker/close.html","searchKeys":["close","void close()","io.spine.server.integration.IntegrationBroker.close"]},{"name":"void close()","description":"io.spine.server.integration.ThirdPartyContext.close","location":"server/io.spine.server.integration/-third-party-context/close.html","searchKeys":["close","void close()","io.spine.server.integration.ThirdPartyContext.close"]},{"name":"void close()","description":"io.spine.server.procman.ProcessManagerRepository.close","location":"server/io.spine.server.procman/-process-manager-repository/close.html","searchKeys":["close","void close()","io.spine.server.procman.ProcessManagerRepository.close"]},{"name":"void close()","description":"io.spine.server.projection.ProjectionRepository.close","location":"server/io.spine.server.projection/-projection-repository/close.html","searchKeys":["close","void close()","io.spine.server.projection.ProjectionRepository.close"]},{"name":"void close()","description":"io.spine.server.stand.Stand.close","location":"server/io.spine.server.stand/-stand/close.html","searchKeys":["close","void close()","io.spine.server.stand.Stand.close"]},{"name":"void close()","description":"io.spine.server.storage.AbstractStorage.close","location":"server/io.spine.server.storage/-abstract-storage/close.html","searchKeys":["close","void close()","io.spine.server.storage.AbstractStorage.close"]},{"name":"void close()","description":"io.spine.server.storage.memory.InMemoryProjectionStorage.close","location":"server/io.spine.server.storage.memory/-in-memory-projection-storage/close.html","searchKeys":["close","void close()","io.spine.server.storage.memory.InMemoryProjectionStorage.close"]},{"name":"void close()","description":"io.spine.server.storage.memory.InMemoryStorageFactory.close","location":"server/io.spine.server.storage.memory/-in-memory-storage-factory/close.html","searchKeys":["close","void close()","io.spine.server.storage.memory.InMemoryStorageFactory.close"]},{"name":"void close()","description":"io.spine.server.storage.system.SystemAwareStorageFactory.close","location":"server/io.spine.server.storage.system/-system-aware-storage-factory/close.html","searchKeys":["close","void close()","io.spine.server.storage.system.SystemAwareStorageFactory.close"]},{"name":"void close()","description":"io.spine.server.transport.ChannelHub.close","location":"server/io.spine.server.transport/-channel-hub/close.html","searchKeys":["close","void close()","io.spine.server.transport.ChannelHub.close"]},{"name":"void close()","description":"io.spine.server.transport.Subscriber.close","location":"server/io.spine.server.transport/-subscriber/close.html","searchKeys":["close","void close()","io.spine.server.transport.Subscriber.close"]},{"name":"void close()","description":"io.spine.server.transport.memory.InMemoryPublisher.close","location":"server/io.spine.server.transport.memory/-in-memory-publisher/close.html","searchKeys":["close","void close()","io.spine.server.transport.memory.InMemoryPublisher.close"]},{"name":"void closeStaleChannels()","description":"io.spine.server.transport.ChannelHub.closeStaleChannels","location":"server/io.spine.server.transport/-channel-hub/close-stale-channels.html","searchKeys":["closeStaleChannels","void closeStaleChannels()","io.spine.server.transport.ChannelHub.closeStaleChannels"]},{"name":"void closeSystemContext()","description":"io.spine.system.server.NoOpSystemClient.closeSystemContext","location":"server/io.spine.system.server/-no-op-system-client/close-system-context.html","searchKeys":["closeSystemContext","void closeSystemContext()","io.spine.system.server.NoOpSystemClient.closeSystemContext"]},{"name":"void complete()","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.InMemoryShardSession.complete","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/-in-memory-shard-session/complete.html","searchKeys":["complete","void complete()","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.InMemoryShardSession.complete"]},{"name":"void configure(P processManager)","description":"io.spine.server.procman.ProcessManagerRepository.configure","location":"server/io.spine.server.procman/-process-manager-repository/configure.html","searchKeys":["configure","void configure(P processManager)","io.spine.server.procman.ProcessManagerRepository.configure"]},{"name":"void configureDeployment(Supplier<DeploymentType> supplier)","description":"io.spine.server.ServerEnvironment.configureDeployment","location":"server/io.spine.server/-server-environment/configure-deployment.html","searchKeys":["configureDeployment","void configureDeployment(Supplier<DeploymentType> supplier)","io.spine.server.ServerEnvironment.configureDeployment"]},{"name":"void dispatch(CommandEnvelope command)","description":"io.spine.server.command.AbstractCommander.dispatch","location":"server/io.spine.server.command/-abstract-commander/dispatch.html","searchKeys":["dispatch","void dispatch(CommandEnvelope command)","io.spine.server.command.AbstractCommander.dispatch"]},{"name":"void dispatch(CommandEnvelope command)","description":"io.spine.server.commandbus.CommandBus.dispatch","location":"server/io.spine.server.commandbus/-command-bus/dispatch.html","searchKeys":["dispatch","void dispatch(CommandEnvelope command)","io.spine.server.commandbus.CommandBus.dispatch"]},{"name":"void dispatch(CommandEnvelope envelope)","description":"io.spine.server.command.AbstractCommandHandler.dispatch","location":"server/io.spine.server.command/-abstract-command-handler/dispatch.html","searchKeys":["dispatch","void dispatch(CommandEnvelope envelope)","io.spine.server.command.AbstractCommandHandler.dispatch"]},{"name":"void dispatch(EventEnvelope event)","description":"io.spine.server.aggregate.EventImportDispatcher.dispatch","location":"server/io.spine.server.aggregate/-event-import-dispatcher/dispatch.html","searchKeys":["dispatch","void dispatch(EventEnvelope event)","io.spine.server.aggregate.EventImportDispatcher.dispatch"]},{"name":"void dispatch(EventEnvelope event)","description":"io.spine.server.aggregate.ImportBus.dispatch","location":"server/io.spine.server.aggregate/-import-bus/dispatch.html","searchKeys":["dispatch","void dispatch(EventEnvelope event)","io.spine.server.aggregate.ImportBus.dispatch"]},{"name":"void dispatch(EventEnvelope event)","description":"io.spine.server.event.AbstractEventReactor.dispatch","location":"server/io.spine.server.event/-abstract-event-reactor/dispatch.html","searchKeys":["dispatch","void dispatch(EventEnvelope event)","io.spine.server.event.AbstractEventReactor.dispatch"]},{"name":"void dispatch(EventEnvelope event)","description":"io.spine.server.event.AbstractStatefulReactor.dispatch","location":"server/io.spine.server.event/-abstract-stateful-reactor/dispatch.html","searchKeys":["dispatch","void dispatch(EventEnvelope event)","io.spine.server.event.AbstractStatefulReactor.dispatch"]},{"name":"void dispatch(EventEnvelope event)","description":"io.spine.server.event.DelegatingEventDispatcher.dispatch","location":"server/io.spine.server.event/-delegating-event-dispatcher/dispatch.html","searchKeys":["dispatch","void dispatch(EventEnvelope event)","io.spine.server.event.DelegatingEventDispatcher.dispatch"]},{"name":"void dispatch(EventEnvelope event)","description":"io.spine.server.event.EventBus.dispatch","location":"server/io.spine.server.event/-event-bus/dispatch.html","searchKeys":["dispatch","void dispatch(EventEnvelope event)","io.spine.server.event.EventBus.dispatch"]},{"name":"void dispatchEvent(EventEnvelope event)","description":"io.spine.server.aggregate.AggregateRepository.dispatchEvent","location":"server/io.spine.server.aggregate/-aggregate-repository/dispatch-event.html","searchKeys":["dispatchEvent","void dispatchEvent(EventEnvelope event)","io.spine.server.aggregate.AggregateRepository.dispatchEvent"]},{"name":"void dispatchEvent(EventEnvelope event)","description":"io.spine.server.command.AbstractCommander.dispatchEvent","location":"server/io.spine.server.command/-abstract-commander/dispatch-event.html","searchKeys":["dispatchEvent","void dispatchEvent(EventEnvelope event)","io.spine.server.command.AbstractCommander.dispatchEvent"]},{"name":"void dispatchTo(I entityId)","description":"io.spine.server.projection.ProjectionEndpoint.dispatchTo","location":"server/io.spine.server.projection/-projection-endpoint/dispatch-to.html","searchKeys":["dispatchTo","void dispatchTo(I entityId)","io.spine.server.projection.ProjectionEndpoint.dispatchTo"]},{"name":"void doSchedule(Command command)","description":"io.spine.server.commandbus.ExecutorCommandScheduler.doSchedule","location":"server/io.spine.server.commandbus/-executor-command-scheduler/do-schedule.html","searchKeys":["doSchedule","void doSchedule(Command command)","io.spine.server.commandbus.ExecutorCommandScheduler.doSchedule"]},{"name":"void doStore(A aggregate)","description":"io.spine.server.aggregate.AggregateRepository.doStore","location":"server/io.spine.server.aggregate/-aggregate-repository/do-store.html","searchKeys":["doStore","void doStore(A aggregate)","io.spine.server.aggregate.AggregateRepository.doStore"]},{"name":"void emittedEvent(EventMessage eventMessage, ActorContext actorContext)","description":"io.spine.server.integration.ThirdPartyContext.emittedEvent","location":"server/io.spine.server.integration/-third-party-context/emitted-event.html","searchKeys":["emittedEvent","void emittedEvent(EventMessage eventMessage, ActorContext actorContext)","io.spine.server.integration.ThirdPartyContext.emittedEvent"]},{"name":"void emittedEvent(EventMessage eventMessage, UserId userId)","description":"io.spine.server.integration.ThirdPartyContext.emittedEvent","location":"server/io.spine.server.integration/-third-party-context/emitted-event.html","searchKeys":["emittedEvent","void emittedEvent(EventMessage eventMessage, UserId userId)","io.spine.server.integration.ThirdPartyContext.emittedEvent"]},{"name":"void ensureExternalMatch(boolean expectedValue)","description":"io.spine.server.model.HandlerMethod.ensureExternalMatch","location":"server/io.spine.server.model/-handler-method/ensure-external-match.html","searchKeys":["ensureExternalMatch","void ensureExternalMatch(boolean expectedValue)","io.spine.server.model.HandlerMethod.ensureExternalMatch"]},{"name":"void execute()","description":"io.spine.server.tenant.TenantAwareOperation.execute","location":"server/io.spine.server.tenant/-tenant-aware-operation/execute.html","searchKeys":["execute","void execute()","io.spine.server.tenant.TenantAwareOperation.execute"]},{"name":"void execute(Query query, StreamObserver<QueryResponse> responseObserver)","description":"io.spine.server.stand.Stand.execute","location":"server/io.spine.server.stand/-stand/execute.html","searchKeys":["execute","void execute(Query query, StreamObserver<QueryResponse> responseObserver)","io.spine.server.stand.Stand.execute"]},{"name":"void handle(EventEnvelope event)","description":"io.spine.server.event.AbstractEventSubscriber.handle","location":"server/io.spine.server.event/-abstract-event-subscriber/handle.html","searchKeys":["handle","void handle(EventEnvelope event)","io.spine.server.event.AbstractEventSubscriber.handle"]},{"name":"void initObservers(EventBus eventBus)","description":"io.spine.server.commandbus.CommandBus.initObservers","location":"server/io.spine.server.commandbus/-command-bus/init-observers.html","searchKeys":["initObservers","void initObservers(EventBus eventBus)","io.spine.server.commandbus.CommandBus.initObservers"]},{"name":"void injectEnricher(EventEnricher enricher)","description":"io.spine.server.event.EventBus.Builder.injectEnricher","location":"server/io.spine.server.event/-event-bus/-builder/inject-enricher.html","searchKeys":["injectEnricher","void injectEnricher(EventEnricher enricher)","io.spine.server.event.EventBus.Builder.injectEnricher"]},{"name":"void injectServer(Server server)","description":"io.spine.server.GrpcContainer.injectServer","location":"server/io.spine.server/-grpc-container/inject-server.html","searchKeys":["injectServer","void injectServer(Server server)","io.spine.server.GrpcContainer.injectServer"]},{"name":"void onAfterCommit(EntityRecordChange change)","description":"io.spine.server.entity.EntityLifecycleMonitor.onAfterCommit","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/on-after-commit.html","searchKeys":["onAfterCommit","void onAfterCommit(EntityRecordChange change)","io.spine.server.entity.EntityLifecycleMonitor.onAfterCommit"]},{"name":"void onAfterPhase(Phase<I> phase)","description":"io.spine.server.entity.EntityLifecycleMonitor.onAfterPhase","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/on-after-phase.html","searchKeys":["onAfterPhase","void onAfterPhase(Phase<I> phase)","io.spine.server.entity.EntityLifecycleMonitor.onAfterPhase"]},{"name":"void onBeforeCommit(EntityRecord entityRecord)","description":"io.spine.server.entity.EntityLifecycleMonitor.onBeforeCommit","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/on-before-commit.html","searchKeys":["onBeforeCommit","void onBeforeCommit(EntityRecord entityRecord)","io.spine.server.entity.EntityLifecycleMonitor.onBeforeCommit"]},{"name":"void onBeforePhase(Phase<I> phase)","description":"io.spine.server.entity.EntityLifecycleMonitor.onBeforePhase","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/on-before-phase.html","searchKeys":["onBeforePhase","void onBeforePhase(Phase<I> phase)","io.spine.server.entity.EntityLifecycleMonitor.onBeforePhase"]},{"name":"void onCompleted()","description":"io.spine.server.integration.AbstractChannelObserver.onCompleted","location":"server/io.spine.server.integration/-abstract-channel-observer/on-completed.html","searchKeys":["onCompleted","void onCompleted()","io.spine.server.integration.AbstractChannelObserver.onCompleted"]},{"name":"void onCorruptedState(BatchDispatchOutcome outcome)","description":"io.spine.server.entity.EntityLifecycle.onCorruptedState","location":"server/io.spine.server.entity/-entity-lifecycle/on-corrupted-state.html","searchKeys":["onCorruptedState","void onCorruptedState(BatchDispatchOutcome outcome)","io.spine.server.entity.EntityLifecycle.onCorruptedState"]},{"name":"void onDeliveryCompleted(DeliveryStats stats)","description":"io.spine.server.delivery.DeliveryMonitor.onDeliveryCompleted","location":"server/io.spine.server.delivery/-delivery-monitor/on-delivery-completed.html","searchKeys":["onDeliveryCompleted","void onDeliveryCompleted(DeliveryStats stats)","io.spine.server.delivery.DeliveryMonitor.onDeliveryCompleted"]},{"name":"void onDeliveryStarted(ShardIndex index)","description":"io.spine.server.delivery.DeliveryMonitor.onDeliveryStarted","location":"server/io.spine.server.delivery/-delivery-monitor/on-delivery-started.html","searchKeys":["onDeliveryStarted","void onDeliveryStarted(ShardIndex index)","io.spine.server.delivery.DeliveryMonitor.onDeliveryStarted"]},{"name":"void onDispatched(SignalId signal)","description":"io.spine.server.bus.Bus.onDispatched","location":"server/io.spine.server.bus/-bus/on-dispatched.html","searchKeys":["onDispatched","void onDispatched(SignalId signal)","io.spine.server.bus.Bus.onDispatched"]},{"name":"void onDispatchingStarted(SignalId signal)","description":"io.spine.server.bus.Bus.onDispatchingStarted","location":"server/io.spine.server.bus/-bus/on-dispatching-started.html","searchKeys":["onDispatchingStarted","void onDispatchingStarted(SignalId signal)","io.spine.server.bus.Bus.onDispatchingStarted"]},{"name":"void onDuplicate(I target, CommandEnvelope envelope)","description":"io.spine.server.delivery.CommandEndpoint.onDuplicate","location":"server/io.spine.server.delivery/-command-endpoint/on-duplicate.html","searchKeys":["onDuplicate","void onDuplicate(I target, CommandEnvelope envelope)","io.spine.server.delivery.CommandEndpoint.onDuplicate"]},{"name":"void onDuplicate(I target, EventEnvelope envelope)","description":"io.spine.server.delivery.EventEndpoint.onDuplicate","location":"server/io.spine.server.delivery/-event-endpoint/on-duplicate.html","searchKeys":["onDuplicate","void onDuplicate(I target, EventEnvelope envelope)","io.spine.server.delivery.EventEndpoint.onDuplicate"]},{"name":"void onDuplicateCommand(CommandEnvelope command)","description":"io.spine.server.entity.EntityLifecycle.onDuplicateCommand","location":"server/io.spine.server.entity/-entity-lifecycle/on-duplicate-command.html","searchKeys":["onDuplicateCommand","void onDuplicateCommand(CommandEnvelope command)","io.spine.server.entity.EntityLifecycle.onDuplicateCommand"]},{"name":"void onDuplicateEvent(EventEnvelope event)","description":"io.spine.server.entity.EntityLifecycle.onDuplicateEvent","location":"server/io.spine.server.entity/-entity-lifecycle/on-duplicate-event.html","searchKeys":["onDuplicateEvent","void onDuplicateEvent(EventEnvelope event)","io.spine.server.entity.EntityLifecycle.onDuplicateEvent"]},{"name":"void onEmptyResult(P entity)","description":"io.spine.server.projection.ProjectionEndpoint.onEmptyResult","location":"server/io.spine.server.projection/-projection-endpoint/on-empty-result.html","searchKeys":["onEmptyResult","void onEmptyResult(P entity)","io.spine.server.projection.ProjectionEndpoint.onEmptyResult"]},{"name":"void onEmptyResult(P pm)","description":"io.spine.server.procman.PmEventEndpoint.onEmptyResult","location":"server/io.spine.server.procman/-pm-event-endpoint/on-empty-result.html","searchKeys":["onEmptyResult","void onEmptyResult(P pm)","io.spine.server.procman.PmEventEndpoint.onEmptyResult"]},{"name":"void onEmptyResult(P processManager)","description":"io.spine.server.procman.PmCommandEndpoint.onEmptyResult","location":"server/io.spine.server.procman/-pm-command-endpoint/on-empty-result.html","searchKeys":["onEmptyResult","void onEmptyResult(P processManager)","io.spine.server.procman.PmCommandEndpoint.onEmptyResult"]},{"name":"void onError(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Error error)","description":"io.spine.server.command.AbstractCommandDispatcher.onError","location":"server/io.spine.server.command/-abstract-command-dispatcher/on-error.html","searchKeys":["onError","void onError(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Error error)","io.spine.server.command.AbstractCommandDispatcher.onError"]},{"name":"void onError(Throwable t)","description":"io.spine.server.integration.AbstractChannelObserver.onError","location":"server/io.spine.server.integration/-abstract-channel-observer/on-error.html","searchKeys":["onError","void onError(Throwable t)","io.spine.server.integration.AbstractChannelObserver.onError"]},{"name":"void onMessage(ExternalMessage message)","description":"io.spine.server.transport.Subscriber.onMessage","location":"server/io.spine.server.transport/-subscriber/on-message.html","searchKeys":["onMessage","void onMessage(ExternalMessage message)","io.spine.server.transport.Subscriber.onMessage"]},{"name":"void onMessage(InboxMessage update)","description":"io.spine.server.delivery.LocalDispatchingObserver.onMessage","location":"server/io.spine.server.delivery/-local-dispatching-observer/on-message.html","searchKeys":["onMessage","void onMessage(InboxMessage update)","io.spine.server.delivery.LocalDispatchingObserver.onMessage"]},{"name":"void onModified(P projection)","description":"io.spine.server.projection.ProjectionEndpoint.onModified","location":"server/io.spine.server.projection/-projection-endpoint/on-modified.html","searchKeys":["onModified","void onModified(P projection)","io.spine.server.projection.ProjectionEndpoint.onModified"]},{"name":"void onRegistered()","description":"io.spine.server.entity.Repository.onRegistered","location":"server/io.spine.server.entity/-repository/on-registered.html","searchKeys":["onRegistered","void onRegistered()","io.spine.server.entity.Repository.onRegistered"]},{"name":"void onRejection(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Event rejection)","description":"io.spine.server.command.AbstractCommandDispatcher.onRejection","location":"server/io.spine.server.command/-abstract-command-dispatcher/on-rejection.html","searchKeys":["onRejection","void onRejection(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Event rejection)","io.spine.server.command.AbstractCommandDispatcher.onRejection"]},{"name":"void onRoutingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> envelope, Throwable cause)","description":"io.spine.server.entity.Repository.onRoutingFailed","location":"server/io.spine.server.entity/-repository/on-routing-failed.html","searchKeys":["onRoutingFailed","void onRoutingFailed(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> envelope, Throwable cause)","io.spine.server.entity.Repository.onRoutingFailed"]},{"name":"void onTransactionFailed(Error cause, EntityRecord entityRecord)","description":"io.spine.server.entity.EntityLifecycleMonitor.onTransactionFailed","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/on-transaction-failed.html","searchKeys":["onTransactionFailed","void onTransactionFailed(Error cause, EntityRecord entityRecord)","io.spine.server.entity.EntityLifecycleMonitor.onTransactionFailed"]},{"name":"void onTransactionFailed(Event cause, EntityRecord entityRecord)","description":"io.spine.server.entity.EntityLifecycleMonitor.onTransactionFailed","location":"server/io.spine.server.entity/-entity-lifecycle-monitor/on-transaction-failed.html","searchKeys":["onTransactionFailed","void onTransactionFailed(Event cause, EntityRecord entityRecord)","io.spine.server.entity.EntityLifecycleMonitor.onTransactionFailed"]},{"name":"void post(Command command)","description":"io.spine.server.commandbus.CommandScheduler.post","location":"server/io.spine.server.commandbus/-command-scheduler/post.html","searchKeys":["post","void post(Command command)","io.spine.server.commandbus.CommandScheduler.post"]},{"name":"void post(Command request, StreamObserver<Ack> responseObserver)","description":"io.spine.server.CommandService.post","location":"server/io.spine.server/-command-service/post.html","searchKeys":["post","void post(Command request, StreamObserver<Ack> responseObserver)","io.spine.server.CommandService.post"]},{"name":"void postEvents(Collection<Event> events)","description":"io.spine.server.entity.EventProducingRepository.postEvents","location":"server/io.spine.server.entity/-event-producing-repository/post-events.html","searchKeys":["postEvents","void postEvents(Collection<Event> events)","io.spine.server.entity.EventProducingRepository.postEvents"]},{"name":"void postEvents(Iterable<Event> events)","description":"io.spine.server.command.AbstractCommandDispatcher.postEvents","location":"server/io.spine.server.command/-abstract-command-dispatcher/post-events.html","searchKeys":["postEvents","void postEvents(Iterable<Event> events)","io.spine.server.command.AbstractCommandDispatcher.postEvents"]},{"name":"void postIfCommandRejected(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Throwable cause)","description":"io.spine.server.entity.EventProducingRepository.postIfCommandRejected","location":"server/io.spine.server.entity/-event-producing-repository/post-if-command-rejected.html","searchKeys":["postIfCommandRejected","void postIfCommandRejected(SignalEnvelope<? extends Object, ? extends Object, ? extends Object> signal, Throwable cause)","io.spine.server.entity.EventProducingRepository.postIfCommandRejected"]},{"name":"void read(EventStreamQuery request, StreamObserver<Event> responseObserver)","description":"io.spine.server.event.store.DefaultEventStore.read","location":"server/io.spine.server.event.store/-default-event-store/read.html","searchKeys":["read","void read(EventStreamQuery request, StreamObserver<Event> responseObserver)","io.spine.server.event.store.DefaultEventStore.read"]},{"name":"void read(EventStreamQuery request, StreamObserver<Event> responseObserver)","description":"io.spine.server.event.store.EmptyEventStore.read","location":"server/io.spine.server.event.store/-empty-event-store/read.html","searchKeys":["read","void read(EventStreamQuery request, StreamObserver<Event> responseObserver)","io.spine.server.event.store.EmptyEventStore.read"]},{"name":"void read(Query query, StreamObserver<QueryResponse> responseObserver)","description":"io.spine.server.QueryService.read","location":"server/io.spine.server/-query-service/read.html","searchKeys":["read","void read(Query query, StreamObserver<QueryResponse> responseObserver)","io.spine.server.QueryService.read"]},{"name":"void register(AggregatePartRepository<? extends Object, ? extends Object, ? extends Object> repository)","description":"io.spine.server.aggregate.InMemoryRootDirectory.register","location":"server/io.spine.server.aggregate/-in-memory-root-directory/register.html","searchKeys":["register","void register(AggregatePartRepository<? extends Object, ? extends Object, ? extends Object> repository)","io.spine.server.aggregate.InMemoryRootDirectory.register"]},{"name":"void register(D dispatcher)","description":"io.spine.server.bus.Bus.register","location":"server/io.spine.server.bus/-bus/register.html","searchKeys":["register","void register(D dispatcher)","io.spine.server.bus.Bus.register"]},{"name":"void register(D dispatcher)","description":"io.spine.server.bus.DispatcherRegistry.register","location":"server/io.spine.server.bus/-dispatcher-registry/register.html","searchKeys":["register","void register(D dispatcher)","io.spine.server.bus.DispatcherRegistry.register"]},{"name":"void register(EventDispatcher dispatcher)","description":"io.spine.server.integration.IntegrationBroker.register","location":"server/io.spine.server.integration/-integration-broker/register.html","searchKeys":["register","void register(EventDispatcher dispatcher)","io.spine.server.integration.IntegrationBroker.register"]},{"name":"void register(EventDispatcher dispatcher)","description":"io.spine.system.server.NoOpSystemReadSide.register","location":"server/io.spine.system.server/-no-op-system-read-side/register.html","searchKeys":["register","void register(EventDispatcher dispatcher)","io.spine.system.server.NoOpSystemReadSide.register"]},{"name":"void registerCommandDispatcher(CommandDispatcher dispatcher)","description":"io.spine.server.BoundedContext.registerCommandDispatcher","location":"server/io.spine.server/-bounded-context/register-command-dispatcher.html","searchKeys":["registerCommandDispatcher","void registerCommandDispatcher(CommandDispatcher dispatcher)","io.spine.server.BoundedContext.registerCommandDispatcher"]},{"name":"void registerDispatchersIn(BoundedContext context)","description":"io.spine.server.delivery.Delivery.registerDispatchersIn","location":"server/io.spine.server.delivery/-delivery/register-dispatchers-in.html","searchKeys":["registerDispatchersIn","void registerDispatchersIn(BoundedContext context)","io.spine.server.delivery.Delivery.registerDispatchersIn"]},{"name":"void registerEventDispatcher(EventDispatcher dispatcher)","description":"io.spine.server.BoundedContext.registerEventDispatcher","location":"server/io.spine.server/-bounded-context/register-event-dispatcher.html","searchKeys":["registerEventDispatcher","void registerEventDispatcher(EventDispatcher dispatcher)","io.spine.server.BoundedContext.registerEventDispatcher"]},{"name":"void registerMirroredType(Repository<? extends Object, ? extends Object> repository)","description":"io.spine.system.server.MirrorRepository.registerMirroredType","location":"server/io.spine.system.server/-mirror-repository/register-mirrored-type.html","searchKeys":["registerMirroredType","void registerMirroredType(Repository<? extends Object, ? extends Object> repository)","io.spine.system.server.MirrorRepository.registerMirroredType"]},{"name":"void registerTypeSupplier(EventProducer producer)","description":"io.spine.server.stand.Stand.registerTypeSupplier","location":"server/io.spine.server.stand/-stand/register-type-supplier.html","searchKeys":["registerTypeSupplier","void registerTypeSupplier(EventProducer producer)","io.spine.server.stand.Stand.registerTypeSupplier"]},{"name":"void registerTypeSupplier(Repository<? extends Object, ? extends Object> repository)","description":"io.spine.server.stand.Stand.registerTypeSupplier","location":"server/io.spine.server.stand/-stand/register-type-supplier.html","searchKeys":["registerTypeSupplier","void registerTypeSupplier(Repository<? extends Object, ? extends Object> repository)","io.spine.server.stand.Stand.registerTypeSupplier"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.aggregate.AggregatePartRepository.registerWith","location":"server/io.spine.server.aggregate/-aggregate-part-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.aggregate.AggregatePartRepository.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.aggregate.AggregateRepository.registerWith","location":"server/io.spine.server.aggregate/-aggregate-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.aggregate.AggregateRepository.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.command.AbstractCommandDispatcher.registerWith","location":"server/io.spine.server.command/-abstract-command-dispatcher/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.command.AbstractCommandDispatcher.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.command.AbstractCommandHandler.registerWith","location":"server/io.spine.server.command/-abstract-command-handler/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.command.AbstractCommandHandler.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.command.AbstractCommander.registerWith","location":"server/io.spine.server.command/-abstract-commander/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.command.AbstractCommander.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.delivery.CatchUpProcess.registerWith","location":"server/io.spine.server.delivery/-catch-up-process/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.delivery.CatchUpProcess.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.entity.DefaultRecordBasedRepository.registerWith","location":"server/io.spine.server.entity/-default-record-based-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.entity.DefaultRecordBasedRepository.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.entity.EventDispatchingRepository.registerWith","location":"server/io.spine.server.entity/-event-dispatching-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.entity.EventDispatchingRepository.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.entity.Repository.registerWith","location":"server/io.spine.server.entity/-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.entity.Repository.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.event.AbstractEventReactor.registerWith","location":"server/io.spine.server.event/-abstract-event-reactor/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.event.AbstractEventReactor.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.event.AbstractEventSubscriber.registerWith","location":"server/io.spine.server.event/-abstract-event-subscriber/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.event.AbstractEventSubscriber.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.event.EventBus.registerWith","location":"server/io.spine.server.event/-event-bus/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.event.EventBus.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.event.store.DefaultEventStore.registerWith","location":"server/io.spine.server.event.store/-default-event-store/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.event.store.DefaultEventStore.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.event.store.EmptyEventStore.registerWith","location":"server/io.spine.server.event.store/-empty-event-store/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.event.store.EmptyEventStore.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.integration.IntegrationBroker.registerWith","location":"server/io.spine.server.integration/-integration-broker/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.integration.IntegrationBroker.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.procman.ProcessManagerRepository.registerWith","location":"server/io.spine.server.procman/-process-manager-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.procman.ProcessManagerRepository.registerWith"]},{"name":"void registerWith(BoundedContext context)","description":"io.spine.server.projection.ProjectionRepository.registerWith","location":"server/io.spine.server.projection/-projection-repository/register-with.html","searchKeys":["registerWith","void registerWith(BoundedContext context)","io.spine.server.projection.ProjectionRepository.registerWith"]},{"name":"void remember(Iterable<Event> events)","description":"io.spine.server.entity.TransactionalEntity.remember","location":"server/io.spine.server.entity/-transactional-entity/remember.html","searchKeys":["remember","void remember(Iterable<Event> events)","io.spine.server.entity.TransactionalEntity.remember"]},{"name":"void removeObserver(StreamObserver<ExternalMessage> observer)","description":"io.spine.server.transport.Subscriber.removeObserver","location":"server/io.spine.server.transport/-subscriber/remove-observer.html","searchKeys":["removeObserver","void removeObserver(StreamObserver<ExternalMessage> observer)","io.spine.server.transport.Subscriber.removeObserver"]},{"name":"void reset()","description":"io.spine.server.ServerEnvironment.reset","location":"server/io.spine.server/-server-environment/reset.html","searchKeys":["reset","void reset()","io.spine.server.ServerEnvironment.reset"]},{"name":"void run(Runnable operation)","description":"io.spine.server.tenant.TenantAwareRunner.run","location":"server/io.spine.server.tenant/-tenant-aware-runner/run.html","searchKeys":["run","void run(Runnable operation)","io.spine.server.tenant.TenantAwareRunner.run"]},{"name":"void runTransactionFor(P projection)","description":"io.spine.server.projection.ProjectionEndpoint.runTransactionFor","location":"server/io.spine.server.projection/-projection-endpoint/run-transaction-for.html","searchKeys":["runTransactionFor","void runTransactionFor(P projection)","io.spine.server.projection.ProjectionEndpoint.runTransactionFor"]},{"name":"void schedule(Command command)","description":"io.spine.server.commandbus.CommandScheduler.schedule","location":"server/io.spine.server.commandbus/-command-scheduler/schedule.html","searchKeys":["schedule","void schedule(Command command)","io.spine.server.commandbus.CommandScheduler.schedule"]},{"name":"void scheduleCommandsUsing(Supplier<CommandScheduler> commandScheduler)","description":"io.spine.server.ServerEnvironment.scheduleCommandsUsing","location":"server/io.spine.server/-server-environment/schedule-commands-using.html","searchKeys":["scheduleCommandsUsing","void scheduleCommandsUsing(Supplier<CommandScheduler> commandScheduler)","io.spine.server.ServerEnvironment.scheduleCommandsUsing"]},{"name":"void setArchived(boolean archived)","description":"io.spine.server.entity.AbstractEntity.setArchived","location":"server/io.spine.server.entity/-abstract-entity/set-archived.html","searchKeys":["setArchived","void setArchived(boolean archived)","io.spine.server.entity.AbstractEntity.setArchived"]},{"name":"void setDeleted(boolean deleted)","description":"io.spine.server.entity.AbstractEntity.setDeleted","location":"server/io.spine.server.entity/-abstract-entity/set-deleted.html","searchKeys":["setDeleted","void setDeleted(boolean deleted)","io.spine.server.entity.AbstractEntity.setDeleted"]},{"name":"void setSnapshotTrigger(int snapshotTrigger)","description":"io.spine.server.aggregate.AggregateRepository.setSnapshotTrigger","location":"server/io.spine.server.aggregate/-aggregate-repository/set-snapshot-trigger.html","searchKeys":["setSnapshotTrigger","void setSnapshotTrigger(int snapshotTrigger)","io.spine.server.aggregate.AggregateRepository.setSnapshotTrigger"]},{"name":"void setupCommandRouting(CommandRouting<I> routing)","description":"io.spine.server.aggregate.AggregateRepository.setupCommandRouting","location":"server/io.spine.server.aggregate/-aggregate-repository/setup-command-routing.html","searchKeys":["setupCommandRouting","void setupCommandRouting(CommandRouting<I> routing)","io.spine.server.aggregate.AggregateRepository.setupCommandRouting"]},{"name":"void setupCommandRouting(CommandRouting<I> routing)","description":"io.spine.server.procman.ProcessManagerRepository.setupCommandRouting","location":"server/io.spine.server.procman/-process-manager-repository/setup-command-routing.html","searchKeys":["setupCommandRouting","void setupCommandRouting(CommandRouting<I> routing)","io.spine.server.procman.ProcessManagerRepository.setupCommandRouting"]},{"name":"void setupCustomMapping(Builder<Class<?>, ColumnTypeMapping<?, ? extends R>> builder)","description":"io.spine.server.entity.storage.AbstractColumnMapping.setupCustomMapping","location":"server/io.spine.server.entity.storage/-abstract-column-mapping/setup-custom-mapping.html","searchKeys":["setupCustomMapping","void setupCustomMapping(Builder<Class<?>, ColumnTypeMapping<?, ? extends R>> builder)","io.spine.server.entity.storage.AbstractColumnMapping.setupCustomMapping"]},{"name":"void setupEventRouting(EventRouting<I> routing)","description":"io.spine.server.aggregate.AggregateRepository.setupEventRouting","location":"server/io.spine.server.aggregate/-aggregate-repository/setup-event-routing.html","searchKeys":["setupEventRouting","void setupEventRouting(EventRouting<I> routing)","io.spine.server.aggregate.AggregateRepository.setupEventRouting"]},{"name":"void setupEventRouting(EventRouting<I> routing)","description":"io.spine.server.entity.EventDispatchingRepository.setupEventRouting","location":"server/io.spine.server.entity/-event-dispatching-repository/setup-event-routing.html","searchKeys":["setupEventRouting","void setupEventRouting(EventRouting<I> routing)","io.spine.server.entity.EventDispatchingRepository.setupEventRouting"]},{"name":"void setupEventRouting(EventRouting<I> routing)","description":"io.spine.server.procman.ProcessManagerRepository.setupEventRouting","location":"server/io.spine.server.procman/-process-manager-repository/setup-event-routing.html","searchKeys":["setupEventRouting","void setupEventRouting(EventRouting<I> routing)","io.spine.server.procman.ProcessManagerRepository.setupEventRouting"]},{"name":"void setupEventRouting(EventRouting<I> routing)","description":"io.spine.server.projection.ProjectionRepository.setupEventRouting","location":"server/io.spine.server.projection/-projection-repository/setup-event-routing.html","searchKeys":["setupEventRouting","void setupEventRouting(EventRouting<I> routing)","io.spine.server.projection.ProjectionRepository.setupEventRouting"]},{"name":"void setupEventRouting(EventRouting<MirrorId> routing)","description":"io.spine.system.server.MirrorRepository.setupEventRouting","location":"server/io.spine.system.server/-mirror-repository/setup-event-routing.html","searchKeys":["setupEventRouting","void setupEventRouting(EventRouting<MirrorId> routing)","io.spine.system.server.MirrorRepository.setupEventRouting"]},{"name":"void setupImportRouting(EventRouting<I> routing)","description":"io.spine.server.aggregate.AggregateRepository.setupImportRouting","location":"server/io.spine.server.aggregate/-aggregate-repository/setup-import-routing.html","searchKeys":["setupImportRouting","void setupImportRouting(EventRouting<I> routing)","io.spine.server.aggregate.AggregateRepository.setupImportRouting"]},{"name":"void setupStateRouting(StateUpdateRouting<I> routing)","description":"io.spine.server.projection.ProjectionRepository.setupStateRouting","location":"server/io.spine.server.projection/-projection-repository/setup-state-routing.html","searchKeys":["setupStateRouting","void setupStateRouting(StateUpdateRouting<I> routing)","io.spine.server.projection.ProjectionRepository.setupStateRouting"]},{"name":"void shutdown()","description":"io.spine.server.GrpcContainer.shutdown","location":"server/io.spine.server/-grpc-container/shutdown.html","searchKeys":["shutdown","void shutdown()","io.spine.server.GrpcContainer.shutdown"]},{"name":"void shutdown()","description":"io.spine.server.Server.shutdown","location":"server/io.spine.server/-server/shutdown.html","searchKeys":["shutdown","void shutdown()","io.spine.server.Server.shutdown"]},{"name":"void shutdown()","description":"io.spine.server.commandbus.CommandScheduler.shutdown","location":"server/io.spine.server.commandbus/-command-scheduler/shutdown.html","searchKeys":["shutdown","void shutdown()","io.spine.server.commandbus.CommandScheduler.shutdown"]},{"name":"void shutdown()","description":"io.spine.server.commandbus.ExecutorCommandScheduler.shutdown","location":"server/io.spine.server.commandbus/-executor-command-scheduler/shutdown.html","searchKeys":["shutdown","void shutdown()","io.spine.server.commandbus.ExecutorCommandScheduler.shutdown"]},{"name":"void shutdownAndWait()","description":"io.spine.server.Server.shutdownAndWait","location":"server/io.spine.server/-server/shutdown-and-wait.html","searchKeys":["shutdownAndWait","void shutdownAndWait()","io.spine.server.Server.shutdownAndWait"]},{"name":"void shutdownNowAndWait()","description":"io.spine.server.GrpcContainer.shutdownNowAndWait","location":"server/io.spine.server/-grpc-container/shutdown-now-and-wait.html","searchKeys":["shutdownNowAndWait","void shutdownNowAndWait()","io.spine.server.GrpcContainer.shutdownNowAndWait"]},{"name":"void start()","description":"io.spine.server.GrpcContainer.start","location":"server/io.spine.server/-grpc-container/start.html","searchKeys":["start","void start()","io.spine.server.GrpcContainer.start"]},{"name":"void start()","description":"io.spine.server.Server.start","location":"server/io.spine.server/-server/start.html","searchKeys":["start","void start()","io.spine.server.Server.start"]},{"name":"void start(Executor executor)","description":"io.spine.server.GrpcContainer.start","location":"server/io.spine.server/-grpc-container/start.html","searchKeys":["start","void start(Executor executor)","io.spine.server.GrpcContainer.start"]},{"name":"void store(CatchUp updatedState)","description":"io.spine.server.delivery.CatchUpProcess.store","location":"server/io.spine.server.delivery/-catch-up-process/store.html","searchKeys":["store","void store(CatchUp updatedState)","io.spine.server.delivery.CatchUpProcess.store"]},{"name":"void store(Collection<E> entities)","description":"io.spine.server.entity.RecordBasedRepository.store","location":"server/io.spine.server.entity/-record-based-repository/store.html","searchKeys":["store","void store(Collection<E> entities)","io.spine.server.entity.RecordBasedRepository.store"]},{"name":"void store(E entity)","description":"io.spine.server.entity.RecordBasedRepository.store","location":"server/io.spine.server.entity/-record-based-repository/store.html","searchKeys":["store","void store(E entity)","io.spine.server.entity.RecordBasedRepository.store"]},{"name":"void store(Iterable<Command> commands)","description":"io.spine.server.commandbus.CommandBus.store","location":"server/io.spine.server.commandbus/-command-bus/store.html","searchKeys":["store","void store(Iterable<Command> commands)","io.spine.server.commandbus.CommandBus.store"]},{"name":"void store(Iterable<Event> events)","description":"io.spine.server.aggregate.ImportBus.store","location":"server/io.spine.server.aggregate/-import-bus/store.html","searchKeys":["store","void store(Iterable<Event> events)","io.spine.server.aggregate.ImportBus.store"]},{"name":"void store(Iterable<Event> events)","description":"io.spine.server.event.EventBus.store","location":"server/io.spine.server.event/-event-bus/store.html","searchKeys":["store","void store(Iterable<Event> events)","io.spine.server.event.EventBus.store"]},{"name":"void subscribe(ShardObserver observer)","description":"io.spine.server.delivery.Delivery.subscribe","location":"server/io.spine.server.delivery/-delivery/subscribe.html","searchKeys":["subscribe","void subscribe(ShardObserver observer)","io.spine.server.delivery.Delivery.subscribe"]},{"name":"void subscribe(Subscription subscription)","description":"io.spine.server.stand.Stand.subscribe","location":"server/io.spine.server.stand/-stand/subscribe.html","searchKeys":["subscribe","void subscribe(Subscription subscription)","io.spine.server.stand.Stand.subscribe"]},{"name":"void subscribe(Topic topic, StreamObserver<Subscription> responseObserver)","description":"io.spine.server.SubscriptionService.subscribe","location":"server/io.spine.server/-subscription-service/subscribe.html","searchKeys":["subscribe","void subscribe(Topic topic, StreamObserver<Subscription> responseObserver)","io.spine.server.SubscriptionService.subscribe"]},{"name":"void subscribe(Topic topic, StreamObserver<Subscription> responseObserver)","description":"io.spine.server.stand.Stand.subscribe","location":"server/io.spine.server.stand/-stand/subscribe.html","searchKeys":["subscribe","void subscribe(Topic topic, StreamObserver<Subscription> responseObserver)","io.spine.server.stand.Stand.subscribe"]},{"name":"void toCatchUp(I entityId)","description":"io.spine.server.delivery.Inbox.EventDestinations.toCatchUp","location":"server/io.spine.server.delivery/-inbox/-event-destinations/to-catch-up.html","searchKeys":["toCatchUp","void toCatchUp(I entityId)","io.spine.server.delivery.Inbox.EventDestinations.toCatchUp"]},{"name":"void toHandler(I entityId)","description":"io.spine.server.delivery.Inbox.CommandDestinations.toHandler","location":"server/io.spine.server.delivery/-inbox/-command-destinations/to-handler.html","searchKeys":["toHandler","void toHandler(I entityId)","io.spine.server.delivery.Inbox.CommandDestinations.toHandler"]},{"name":"void toImporter(I entityId)","description":"io.spine.server.delivery.Inbox.EventDestinations.toImporter","location":"server/io.spine.server.delivery/-inbox/-event-destinations/to-importer.html","searchKeys":["toImporter","void toImporter(I entityId)","io.spine.server.delivery.Inbox.EventDestinations.toImporter"]},{"name":"void toReactor(I entityId)","description":"io.spine.server.delivery.Inbox.EventDestinations.toReactor","location":"server/io.spine.server.delivery/-inbox/-event-destinations/to-reactor.html","searchKeys":["toReactor","void toReactor(I entityId)","io.spine.server.delivery.Inbox.EventDestinations.toReactor"]},{"name":"void toSubscriber(I entityId)","description":"io.spine.server.delivery.Inbox.EventDestinations.toSubscriber","location":"server/io.spine.server.delivery/-inbox/-event-destinations/to-subscriber.html","searchKeys":["toSubscriber","void toSubscriber(I entityId)","io.spine.server.delivery.Inbox.EventDestinations.toSubscriber"]},{"name":"void truncateOlderThan(int snapshotIndex)","description":"io.spine.server.aggregate.AggregateStorage.truncateOlderThan","location":"server/io.spine.server.aggregate/-aggregate-storage/truncate-older-than.html","searchKeys":["truncateOlderThan","void truncateOlderThan(int snapshotIndex)","io.spine.server.aggregate.AggregateStorage.truncateOlderThan"]},{"name":"void truncateOlderThan(int snapshotIndex, Timestamp date)","description":"io.spine.server.aggregate.AggregateStorage.truncateOlderThan","location":"server/io.spine.server.aggregate/-aggregate-storage/truncate-older-than.html","searchKeys":["truncateOlderThan","void truncateOlderThan(int snapshotIndex, Timestamp date)","io.spine.server.aggregate.AggregateStorage.truncateOlderThan"]},{"name":"void unregister()","description":"io.spine.server.delivery.Inbox.unregister","location":"server/io.spine.server.delivery/-inbox/unregister.html","searchKeys":["unregister","void unregister()","io.spine.server.delivery.Inbox.unregister"]},{"name":"void unregister(D dispatcher)","description":"io.spine.server.bus.Bus.unregister","location":"server/io.spine.server.bus/-bus/unregister.html","searchKeys":["unregister","void unregister(D dispatcher)","io.spine.server.bus.Bus.unregister"]},{"name":"void unregister(D dispatcher)","description":"io.spine.server.bus.DispatcherRegistry.unregister","location":"server/io.spine.server.bus/-dispatcher-registry/unregister.html","searchKeys":["unregister","void unregister(D dispatcher)","io.spine.server.bus.DispatcherRegistry.unregister"]},{"name":"void unregister(EventDispatcher dispatcher)","description":"io.spine.server.integration.IntegrationBroker.unregister","location":"server/io.spine.server.integration/-integration-broker/unregister.html","searchKeys":["unregister","void unregister(EventDispatcher dispatcher)","io.spine.server.integration.IntegrationBroker.unregister"]},{"name":"void unregister(EventDispatcher dispatcher)","description":"io.spine.system.server.NoOpSystemReadSide.unregister","location":"server/io.spine.system.server/-no-op-system-read-side/unregister.html","searchKeys":["unregister","void unregister(EventDispatcher dispatcher)","io.spine.system.server.NoOpSystemReadSide.unregister"]},{"name":"void unregisterAll()","description":"io.spine.server.bus.DispatcherRegistry.unregisterAll","location":"server/io.spine.server.bus/-dispatcher-registry/unregister-all.html","searchKeys":["unregisterAll","void unregisterAll()","io.spine.server.bus.DispatcherRegistry.unregisterAll"]},{"name":"void updateBuilder(Builder builder, E entity)","description":"io.spine.server.entity.StorageConverter.updateBuilder","location":"server/io.spine.server.entity/-storage-converter/update-builder.html","searchKeys":["updateBuilder","void updateBuilder(Builder builder, E entity)","io.spine.server.entity.StorageConverter.updateBuilder"]},{"name":"void write(CatchUpId id, CatchUp record)","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.write","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/write.html","searchKeys":["write","void write(CatchUpId id, CatchUp record)","io.spine.server.storage.memory.InMemoryCatchUpStorage.write"]},{"name":"void write(CatchUp message)","description":"io.spine.server.storage.memory.InMemoryCatchUpStorage.write","location":"server/io.spine.server.storage.memory/-in-memory-catch-up-storage/write.html","searchKeys":["write","void write(CatchUp message)","io.spine.server.storage.memory.InMemoryCatchUpStorage.write"]},{"name":"void write(I id, AggregateHistory events)","description":"io.spine.server.aggregate.AggregateStorage.write","location":"server/io.spine.server.aggregate/-aggregate-storage/write.html","searchKeys":["write","void write(I id, AggregateHistory events)","io.spine.server.aggregate.AggregateStorage.write"]},{"name":"void write(I id, EntityRecordWithColumns record)","description":"io.spine.server.storage.RecordStorage.write","location":"server/io.spine.server.storage/-record-storage/write.html","searchKeys":["write","void write(I id, EntityRecordWithColumns record)","io.spine.server.storage.RecordStorage.write"]},{"name":"void write(I id, EntityRecord record)","description":"io.spine.server.storage.RecordStorage.write","location":"server/io.spine.server.storage/-record-storage/write.html","searchKeys":["write","void write(I id, EntityRecord record)","io.spine.server.storage.RecordStorage.write"]},{"name":"void write(Map<I, EntityRecordWithColumns> records)","description":"io.spine.server.storage.RecordStorage.write","location":"server/io.spine.server.storage/-record-storage/write.html","searchKeys":["write","void write(Map<I, EntityRecordWithColumns> records)","io.spine.server.storage.RecordStorage.write"]},{"name":"void write(ShardSessionRecord session)","description":"io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.write","location":"server/io.spine.server.delivery.memory/-in-memory-sharded-work-registry/write.html","searchKeys":["write","void write(ShardSessionRecord session)","io.spine.server.delivery.memory.InMemoryShardedWorkRegistry.write"]},{"name":"void writeLifecycleFlags(I id, LifecycleFlags flags)","description":"io.spine.server.storage.RecordStorage.writeLifecycleFlags","location":"server/io.spine.server.storage/-record-storage/write-lifecycle-flags.html","searchKeys":["writeLifecycleFlags","void writeLifecycleFlags(I id, LifecycleFlags flags)","io.spine.server.storage.RecordStorage.writeLifecycleFlags"]},{"name":"void writeRecord(I id, EntityRecordWithColumns record)","description":"io.spine.server.projection.ProjectionStorage.writeRecord","location":"server/io.spine.server.projection/-projection-storage/write-record.html","searchKeys":["writeRecord","void writeRecord(I id, EntityRecordWithColumns record)","io.spine.server.projection.ProjectionStorage.writeRecord"]},{"name":"void writeRecord(I id, EntityRecordWithColumns record)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.writeRecord","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/write-record.html","searchKeys":["writeRecord","void writeRecord(I id, EntityRecordWithColumns record)","io.spine.server.storage.memory.InMemoryRecordStorage.writeRecord"]},{"name":"void writeRecords(Map<I, EntityRecordWithColumns> records)","description":"io.spine.server.projection.ProjectionStorage.writeRecords","location":"server/io.spine.server.projection/-projection-storage/write-records.html","searchKeys":["writeRecords","void writeRecords(Map<I, EntityRecordWithColumns> records)","io.spine.server.projection.ProjectionStorage.writeRecords"]},{"name":"void writeRecords(Map<I, EntityRecordWithColumns> records)","description":"io.spine.server.storage.memory.InMemoryRecordStorage.writeRecords","location":"server/io.spine.server.storage.memory/-in-memory-record-storage/write-records.html","searchKeys":["writeRecords","void writeRecords(Map<I, EntityRecordWithColumns> records)","io.spine.server.storage.memory.InMemoryRecordStorage.writeRecords"]}]
