/*
 * Copyright 2021, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This script configures Java Compiler.
 */

println("`javac-args.gradle` script is deprecated. Please use `JavaCompile.configureJavac()` " +
        "and `JavaCompile.configureErrorProne()` utilities instead.")

tasks.withType(JavaCompile) {

    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
        throw new GradleException("Spine Event Engine can be built with JDK 8 only." +
                " Supporting JDK 11 and above at build-time is planned in 2.0 release." +
                " Please use the pre-built binaries available in the Spine Maven repository." +
                " See https://github.com/SpineEventEngine/base/issues/457.")
    }

    // Explicitly states the encoding of the source and test source files, ensuring
    // correct execution of the `javac` task.
    //
    // Also promotes compiler warnings to errors, so that the build fails on warnings.
    // This includes Error Prone warnings
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        // The last command line argument is temporarily commented out because of
        // this issue: https://github.com/SpineEventEngine/config/issues/173
        // Please restore when the issue is resolved.
        //   << "-Werror"

    // Configure Error Prone:
    // 1. Exclude generated sources from being analyzed by Error Prone.
    // 2. Turn the check off until Error Prone can handle `@Nested` JUnit classes.
    //    See issue: https://github.com/google/error-prone/issues/956
    // 3. Turn off checks which report unused methods and unused method parameters.
    //    See issue: https://github.com/SpineEventEngine/config/issues/61
    //
    // For more config details see:
    //    https://github.com/tbroyer/gradle-errorprone-plugin/tree/master#usage

    options.errorprone.errorproneArgs.addAll('-XepExcludedPaths:.*/generated/.*',
                                             '-Xep:ClassCanBeStatic:OFF',
                                             '-Xep:UnusedMethod:OFF',
                                             '-Xep:UnusedVariable:OFF',
                                             '-Xep:CheckReturnValue:OFF',
                                             '-Xep:FloggerSplitLogStatement:OFF')
}
