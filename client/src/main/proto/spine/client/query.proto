//
// Copyright 2017, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.client;

option (type_url_prefix) = "type.spine3.org";
option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_outer_classname = "QueryProto";
option java_package = "org.spine3.client";


import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";

import "spine/annotations.proto";
import "spine/ui/language.proto";
import "spine/base/response.proto";
import "spine/client/entities.proto";


message QueryContext {

    ui.Language language = 1;

    //TODO:2015-12-16:alexander.yevsyukov: Finish
    // extend with (see CommandContext for details):
    //    users.UserId actor = 2 [(required) = true];
    //    time.ZoneOffset zone_offset = 4 [(required) = true];
    //              here should come language with index 5.
    //    google.protobuf.Timestamp timestamp = 6 [(required) = true];
}

// The main abstraction over the read-side API.
//
// Allows clients to form the requests to the read-side through the `QueryService`.
// `Query` execution typically results in a QueryResponse object.
//
message Query {

    // Defines the entity of interest, e.g. entity type URL and a set of fetch criteria.
    Target target = 1;

    // Field mask to be applied to the items of the query result.
    google.protobuf.FieldMask field_mask = 2;

    // Reserved for utility fields like query creation date, required response timeframe etc.
    reserved 3 to 6;
}

// The result of `Query` processing.
//
// Contains the actual processing results and other response attributes.
// Used as a result of `QueryService.Read(Query)` gRPC method call.
//
message QueryResponse {

    // Represents the base part of the response. I.e. whether the `Query` has been acked or not.
    base.Response response = 1;

    // Reserved for more query response attributes, e.g. to describe paginated response etc.
    reserved 2 to 4;

    //TODO:2017-02-20:alexander.yevsyukov: Use EntityRecord instead of Any.
    // Entity states (each packed as `Any`) returned to the API user as a result of Query execution.
    repeated google.protobuf.Any messages = 5;
}
