//
// Copyright 2017, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.base;

option (type_url_prefix) = "type.spine3.org";
option java_package = "org.spine3.base";
option java_multiple_files = true;
option java_outer_classname = "EnrichmentProto";
option java_generate_equals_and_hash = true;

import "google/protobuf/any.proto";

import "spine/annotations.proto";

// The message containing enrichment attributes for the outer message.
//
// A message can be enriched with one or more messages.
// Or, this process can be disabled.
//
// Examples of enriched messages: `Event` and `Failure`.
//
message Enrichment {

    oneof mode {

        // The instruction not to enrich the outer message.
        bool do_not_enrich = 1;

        // The container for the enrichments.
        Container container = 2;
    }

    // A container for event enrichments.
    //
    // This wrapper type is required because maps are not allowed in `oneof`s.
    //
    message Container {

        // A map from a fully qualified Protobuf type name of an enrichment,
        // to its wrapped instance.
        map<string, google.protobuf.Any> items = 1;
    }
}
