/*
 * Copyright 2018, TeamDev Ltd. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// Common build file for the tests with same configuration

buildscript {

    // Applying from `ext.gradle` inside the `buildscript` section to reuse the properties.
    //
    // As long as `buildscript` section is always evaluated first, we need to apply
    // `ext.gradle` explicitly here.
    //
    // NOTE: this file is copied from the root project in the test setup.
    apply from: 'ext.gradle'

    repositories {
        mavenLocal()
        mavenCentral()

        maven { url = 'http://maven.teamdev.com/repository/spine' }
        maven { url = 'http://maven.teamdev.com/repository/spine-snapshots' }
    }

    dependencies {
        classpath "com.google.protobuf:protobuf-java:${protobufVersion}"
        classpath "com.google.protobuf:protobuf-gradle-plugin:${protobufGradlePluginVerison}"
        classpath "io.spine.tools:spine-model-verifier:${spineVersion}"
    }

    configurations.all({
        resolutionStrategy.cacheChangingModulesFor(0, 'seconds')
    })
}

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: 'io.spine.tools.spine-model-verifier'

// NOTE: this file is copied from the root project in the test setup.
apply from: 'ext.gradle'


repositories {
    mavenLocal()
    mavenCentral()

    maven { url = 'http://maven.teamdev.com/repository/spine' }
    maven { url = 'http://maven.teamdev.com/repository/spine-snapshots' }
}

compileJava {
    options.compilerArgs += ["-processor", "io.spine.model.assemble.AssignLookup", "-AspineDirRoot=${rootDir}"]
}

dependencies {

    compile group: 'com.google.protobuf', name:'protobuf-java', version: protobufVersion

    compileOnly group: 'io.spine.tools', name: 'spine-model-assembler', version: spineVersion
}

sourceSets {
    main {
        proto.srcDirs += ["$projectDir/src/main/proto"]
        java.srcDirs += ["$projectDir/generated/main/java",
                        "$projectDir/generated/main/spine"]
        resources.srcDirs += ["$projectDir/generated/main/resources"]
    }
}
