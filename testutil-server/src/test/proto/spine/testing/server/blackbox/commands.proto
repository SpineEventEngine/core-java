/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.testing.server.blackbox;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.testing.server.blackbox.command";
option java_outer_classname = "TestIntCommandsProto";
option java_multiple_files = true;

import "spine/testing/server/blackbox/entities.proto";
import "spine/testing/server/blackbox/report.proto";
import "spine/core/user_id.proto";

message BbCreateProject {
    BbProjectId project_id = 1;
}

message BbInitProject {
    BbProjectId project_id = 1;

    // The project team.
    repeated spine.core.UserId member = 2 [(required) = true];

    // If absent, the project methodology is not Scrum.
    spine.core.UserId scrum_master = 3;
}

message BbAssignTeam {
    BbProjectId project_id = 1;
    repeated spine.core.UserId member = 2 [(required) = true];
}

message BbAssignSelf {
    BbProjectId project_id = 1;
}

message BbAssignScrumMaster {
    BbProjectId project_id = 1;
    spine.core.UserId scrum_master = 2 [(required) = true];
}

message BbAddTask {
    BbProjectId project_id = 1;
    BbTask task = 2 [(required) = true];
}

message BbStartProject {
    BbProjectId project_id = 1;
}

message BbCreateReport {
    BbReportId report_id = 1;
    repeated BbProjectId project_id = 2;
}

// Add the user to the list of project assignees.
message BbAssignProject {
    BbProjectId id = 1;
    spine.core.UserId user_id = 2;
}

message BbFinalizeProject {
    BbProjectId project_id = 1;
}

message BbRegisterCommandDispatcher {
    string dispatcher_name = 1;
}

message BbFailProject {
    BbProjectId project_id = 1;
}
