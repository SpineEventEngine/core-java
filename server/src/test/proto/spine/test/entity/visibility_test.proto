/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.test.visibility;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.test.entity";
option java_multiple_files = true;
option java_outer_classname = "VisibilityTestProto";

import "spine/core/user_id.proto";
import "spine/net/url.proto";
import "spine/time/time.proto";

// A non-visible aggregate.
//
message Password {
    option (entity).kind = AGGREGATE;

    core.UserId user_id = 1;

    string password = 2;

    sint64 hash = 3;
}

// A visible for querying aggregate.
//
message AccountDetails {
    option (entity) = {kind: AGGREGATE visibility: QUERY};

    core.UserId user_id = 1;

    string display_name = 2;

    net.Url avatar_url = 3;
}

// A visible for subscription aggregate.
//
message UserActivity {
    option (entity) = {kind: AGGREGATE visibility: SUBSCRIBE};

    core.UserId user_id = 1;

    repeated net.Url post_url = 2;
}

// A visible aggregate.
//
message LastSeen {
    option (entity) = {kind: AGGREGATE visibility: FULL};

    core.UserId user_id = 1;

    time.ZonedDateTime when = 2;
}

// A non-visible procman.
//
message UserSignIn {
    option (entity).kind = PROCESS_MANAGER;

    core.UserId user_id = 1;

    string password = 2;

    uint32 attempts = 3;
}

// A visible projection.
//
message UserFeed {
    option (entity).kind = PROJECTION;

    core.UserId user_id = 1;

    repeated net.Url post_url = 2;
}
