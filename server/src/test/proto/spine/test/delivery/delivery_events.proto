/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.test.delivery;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.test.delivery";
option java_outer_classname = "DeliveryTestEventsProto";
option java_multiple_files = true;

import "spine/core/user_id.proto";

message NumberAdded {
    option (is).java_type = "io.spine.server.delivery.given.CalculatorSignal";

    string calculator_id = 1;

    int32 value = 2;
}

message NumberImported {
    option (is).java_type = "io.spine.server.delivery.given.CalculatorSignal";

    string calculator_id = 1;

    int32 value = 2;
}

message NumberReacted {
    option (is).java_type = "io.spine.server.delivery.given.CalculatorSignal";

    string calculator_id = 1;

    int32 value = 2;
}

message DTaskCreated {

    string id = 1;
}

message DTaskAssigned {

    string id = 1;

    spine.core.UserId assignee = 2;
}

message PositiveNumberEmitted {

    string id = 1;

    int32 value = 2 [(min).value = "1"];
}

message NegativeNumberEmitted {

    string id = 1;

    int32 value = 2 [(max).value = "-1"];
}
