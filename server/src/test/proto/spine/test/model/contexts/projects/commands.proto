/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.test.model;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package="io.spine.model.contexts.projects.command";
option java_outer_classname = "ProjectCommandsProto";
option java_multiple_files = true;

import "spine/core/user_id.proto";
import "spine/test/model/contexts/projects/project.proto";

//
// Commands for the method signature tests.
////////////////

message SigCreateProject {
    option (is).java_type="io.spine.server.model.given.SignatureTestCommand";

    ProjectId id = 1;
}

message SigStartProject {
    option (is).java_type="io.spine.server.model.given.SignatureTestCommand";

    ProjectId id = 1;
}

message SigStopProject {

    ProjectId id = 1;
}

message SigCreateTask {

    TaskId id = 1;
    Task task = 2;
    bool start = 3;
}

message SigStartTask {

    TaskId id = 1;
}

message SigPauseTask {

    TaskId id = 1;
}

message SigStopTask {

    TaskId id = 1;
}

message SigAddTaskToProject {
    ProjectId id = 1;
    TaskId task = 2;
}

message SigRemoveTaskFromProject {
    ProjectId id = 1;
    TaskId task = 2;
}

message SigMoveTask {
    TaskId id = 1;
    ProjectId from_project = 2;
    ProjectId to_project = 3;
}

message SigDeleteTask {
    TaskId id = 2;
}

message SigAssignTask {
    TaskId task_id = 1;
    core.UserId assignee = 2;
}

message SigSetProjectOwner {
    ProjectId id = 1;
    core.UserId owner = 2;
}
