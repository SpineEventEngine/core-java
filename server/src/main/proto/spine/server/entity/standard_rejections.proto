//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.server.entity;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option (SPI_all) = true;
option java_package = "io.spine.server.entity.rejection";
// Keep all the rejections under the same outer class called `StandardRejections`.
option java_generate_equals_and_hash = true;

import "google/protobuf/any.proto";

// The rejection thrown when a request for modification of an entity cannot be satisfied
// because the entity is marked as `archived`.
message CannotModifyArchivedEntity {

    // The ID of the archived entity.
    google.protobuf.Any entity_id = 1;
}

// The rejection thrown when a request for modification of an entity cannot be satisfied
// because the entity is marked as `deleted`.
message CannotModifyDeletedEntity {

    // The ID of the deleted entity.
    google.protobuf.Any entity_id = 1;
}

// The rejection thrown when a request to mark the entity as `archived`
// is received for the already archived entity.
message EntityAlreadyArchived {

    // The ID of the archived entity.
    google.protobuf.Any entity_id = 1;
}

// The rejection thrown when a request to mark the entity as `deleted`
// is received for the entity which is already marked as `deleted`.
message EntityAlreadyDeleted {

    // The ID of the entity which is already marked as `deleted`.
    google.protobuf.Any entity_id = 1;
}
