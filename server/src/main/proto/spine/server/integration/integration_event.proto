//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.server.integration;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.server.integration";
option java_multiple_files = true;
option java_outer_classname = "IntegrationEventProto";
option java_generate_equals_and_hash = true;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

import "spine/core/event.proto";
import "spine/core/bounded_context.proto";

// An integration event is sent between loosely coupled parts of a system.
// Typically these parts would be implemented as Bounded Contexts.
message IntegrationEvent {

    // An event message wrapped to `Any`.
    google.protobuf.Any message = 1;

    // A context of the event.
    IntegrationEventContext context = 2;
}

// Meta-information about an event.
message IntegrationEventContext {

    // An id of the event.
    core.EventId event_id = 1;

    // When the event occurred.
    google.protobuf.Timestamp timestamp = 2;

    // Name of the Bounded Context which generated the event.
    core.BoundedContextName bounded_context_name = 3;

    // An id of an entity which generated the event.
    // Examples of event producers are: aggregates, process managers (which generate `CommandRouted` event).
    google.protobuf.Any producer_id = 4;

    // Service attributes that the system may store in addition to the domain attributes
    // defined in the event message.
    map<string, google.protobuf.Any> attributes = 5;
}
