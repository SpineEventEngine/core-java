/*
 * Copyright 2022, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
syntax = "proto3";

package spine.system.server;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option java_package = "io.spine.system.server";
option java_outer_classname = "MirrorProto";
option java_multiple_files = true;

import "google/protobuf/any.proto";

import "spine/core/version.proto";
import "spine/server/entity/entity.proto";

// A state of a domain aggregate represented in the associated System context.
//
message Mirror {
    option (entity).kind = PROJECTION;

    MirrorId id = 1 [(required) = true, (validate) = true];

    // The state of the aggregate.
    google.protobuf.Any state = 2 [(required) = false, (validate) = true];

    // The lifecycle flags of the aggregate.
    //
    // This field is here for convenience. The own lifecycle flags of a mirror projection duplicate
    // the flags of corresponding aggregate.
    //
    spine.server.entity.LifecycleFlags lifecycle = 3;

    // Custom entity columns of the aggregate.
    EntityColumns columns = 4;

    // The version of the aggregate.
    core.Version version = 5;

    // The aggregate type URL.
    string aggregate_type = 6 [(column) = true];
}

// An ID of a mirror projection.
//
message MirrorId {

    // The ID of the corresponding aggregate packed as Any.
    google.protobuf.Any value = 1 [(required) = true, (validate) = true];

    string type_url = 2 [(required) = true];
}

// Entity columns of the associated aggregate.
message EntityColumns {

    // TODO:2018-09-06:dmytro.dashenkov: Support entity columns.
    // https://github.com/SpineEventEngine/core-java/issues/400

    map<string, google.protobuf.Any> columns = 1;
}
